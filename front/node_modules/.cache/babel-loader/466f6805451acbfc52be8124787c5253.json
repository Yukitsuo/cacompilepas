{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Pages/Personal.tsx\";\nimport React from 'react';\nimport '../../css/Personal.css';\nimport Request from \"../../API/Request\";\n\nclass Personal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      personalInformation: [],\n      ownedLobbies: []\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.renderPersonalInformation = this.renderPersonalInformation.bind(this);\n    this.fillIcon = this.fillIcon.bind(this);\n    this.getIcon = this.getIcon.bind(this);\n  }\n\n  componentDidMount() {\n    new Request('/connection/personal/0', this.fetchData);\n  }\n\n  getIcon() {\n    new Request('/connection/getIcon/' + this.state.personalInformation['id_user'], this.fillIcon, 'POST', {\n      path: this.state.personalInformation['icon']\n    }, 'json', 'blob');\n  }\n\n  fillIcon(data) {\n    const img = document.getElementById('personal-icon-' + this.state.personalInformation['id_user']);\n    const blob = new Blob([data], {\n      type: 'image/jpg'\n    });\n    img.src = URL.createObjectURL(blob);\n  }\n\n  fetchData(data) {\n    this.setState({\n      personalInformation: data[0],\n      ownedLobbies: data[1]\n    }, this.getIcon);\n  }\n\n  renderPersonalInformation() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, undefined !== this.state.personalInformation ? this.state.personalInformation['first_name'] : 'rien');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Page perso\", this.renderPersonalInformation(), React.createElement(\"img\", {\n      id: 'personal-icon-' + this.state.personalInformation['id_user'],\n      className: 'personal-icon',\n      alt: 'Personal icon',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Personal;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Pages/Personal.tsx"],"names":["React","Request","Personal","Component","constructor","props","state","personalInformation","ownedLobbies","fetchData","bind","renderPersonalInformation","fillIcon","getIcon","componentDidMount","path","data","img","document","getElementById","blob","Blob","type","src","URL","createObjectURL","setState","undefined","render"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAO,wBAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAOA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAA2D;AAChDC,EAAAA,WAAP,CAAmBC,KAAnB,EAA+B;AAC3B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAE,EADZ;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BD,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKG,OAAL,GAAe,KAAKA,OAAL,CAAaH,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAEMI,EAAAA,iBAAP,GAAiC;AAC7B,QAAIb,OAAJ,CACI,wBADJ,EAEI,KAAKQ,SAFT;AAIH;;AAEMI,EAAAA,OAAP,GAAuB;AACnB,QAAIZ,OAAJ,CACI,yBAAyB,KAAKK,KAAL,CAAWC,mBAAX,CAA+B,SAA/B,CAD7B,EAEI,KAAKK,QAFT,EAGI,MAHJ,EAII;AACIG,MAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,mBAAX,CAA+B,MAA/B;AADV,KAJJ,EAOI,MAPJ,EAQI,MARJ;AAUH;;AAEMK,EAAAA,QAAP,CAAgBI,IAAhB,EAAkC;AAC9B,UAAMC,GAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAmB,KAAKb,KAAL,CAAWC,mBAAX,CAA+B,SAA/B,CAA3C,CAAjB;AACA,UAAMa,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACL,IAAD,CAAT,EAAiB;AAACM,MAAAA,IAAI,EAAE;AAAP,KAAjB,CAAb;AACAL,IAAAA,GAAG,CAACM,GAAJ,GAAUC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAV;AACH;;AAEMX,EAAAA,SAAP,CAAiBO,IAAjB,EAA4B;AACxB,SAAKU,QAAL,CAAc;AACVnB,MAAAA,mBAAmB,EAAES,IAAI,CAAC,CAAD,CADf;AAEVR,MAAAA,YAAY,EAAEQ,IAAI,CAAC,CAAD;AAFR,KAAd,EAII,KAAKH,OAJT;AAKH;;AAEMF,EAAAA,yBAAP,GAA8C;AAC1C,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIgB,SAAS,KAAK,KAAKrB,KAAL,CAAWC,mBAAzB,GAA+C,KAAKD,KAAL,CAAWC,mBAAX,CAA+B,YAA/B,CAA/C,GAA8F,MAAlG,CAAP;AACH;;AAEMqB,EAAAA,MAAP,GAA2B;AACvB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEK,KAAKjB,yBAAL,EAFL,EAGI;AACI,MAAA,EAAE,EAAE,mBAAmB,KAAKL,KAAL,CAAWC,mBAAX,CAA+B,SAA/B,CAD3B;AAEI,MAAA,SAAS,EAAE,eAFf;AAGI,MAAA,GAAG,EAAE,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAWH;;AA/DsD;;AAkE3D,eAAeL,QAAf","sourcesContent":["import React, {ReactNode} from 'react';\nimport '../../css/Personal.css';\nimport Request from \"../../API/Request\";\n\ninterface PersonalState {\n    personalInformation: any,\n    ownedLobbies: [],\n}\n\nclass Personal extends React.Component<any, PersonalState> {\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            personalInformation: [],\n            ownedLobbies: [],\n        }\n        this.fetchData = this.fetchData.bind(this);\n        this.renderPersonalInformation = this.renderPersonalInformation.bind(this);\n        this.fillIcon = this.fillIcon.bind(this);\n        this.getIcon = this.getIcon.bind(this);\n    }\n\n    public componentDidMount(): void {\n        new Request(\n            '/connection/personal/0',\n            this.fetchData,\n        );\n    }\n\n    public getIcon(): void {\n        new Request(\n            '/connection/getIcon/' + this.state.personalInformation['id_user'],\n            this.fillIcon,\n            'POST',\n            {\n                path: this.state.personalInformation['icon'],\n            },\n            'json',\n            'blob',\n        );\n    }\n\n    public fillIcon(data: Blob): void {\n        const img: any = document.getElementById('personal-icon-' + this.state.personalInformation['id_user']);\n        const blob = new Blob([data], {type: 'image/jpg'});\n        img.src = URL.createObjectURL(blob);\n    }\n\n    public fetchData(data: any) {\n        this.setState({\n            personalInformation: data[0],\n            ownedLobbies: data[1],\n        },\n            this.getIcon);\n    }\n\n    public renderPersonalInformation(): ReactNode {\n        return <p>{undefined !== this.state.personalInformation ? this.state.personalInformation['first_name'] : 'rien'}</p>\n    }\n\n    public render(): ReactNode {\n        return (\n            <div>\n                Page perso\n                {this.renderPersonalInformation()}\n                <img\n                    id={'personal-icon-' + this.state.personalInformation['id_user']}\n                    className={'personal-icon'}\n                    alt={'Personal icon'}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Personal;\n"]},"metadata":{},"sourceType":"module"}