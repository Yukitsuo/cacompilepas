{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Pages/LobbyCreation.tsx\";\nimport React from 'react';\nimport Request from \"../../API/Request\";\nimport DropBox from \"../General/DropBox\";\nimport Input from \"../General/Input\";\nimport InputArea from \"../General/InputArea\";\n\nclass LobbyCreation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: -1,\n      label: '',\n      description: '',\n      isPrivate: true,\n      logo: null\n    };\n    this.checkIfOk = this.checkIfOk.bind(this);\n    this.createLobby = this.createLobby.bind(this);\n    this.handleLabelChange = this.handleLabelChange.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.toggleVisibility = this.toggleVisibility.bind(this);\n    this.fillLogo = this.fillLogo.bind(this);\n    this.getLogo = this.getLogo.bind(this);\n    this.handleLogoDrop = this.handleLogoDrop.bind(this);\n    this.handleLogoChange = this.handleLogoChange.bind(this);\n  }\n\n  handleLabelChange(event) {\n    this.setState({\n      label: event.target.value\n    });\n  }\n\n  handleDescriptionChange(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  toggleVisibility(event) {\n    this.setState((state, props) => {\n      return {\n        isPrivate: true === state.isPrivate ? false : true\n      };\n    });\n  }\n\n  fillLogo(data) {\n    const img = document.getElementById('lobby-logo' + this.state.id);\n    const blob = new Blob([data], {\n      type: 'image/jpg'\n    });\n    img.src = URL.createObjectURL(blob);\n  }\n\n  checkIfOk(data) {\n    this.setState({\n      id: data['id_lobby']\n    });\n    console.log(data);\n  }\n\n  getLogo() {\n    new Request('/lobby/getLogo/0', this.fillLogo, 'POST', {\n      idLobby: this.state.id,\n      path: this.state.logoPath\n    }, 'json', 'blob');\n  }\n\n  handleLogoDrop(event) {\n    event.preventDefault();\n    this.setState({\n      logo: event.dataTransfer.files[0]\n    }, this.getLogo);\n  }\n\n  handleLogoChange(event) {\n    // @ts-ignore\n    this.setState( // @ts-ignore\n    {\n      logo: event.target.files[0]\n    }, this.getLogo);\n  }\n\n  createLobby(event) {\n    let formData = new FormData();\n    formData.append('label', this.state.label);\n    formData.append('description', this.state.description);\n    formData.append('private', '' + this.state.isPrivate); // @ts-ignore\n\n    formData.append('file', this.state.logo);\n    new Request('/lobby/create/' + -1, this.checkIfOk, 'POST', formData, // @ts-ignore\n    this.state.logo.type);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Lobby creation\", React.createElement(Input, {\n      id: 'labelInput',\n      inputType: 'text',\n      placeholder: 'Titre du lobby (n\\'en mets pas un trop long)',\n      checked: false,\n      className: 'mt-5',\n      onChange: this.handleLabelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(InputArea, {\n      id: 'descriptionInput',\n      placeholder: 'Nouvelle description du lobby\\nRacontes-y ce que tu veux, du moment que ça reste dans le thème de ton lobby',\n      className: 'col-lg-6 col-md-6 col-sm-6 col-xs-6',\n      textAreaClassName: '',\n      rows: 5,\n      onChange: this.handleDescriptionChange,\n      disabled: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(DropBox, {\n      id: 'logo-upload-input',\n      className: '',\n      labelNotDragged: 'Glisse un logo par ici !',\n      labelDragged: 'Logo déposé !',\n      accept: 'image/*',\n      backgroundClassName: '',\n      handleFileDrop: this.handleFileDrop,\n      handleFileChange: this.handleLogoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: 'visibilitInput',\n      inputType: 'checkbox',\n      checked: 'true' === this.state.isPrivate ? true : false,\n      placeholder: '',\n      className: 'user-rights-checkbox',\n      onChange: this.toggleVisibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LobbyCreation;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Pages/LobbyCreation.tsx"],"names":["React","Request","DropBox","Input","InputArea","LobbyCreation","Component","constructor","props","state","id","label","description","isPrivate","logo","checkIfOk","bind","createLobby","handleLabelChange","handleDescriptionChange","toggleVisibility","fillLogo","getLogo","handleLogoDrop","handleLogoChange","event","setState","target","value","data","img","document","getElementById","blob","Blob","type","src","URL","createObjectURL","console","log","idLobby","path","logoPath","preventDefault","dataTransfer","files","formData","FormData","append","render","handleFileDrop"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, ReactNode} from 'react';\nimport Request from \"../../API/Request\";\nimport DropBox from \"../General/DropBox\";\nimport Input from \"../General/Input\";\nimport InputArea from \"../General/InputArea\";\n\ninterface LobbyCreationState {\n    id: int,\n    label: string,\n    description: string,\n    isPrivate: boolean,\n    logo: File | null,\n}\n\nclass LobbyCreation extends React.Component<any, LobbyCreationState> {\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            id: -1,\n            label: '',\n            description: '',\n            isPrivate: true,\n            logo: null,\n        }\n        this.checkIfOk = this.checkIfOk.bind(this);\n        this.createLobby = this.createLobby.bind(this);\n        this.handleLabelChange = this.handleLabelChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n        this.toggleVisibility = this.toggleVisibility.bind(this);\n        this.fillLogo = this.fillLogo.bind(this);\n        this.getLogo = this.getLogo.bind(this);\n        this.handleLogoDrop = this.handleLogoDrop.bind(this);\n        this.handleLogoChange = this.handleLogoChange.bind(this);\n    }\n\n    public handleLabelChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({label: event.target.value});\n    }\n\n    public handleDescriptionChange(event: ChangeEvent<HTMLTextAreaElement>): void {\n        this.setState({description: event.target.value});\n    }\n\n    public toggleVisibility(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState((state, props) => {\n            return {isPrivate: true === state.isPrivate ? false : true};\n        });\n    }\n\n    public fillLogo(data: Blob): void {\n        const img: any = document.getElementById('lobby-logo' + this.state.id);\n        const blob = new Blob([data], {type: 'image/jpg'});\n        img.src = URL.createObjectURL(blob);\n    }\n\n    public checkIfOk(data: any): void {\n        this.setState({id: data['id_lobby']});\n        console.log(data);\n    }\n\n    public getLogo(): void {\n        new Request(\n            '/lobby/getLogo/0',\n            this.fillLogo,\n            'POST',\n            {\n                idLobby: this.state.id,\n                path: this.state.logoPath,\n            },\n            'json',\n            'blob',\n        );\n    }\n\n    public handleLogoDrop(event: React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n        this.setState(\n            {logo: event.dataTransfer.files[0]},\n            this.getLogo\n        );\n    }\n\n    public handleLogoChange(event: ChangeEvent<HTMLInputElement>): void {\n        // @ts-ignore\n        this.setState(\n            // @ts-ignore\n            {logo: event.target.files[0]},\n            this.getLogo\n        );\n    }\n\n    public createLobby(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        let formData = new FormData();\n        formData.append('label', this.state.label);\n        formData.append('description', this.state.description);\n        formData.append('private', '' + this.state.isPrivate);\n        // @ts-ignore\n        formData.append('file', this.state.logo);\n        new Request(\n            '/lobby/create/' + -1,\n            this.checkIfOk,\n            'POST',\n            formData,\n            // @ts-ignore\n            this.state.logo.type,\n        );\n    }\n\n    public render(): ReactNode {\n        return (\n            <div>\n                Lobby creation\n                <Input id={'labelInput'}\n                       inputType={'text'}\n                       placeholder={'Titre du lobby (n\\'en mets pas un trop long)'}\n                       checked={false}\n                       className={'mt-5'} onChange={this.handleLabelChange}/>\n                <InputArea id={'descriptionInput'}\n                           placeholder={'Nouvelle description du lobby\\nRacontes-y ce que tu veux, du moment que ça reste dans le thème de ton lobby'}\n                           className={'col-lg-6 col-md-6 col-sm-6 col-xs-6'}\n                           textAreaClassName={''}\n                           rows={5}\n                           onChange={this.handleDescriptionChange}\n                           disabled={false}\n                />\n                <DropBox\n                    id={'logo-upload-input'}\n                    className={''}\n                    labelNotDragged={'Glisse un logo par ici !'}\n                    labelDragged={'Logo déposé !'}\n                    accept={'image/*'}\n                    backgroundClassName={''}\n                    handleFileDrop={this.handleFileDrop}\n                    handleFileChange={this.handleLogoChange}\n                />\n                <Input\n                    id={'visibilitInput'}\n                    inputType={'checkbox'}\n                    checked={'true' === this.state.isPrivate ? true : false}\n                    placeholder={''}\n                    className={'user-rights-checkbox'}\n                    onChange={this.toggleVisibility}\n                />\n            </div>\n        );\n    }\n}\n\nexport default LobbyCreation;\n"]},"metadata":{},"sourceType":"module"}