{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Pages/Personal.tsx\";\nimport React from 'react';\nimport Request from \"../../API/Request\";\n\nclass Personal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      personalInformation: [],\n      ownedLobbies: []\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.renderPersonalInformation = this.renderPersonalInformation.bind(this);\n  }\n\n  componentDidMount() {\n    new Request('/connection/personal/0', this.fetchData);\n  }\n\n  getIcon() {\n    console.log(this.state.personalInformation);\n    new Request('/connection/getIcon/' + this.state.personalInformation['id_user'], this.fillIcon, 'POST', {\n      path: this.state.personalInformation['icon']\n    }, 'json', 'blob');\n  }\n\n  fillIcon(data) {\n    console.log(this.props.personalInformation);\n    const img = document.getElementById('icon-' + this.props.personalInformation['id_user']);\n    console.log(img);\n    const blob = new Blob([data], {\n      type: 'image/jpg'\n    });\n    img.src = URL.createObjectURL(blob);\n  }\n\n  fetchData(data) {\n    this.setState({\n      personalInformation: data[0],\n      ownedLobbies: data[1]\n    }, this.getIcon);\n  }\n\n  renderPersonalInformation() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, undefined !== this.state.personalInformation ? this.state.personalInformation['first_name'] : 'rien');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Page perso\", this.renderPersonalInformation(), React.createElement(\"img\", {\n      id: 'icon-' + this.props.id,\n      alt: 'User icon',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Personal;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Pages/Personal.tsx"],"names":["React","Request","Personal","Component","constructor","props","state","personalInformation","ownedLobbies","fetchData","bind","renderPersonalInformation","componentDidMount","getIcon","console","log","fillIcon","path","data","img","document","getElementById","blob","Blob","type","src","URL","createObjectURL","setState","undefined","render","id"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAOA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAA2D;AAChDC,EAAAA,WAAP,CAAmBC,KAAnB,EAA+B;AAC3B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAE,EADZ;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BD,IAA/B,CAAoC,IAApC,CAAjC;AACH;;AAEME,EAAAA,iBAAP,GAAiC;AAC7B,QAAIX,OAAJ,CACI,wBADJ,EAEI,KAAKQ,SAFT;AAIH;;AAEMI,EAAAA,OAAP,GAAuB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,mBAAvB;AACA,QAAIN,OAAJ,CACI,yBAAyB,KAAKK,KAAL,CAAWC,mBAAX,CAA+B,SAA/B,CAD7B,EAEI,KAAKS,QAFT,EAGI,MAHJ,EAII;AACIC,MAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,mBAAX,CAA+B,MAA/B;AADV,KAJJ,EAOI,MAPJ,EAQI,MARJ;AAUH;;AAEMS,EAAAA,QAAP,CAAgBE,IAAhB,EAAkC;AAC9BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWE,mBAAvB;AACA,UAAMY,GAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAU,KAAKhB,KAAL,CAAWE,mBAAX,CAA+B,SAA/B,CAAlC,CAAjB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AAEA,UAAMG,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACL,IAAD,CAAT,EAAiB;AAACM,MAAAA,IAAI,EAAE;AAAP,KAAjB,CAAb;AACAL,IAAAA,GAAG,CAACM,GAAJ,GAAUC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAV;AACH;;AAEMb,EAAAA,SAAP,CAAiBS,IAAjB,EAA4B;AACxB,SAAKU,QAAL,CAAc;AACVrB,MAAAA,mBAAmB,EAAEW,IAAI,CAAC,CAAD,CADf;AAEVV,MAAAA,YAAY,EAAEU,IAAI,CAAC,CAAD;AAFR,KAAd,EAII,KAAKL,OAJT;AAKH;;AAEMF,EAAAA,yBAAP,GAA8C;AAC1C,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIkB,SAAS,KAAK,KAAKvB,KAAL,CAAWC,mBAAzB,GAA+C,KAAKD,KAAL,CAAWC,mBAAX,CAA+B,YAA/B,CAA/C,GAA8F,MAAlG,CAAP;AACH;;AAEMuB,EAAAA,MAAP,GAA2B;AACvB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEK,KAAKnB,yBAAL,EAFL,EAGI;AAAK,MAAA,EAAE,EAAE,UAAU,KAAKN,KAAL,CAAW0B,EAA9B;AAAkC,MAAA,GAAG,EAAE,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AA7DsD;;AAgE3D,eAAe7B,QAAf","sourcesContent":["import React, {ReactNode} from 'react';\nimport Request from \"../../API/Request\";\n\ninterface PersonalState {\n    personalInformation: any,\n    ownedLobbies: [],\n}\n\nclass Personal extends React.Component<any, PersonalState> {\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            personalInformation: [],\n            ownedLobbies: [],\n        }\n        this.fetchData = this.fetchData.bind(this);\n        this.renderPersonalInformation = this.renderPersonalInformation.bind(this);\n    }\n\n    public componentDidMount(): void {\n        new Request(\n            '/connection/personal/0',\n            this.fetchData,\n        );\n    }\n\n    public getIcon(): void {\n        console.log(this.state.personalInformation);\n        new Request(\n            '/connection/getIcon/' + this.state.personalInformation['id_user'],\n            this.fillIcon,\n            'POST',\n            {\n                path: this.state.personalInformation['icon'],\n            },\n            'json',\n            'blob',\n        );\n    }\n\n    public fillIcon(data: Blob): void {\n        console.log(this.props.personalInformation);\n        const img: any = document.getElementById('icon-' + this.props.personalInformation['id_user']);\n        console.log(img);\n\n        const blob = new Blob([data], {type: 'image/jpg'});\n        img.src = URL.createObjectURL(blob);\n    }\n\n    public fetchData(data: any) {\n        this.setState({\n            personalInformation: data[0],\n            ownedLobbies: data[1],\n        },\n            this.getIcon);\n    }\n\n    public renderPersonalInformation(): ReactNode {\n        return <p>{undefined !== this.state.personalInformation ? this.state.personalInformation['first_name'] : 'rien'}</p>\n    }\n\n    public render(): ReactNode {\n        return (\n            <div>\n                Page perso\n                {this.renderPersonalInformation()}\n                <img id={'icon-' + this.props.id} alt={'User icon'}/>\n            </div>\n        );\n    }\n}\n\nexport default Personal;\n"]},"metadata":{},"sourceType":"module"}