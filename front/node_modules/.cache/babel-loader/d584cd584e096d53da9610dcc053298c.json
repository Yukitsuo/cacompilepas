{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/Security/PrivateRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ReactComponent as Loader } from \"@svgr/webpack?-svgo,+titleProp,+ref!../img/loader.svg\";\nimport Request from \"../API/Request\";\n\n// Redirects to login page if token is not valid or doesn't exist\nclass PrivateRoute extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Pending (''), connected ('true'), not connected ('false')\n      status: ''\n    };\n    this.setState = this.setState.bind(this);\n    this.updateToken = this.updateToken.bind(this);\n    this.checkToken = this.checkToken.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkToken();\n  }\n\n  updateToken(data) {\n    if (data['token_exists']) {\n      this.setState({\n        status: 'true'\n      });\n    } else {\n      this.setState({\n        status: 'false'\n      });\n      localStorage.setItem('token', '');\n    }\n  }\n\n  checkToken() {\n    console.log('hello');\n\n    if (undefined !== localStorage.getItem('token') && '' !== localStorage.getItem('token')) {\n      // Check if token is valid\n      new Request('/connection/verification', this.updateToken);\n    } else {\n      this.setState({\n        status: 'false'\n      });\n    }\n\n    console.log(this.state.status);\n  }\n\n  render() {\n    return React.createElement(Route, Object.assign({}, this.props.rest, {\n      render: props => {\n        // If there is a token and user is connected, render element\n        if (undefined !== localStorage.getItem('token') && '' !== localStorage.getItem('token') && 'true' === this.state.status) {\n          return React.createElement(this.props.component, this.props);\n        } else if ('false' === this.state.status) {\n          return React.createElement(Redirect, {\n            to: '/connexion/login',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(\"div\", {\n            className: 'mt-5',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(Loader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/usr/src/app/client/src/Security/PrivateRoute.tsx"],"names":["React","Route","Redirect","Request","PrivateRoute","PureComponent","constructor","props","state","status","setState","bind","updateToken","checkToken","componentDidMount","data","localStorage","setItem","console","log","undefined","getItem","render","rest","createElement","component"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,SACIC,KADJ,EAEIC,QAFJ,QAGO,kBAHP;;AAKA,OAAOC,OAAP,MAAoB,gBAApB;;AAQA;AACA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,aAAjC,CAAsF;AAE3EC,EAAAA,WAAP,CAAmBC,KAAnB,EAA6C;AACzC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEMG,EAAAA,iBAAP,GAAiC;AAC7B,SAAKD,UAAL;AACH;;AAEMD,EAAAA,WAAP,CAAmBG,IAAnB,EAAoC;AAChC,QAAIA,IAAI,CAAC,cAAD,CAAR,EAA0B;AACtB,WAAKL,QAAL,CAAc;AAACD,QAAAA,MAAM,EAAE;AAAT,OAAd;AACH,KAFD,MAEO;AACH,WAAKC,QAAL,CAAc;AAACD,QAAAA,MAAM,EAAE;AAAT,OAAd;AACAO,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,EAA9B;AACH;AACJ;;AAEMJ,EAAAA,UAAP,GAA0B;AACtBK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,QAAIC,SAAS,KAAKJ,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAd,IAA+C,OAAOL,YAAY,CAACK,OAAb,CAAqB,OAArB,CAA1D,EAAyF;AACrF;AACA,UAAIlB,OAAJ,CAAY,0BAAZ,EAAwC,KAAKS,WAA7C;AACH,KAHD,MAGO;AACH,WAAKF,QAAL,CAAc;AAACD,QAAAA,MAAM,EAAE;AAAT,OAAd;AACH;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,MAAvB;AACH;;AAEMa,EAAAA,MAAP,GAA2B;AACvB,WAAO,oBAAC,KAAD,oBACC,KAAKf,KAAL,CAAWgB,IADZ;AAEH,MAAA,MAAM,EAAGhB,KAAD,IAAW;AACf;AACA,YAAIa,SAAS,KAAKJ,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAd,IAA+C,OAAOL,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAtD,IAAuF,WAAW,KAAKb,KAAL,CAAWC,MAAjH,EAAyH;AACrH,iBAAOT,KAAK,CAACwB,aAAN,CAAoB,KAAKjB,KAAL,CAAWkB,SAA/B,EAA0C,KAAKlB,KAA/C,CAAP;AACH,SAFD,MAEO,IAAI,YAAY,KAAKC,KAAL,CAAWC,MAA3B,EAAmC;AACtC,iBAAO,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAE,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAFM,MAEA;AACH,iBAAO;AAAK,YAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAxB,CAAP;AACH;AACJ,OAXE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAcH;;AApDiF;;AAuDtF,eAAeL,YAAf","sourcesContent":["import React, {ReactNode} from 'react';\nimport {\n    Route,\n    Redirect,\n} from 'react-router-dom';\nimport {ReactComponent as Loader} from '../img/loader.svg';\nimport Request from \"../API/Request\";\n\ninterface PrivateRouteProps {\n    path: string,\n    component: any,\n    rest: [],\n}\n\n// Redirects to login page if token is not valid or doesn't exist\nclass PrivateRoute extends React.PureComponent<PrivateRouteProps, { status: string }> {\n\n    public constructor(props: PrivateRouteProps) {\n        super(props);\n        this.state = {\n            // Pending (''), connected ('true'), not connected ('false')\n            status: ''\n        }\n        this.setState = this.setState.bind(this);\n        this.updateToken = this.updateToken.bind(this);\n        this.checkToken = this.checkToken.bind(this);\n    }\n\n    public componentDidMount(): void {\n        this.checkToken();\n    }\n\n    public updateToken(data: any): void {\n        if (data['token_exists']) {\n            this.setState({status: 'true'});\n        } else {\n            this.setState({status: 'false'});\n            localStorage.setItem('token', '');\n        }\n    }\n\n    public checkToken(): void {\n        console.log('hello');\n        if (undefined !== localStorage.getItem('token') && '' !== localStorage.getItem('token')) {\n            // Check if token is valid\n            new Request('/connection/verification', this.updateToken);\n        } else {\n            this.setState({status: 'false'});\n        }\n        console.log(this.state.status);\n    }\n\n    public render(): ReactNode {\n        return <Route\n            {...this.props.rest}\n            render={(props) => {\n                // If there is a token and user is connected, render element\n                if (undefined !== localStorage.getItem('token') && '' !== localStorage.getItem('token') && 'true' === this.state.status) {\n                    return React.createElement(this.props.component, this.props);\n                } else if ('false' === this.state.status) {\n                    return <Redirect to={'/connexion/login'}/>;\n                } else {\n                    return <div className={'mt-5'}><Loader/></div>;\n                }\n            }\n            }\n        />\n    }\n}\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}