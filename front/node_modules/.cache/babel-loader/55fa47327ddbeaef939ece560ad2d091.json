{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/Request.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Request = props => {\n  const domain = 'http://localhost:80';\n\n  const _React$useContext = React.useContext(RequestContext),\n        JSONResponse = _React$useContext.state,\n        dispatch = _React$useContext.dispatch;\n\n  let route = '/';\n\n  if (undefined !== props.route.split(/\\//)[1]) {\n    route += '?module=' + props.route.split(/\\//)[1];\n\n    if (undefined !== props.route.split(/\\//)[2]) {\n      route += '&action=' + props.route.split(/\\//)[2];\n\n      if (undefined !== props.route.split(/\\//)[3]) {\n        route += '&param=' + props.route.split(/\\//)[3];\n      }\n    }\n  }\n\n  const method = props.method;\n  const data = props.data; // const [JSONResponse, setResponse] = useState(null);\n\n  useEffect(() => tryToConnect(JSONResponse, dispatch));\n\n  const tryToConnect = dispatch => {\n    fetch(domain + route, {\n      method: method,\n      headers: 'POST' === method ? {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      } : null,\n      body: 'POST' === method ? JSON.stringify(data) : null\n    }).then(response => response.json()).then(jsonResponse => {\n      setResponse(jsonResponse);\n      dispatch(JSONResponse);\n    }).catch(networkError => console.log(networkError));\n  };\n\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Connected: \", JSONResponse, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Vous avez cliqu\\xE9 \", count, \" fois\"));\n};\n\nexport default Request;","map":{"version":3,"sources":["/usr/src/app/client/src/Request.js"],"names":["React","useState","useEffect","Request","props","domain","useContext","RequestContext","JSONResponse","state","dispatch","route","undefined","split","method","data","tryToConnect","fetch","headers","body","JSON","stringify","then","response","json","jsonResponse","setResponse","catch","networkError","console","log","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,MAAM,GAAG,qBAAf;;AADyB,4BAKrBL,KAAK,CAACM,UAAN,CAAiBC,cAAjB,CALqB;AAAA,QAGhBC,YAHgB,qBAGvBC,KAHuB;AAAA,QAIvBC,QAJuB,qBAIvBA,QAJuB;;AAMzB,MAAIC,KAAK,GAAG,GAAZ;;AACA,MAAIC,SAAS,KAAKR,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,IAAAA,KAAK,IAAI,aAAaP,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAtB;;AACA,QAAID,SAAS,KAAKR,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,MAAAA,KAAK,IAAI,aAAaP,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAtB;;AACA,UAAID,SAAS,KAAKR,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,QAAAA,KAAK,IAAI,YAAYP,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAArB;AACD;AACF;AACF;;AACD,QAAMC,MAAM,GAAGV,KAAK,CAACU,MAArB;AACA,QAAMC,IAAI,GAAGX,KAAK,CAACW,IAAnB,CAjByB,CAkBzB;;AACAb,EAAAA,SAAS,CAAC,MAAMc,YAAY,CAACR,YAAD,EAAeE,QAAf,CAAnB,CAAT;;AACA,QAAMM,YAAY,GAAIN,QAAD,IAAc;AACjCO,IAAAA,KAAK,CAACZ,MAAM,GAAGM,KAAV,EAAiB;AACpBG,MAAAA,MAAM,EAAEA,MADY;AAEpBI,MAAAA,OAAO,EAAE,WAAWJ,MAAX,GAAoB;AAC3B,kBAAU,kBADiB;AAE3B,wBAAgB;AAFW,OAApB,GAGL,IALgB;AAMpBK,MAAAA,IAAI,EAAE,WAAWL,MAAX,GAAoBM,IAAI,CAACC,SAAL,CAAeN,IAAf,CAApB,GAA2C;AAN7B,KAAjB,CAAL,CAQCO,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARlB,EASCF,IATD,CASMG,YAAY,IAAI;AACpBC,MAAAA,WAAW,CAACD,YAAD,CAAX;AACAf,MAAAA,QAAQ,CAACF,YAAD,CAAR;AACD,KAZD,EAaCmB,KAbD,CAaOC,YAAY,IAAIC,OAAO,CAACC,GAAR,CAAYF,YAAZ,CAbvB;AAcD,GAfD;;AAgBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBpB,YAAhB,EAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBuB,KAAtB,UAA7B,CAAP;AACD,CArCD;;AAuCA,eAAe5B,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Request = (props) => {\n  const domain = 'http://localhost:80';\n  const {\n    state: JSONResponse,\n    dispatch\n  } = React.useContext(RequestContext);\n  let route = '/';\n  if (undefined !== props.route.split(/\\//)[1]) {\n    route += '?module=' + props.route.split(/\\//)[1];\n    if (undefined !== props.route.split(/\\//)[2]) {\n      route += '&action=' + props.route.split(/\\//)[2];\n      if (undefined !== props.route.split(/\\//)[3]) {\n        route += '&param=' + props.route.split(/\\//)[3];\n      }\n    }\n  }\n  const method = props.method;\n  const data = props.data;\n  // const [JSONResponse, setResponse] = useState(null);\n  useEffect(() => tryToConnect(JSONResponse, dispatch))\n  const tryToConnect = (dispatch) => {\n    fetch(domain + route, {\n      method: method,\n      headers: 'POST' === method ? {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      } : null,\n      body: 'POST' === method ? JSON.stringify(data) : null\n    })\n    .then(response => response.json())\n    .then(jsonResponse => {\n      setResponse(jsonResponse);\n      dispatch(JSONResponse);\n    })\n    .catch(networkError => console.log(networkError));\n  }\n  return <h1>Connected: {JSONResponse}<h2>Vous avez cliqu√© {count} fois</h2></h1>;\n}\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}