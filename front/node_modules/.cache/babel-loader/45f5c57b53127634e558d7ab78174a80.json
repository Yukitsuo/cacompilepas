{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/usr/src/app/client/src/Request.js\";\nimport React, { useState } from 'react';\n\nconst Request = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const domain = 'http://localhost:80';\n  let route = '/';\n\n  if (undefined !== props.route.split(/\\//)[1]) {\n    route += '?module=' + props.route.split(/\\//)[1];\n\n    if (undefined !== props.route.split(/\\//)[2]) {\n      route += '&action=' + props.route.split(/\\//)[2];\n\n      if (undefined !== props.route.split(/\\//)[3]) {\n        route += '&param=' + props.route.split(/\\//)[3];\n      }\n    }\n  }\n\n  const method = props.method;\n  const data = props.data;\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        connected = _useState4[0],\n        setConnected = _useState4[1];\n\n  console.log(data);\n  let JSONResponse = null;\n  console.log('route', domain + route);\n\n  function displayConn() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, connected);\n  }\n\n  fetch(domain + route, {\n    method: method,\n    headers: 'POST' === method ? {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    } : null,\n    body: 'POST' === method ? JSON.stringify(data) : null\n  }).then(response => response.json()).then(jsonResponse => {\n    JSONResponse = jsonResponse;\n    console.log(JSONResponse);\n    setConnected(true);\n    console.log('conn', connected);\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Connected: \", connected, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Vous avez cliqu\\xE9 \", count, \" fois\"));\n  }).catch(networkError => console.log(networkError));\n};\n\nexport default Request;","map":{"version":3,"sources":["/usr/src/app/client/src/Request.js"],"names":["React","useState","Request","props","count","setCount","domain","route","undefined","split","method","data","connected","setConnected","console","log","JSONResponse","displayConn","fetch","headers","body","JSON","stringify","then","response","json","jsonResponse","catch","networkError"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,oBACCF,QAAQ,CAAC,CAAD,CADT;AAAA;AAAA,QAClBG,KADkB;AAAA,QACXC,QADW;;AAEzB,QAAMC,MAAM,GAAG,qBAAf;AACA,MAAIC,KAAK,GAAG,GAAZ;;AACA,MAAIC,SAAS,KAAKL,KAAK,CAACI,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,IAAAA,KAAK,IAAI,aAAaJ,KAAK,CAACI,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAtB;;AACA,QAAID,SAAS,KAAKL,KAAK,CAACI,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,MAAAA,KAAK,IAAI,aAAaJ,KAAK,CAACI,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAtB;;AACA,UAAID,SAAS,KAAKL,KAAK,CAACI,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,QAAAA,KAAK,IAAI,YAAYJ,KAAK,CAACI,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAArB;AACD;AACF;AACF;;AACD,QAAMC,MAAM,GAAGP,KAAK,CAACO,MAArB;AACA,QAAMC,IAAI,GAAGR,KAAK,CAACQ,IAAnB;;AAdyB,qBAeSV,QAAQ,CAAC,KAAD,CAfjB;AAAA;AAAA,QAelBW,SAfkB;AAAA,QAePC,YAfO;;AAgBzBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,MAAIK,YAAY,GAAG,IAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,MAAM,GAAGC,KAA9B;;AACA,WAASU,WAAT,GAAuB;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,SAAL,CAAP;AACD;;AACDM,EAAAA,KAAK,CAACZ,MAAM,GAAGC,KAAV,EAAiB;AACpBG,IAAAA,MAAM,EAAEA,MADY;AAEpBS,IAAAA,OAAO,EAAE,WAAWT,MAAX,GAAoB;AAC3B,gBAAU,kBADiB;AAE3B,sBAAgB;AAFW,KAApB,GAGL,IALgB;AAMpBU,IAAAA,IAAI,EAAE,WAAWV,MAAX,GAAoBW,IAAI,CAACC,SAAL,CAAeX,IAAf,CAApB,GAA2C;AAN7B,GAAjB,CAAL,CAQCY,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARlB,EASCF,IATD,CASMG,YAAY,IAAI;AACpBV,IAAAA,YAAY,GAAGU,YAAf;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,SAApB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBA,SAAjB,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAsBR,KAAtB,UAA5B,CAAP;AACD,GAfD,EAgBCuB,KAhBD,CAgBOC,YAAY,IAAId,OAAO,CAACC,GAAR,CAAYa,YAAZ,CAhBvB;AAiBD,CAvCD;;AAyCA,eAAe1B,OAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Request = (props) => {\n  const [count, setCount] = useState(0);\n  const domain = 'http://localhost:80';\n  let route = '/';\n  if (undefined !== props.route.split(/\\//)[1]) {\n    route += '?module=' + props.route.split(/\\//)[1];\n    if (undefined !== props.route.split(/\\//)[2]) {\n      route += '&action=' + props.route.split(/\\//)[2];\n      if (undefined !== props.route.split(/\\//)[3]) {\n        route += '&param=' + props.route.split(/\\//)[3];\n      }\n    }\n  }\n  const method = props.method;\n  const data = props.data;\n  const [connected, setConnected] = useState(false);\n  console.log(data);\n  let JSONResponse = null;\n  console.log('route', domain + route);\n  function displayConn() {\n    return <p>{ connected }</p>;\n  }\n  fetch(domain + route, {\n    method: method,\n    headers: 'POST' === method ? {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    } : null,\n    body: 'POST' === method ? JSON.stringify(data) : null\n  })\n  .then(response => response.json())\n  .then(jsonResponse => {\n    JSONResponse = jsonResponse;\n    console.log(JSONResponse);\n    setConnected(true);\n    console.log('conn', connected);\n    return <h1>Connected: { connected }<h2>Vous avez cliqu√© {count} fois</h2></h1>;\n  })\n  .catch(networkError => console.log(networkError));\n}\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}