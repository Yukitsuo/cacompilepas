{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/DropBox.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as DropBoxLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/usable-image-icon.svg\";\nimport { pdfjs, Document, Page } from 'react-pdf';\nconst Heading = styled.p`\n  color: #5757e7;\n  text-align: center;\n`;\n\nclass DropBoxBackground extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#ffffff',\n        width: '220px',\n        height: '145px'\n      },\n      className: 'rounded pt-4 ' + this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.children, React.createElement(Heading, {\n      active: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.props.label));\n  }\n\n}\n\nclass DropBox extends React.Component {\n  // private file: File | null;\n  constructor(props) {\n    super(props); // this.file = null;\n\n    this.state = {\n      draggingState: '',\n      dragged: false,\n      label: this.props.labelNotDragged,\n      src: '',\n      file: null\n    };\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleFileDrop = this.handleFileDrop.bind(this);\n    this.handleDragEnter = this.handleDragEnter.bind(this);\n    this.handleDragExit = this.handleDragExit.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.updateFilePreview = this.updateFilePreview.bind(this);\n    this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n    this.renderLogo = this.renderLogo.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.labelDragged === 'dragged') {\n      console.log('ok');\n    }\n  }\n\n  handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  handleFileDrop(event) {\n    this.props.handleFileDrop(event); // event.preventDefault();\n    // this.file = event.dataTransfer.files[0];\n\n    this.setState({\n      dragged: true\n    });\n    this.setState({\n      label: this.props.labelDragged\n    });\n    this.setState({\n      draggingState: 'not dragging'\n    });\n    this.updateFilePreview(event.dataTransfer.files[0]);\n  }\n\n  handleDragEnter(event) {\n    console.log('drag enter');\n    this.setState({\n      label: this.props.labelNotDragged\n    });\n    this.setState({\n      draggingState: 'dragging'\n    });\n  }\n\n  handleDragExit(event) {\n    console.log('drag exit');\n\n    if (this.state.dragged) {\n      this.setState({\n        label: this.props.labelDragged\n      });\n    } else {\n      this.setState({\n        label: this.props.labelNotDragged\n      });\n    }\n\n    this.setState({\n      draggingState: 'not dragging'\n    });\n  }\n\n  handleFileChange(event) {\n    this.props.handleFileChange(event);\n    this.setState({\n      dragged: true\n    });\n    this.setState({\n      label: this.props.labelDragged\n    });\n    this.setState({\n      draggingState: 'not dragging'\n    }); // @ts-ignore\n\n    this.updateFilePreview(event.target.files[0]);\n  }\n\n  updateFilePreview(file) {\n    let reader = new FileReader();\n    this.setState({\n      file: file\n    });\n    console.log('begin');\n\n    if (file.type === 'application/pdf') {\n      pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n    } else {\n      reader.addEventListener('load', () => {\n        // @ts-ignore\n        this.setState({\n          src: reader.result\n        });\n      });\n\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n\n  onDocumentLoadSuccess() {}\n\n  renderLogo() {\n    if (this.state.dragged) {\n      // @ts-ignore\n      if (this.state.file.type.includes('image')) {\n        return React.createElement(\"img\", {\n          id: 'draggedLogo',\n          src: this.state.src,\n          alt: 'Logo',\n          style: {\n            width: '100px',\n            height: '100px',\n            borderRadius: '50px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Document, {\n          file: this.state.file,\n          onLoadSuccess: this.onDocumentLoadSuccess,\n          noData: React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, \"Glisse un fichier\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(Page, {\n          width: 100,\n          height: 100,\n          scale: 1,\n          pageNumber: 1,\n          style: {\n            width: '100px',\n            height: '100px',\n            borderRadius: '50px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }));\n      }\n    } else {\n      return React.createElement(\"div\", {\n        className: 'rounded-1',\n        style: {\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '5px',\n          backgroundColor: '#e6e6e6',\n          width: '40%',\n          height: '50%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(DropBoxLogo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      onDragOver: this.handleDragOver,\n      onDrop: this.handleFileDrop,\n      onDragEnter: this.handleDragEnter,\n      onDragExit: this.handleDragExit,\n      style: {\n        opacity: this.state.draggingState === 'dragging' ? 0.5 : 1,\n        transform: this.state.draggingState === 'dragging' ? 'rotate(-2deg) translateY(-10px)' : 'rotate(0)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(DropBoxBackground, {\n      label: this.state.label,\n      className: this.props.backgroundClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: 'file',\n      id: this.props.id,\n      onChange: this.handleFileChange,\n      hidden: true,\n      accept: this.props.accept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), this.renderLogo())));\n  }\n\n}\n\nexport default DropBox;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/DropBox.tsx"],"names":["React","styled","pdfjs","Document","Page","Heading","p","DropBoxBackground","Component","render","backgroundColor","width","height","props","className","children","label","DropBox","constructor","state","draggingState","dragged","labelNotDragged","src","file","handleDragOver","bind","handleFileDrop","handleDragEnter","handleDragExit","handleFileChange","updateFilePreview","onDocumentLoadSuccess","renderLogo","componentDidUpdate","prevProps","prevState","snapshot","labelDragged","console","log","event","preventDefault","setState","dataTransfer","files","target","reader","FileReader","type","GlobalWorkerOptions","workerSrc","version","addEventListener","result","readAsDataURL","includes","borderRadius","padding","margin","marginLeft","marginRight","opacity","transform","backgroundClassName","id","accept"],"mappings":";AAAA,OAAOA,KAAP,MAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,IAAzB,QAAoC,WAApC;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,CAAuB;;;CAA9C;;AAKA,MAAMC,iBAAN,SAAgCP,KAAK,CAACQ,SAAtC,CAA2F;AAChFC,EAAAA,MAAP,GAA2B;AACvB,WACI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,eAAe,EAAE,SADd;AAEHC,QAAAA,KAAK,EAAE,OAFJ;AAGHC,QAAAA,MAAM,EAAE;AAHL,OADX;AAMI,MAAA,SAAS,EAAE,kBAAkB,KAAKC,KAAL,CAAWC,SAN5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQK,KAAKD,KAAL,CAAWE,QARhB,EASI,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWG,KADhB,CATJ,CADJ;AAeH;;AAjBsF;;AAuC3F,MAAMC,OAAN,SAAsBjB,KAAK,CAACQ,SAA5B,CAAkE;AAC9D;AAEAU,EAAAA,WAAW,CAACL,KAAD,EAAa;AACpB,UAAMA,KAAN,EADoB,CAEpB;;AACA,SAAKM,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTL,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWS,eAHT;AAITC,MAAAA,GAAG,EAAE,EAJI;AAKTC,MAAAA,IAAI,EAAE;AALG,KAAb;AAOA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKK,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBL,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKM,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BN,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKO,UAAL,GAAkB,KAAKA,UAAL,CAAgBP,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEMQ,EAAAA,kBAAP,CAA0BC,SAA1B,EAA6DC,SAA7D,EAAgGC,QAAhG,EAAsH;AAClH,QAAI,KAAKxB,KAAL,CAAWyB,YAAX,KAA4B,SAAhC,EAA2C;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;AACJ;;AAEMf,EAAAA,cAAP,CAAsBgB,KAAtB,EAAoE;AAChEA,IAAAA,KAAK,CAACC,cAAN;AACH;;AAEMf,EAAAA,cAAP,CAAsBc,KAAtB,EAAoE;AAChE,SAAK5B,KAAL,CAAWc,cAAX,CAA0Bc,KAA1B,EADgE,CAEhE;AACA;;AACA,SAAKE,QAAL,CAAc;AAACtB,MAAAA,OAAO,EAAE;AAAV,KAAd;AACA,SAAKsB,QAAL,CAAc;AAAC3B,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWyB;AAAnB,KAAd;AACA,SAAKK,QAAL,CAAc;AAACvB,MAAAA,aAAa,EAAE;AAAhB,KAAd;AAEA,SAAKW,iBAAL,CAAuBU,KAAK,CAACG,YAAN,CAAmBC,KAAnB,CAAyB,CAAzB,CAAvB;AACH;;AAEMjB,EAAAA,eAAP,CAAuBa,KAAvB,EAAqE;AACjEF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAKG,QAAL,CAAc;AAAC3B,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWS;AAAnB,KAAd;AACA,SAAKqB,QAAL,CAAc;AAACvB,MAAAA,aAAa,EAAE;AAAhB,KAAd;AACH;;AAEMS,EAAAA,cAAP,CAAsBY,KAAtB,EAAoE;AAChEF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,QAAI,KAAKrB,KAAL,CAAWE,OAAf,EAAwB;AACpB,WAAKsB,QAAL,CAAc;AAAC3B,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWyB;AAAnB,OAAd;AACH,KAFD,MAEO;AACH,WAAKK,QAAL,CAAc;AAAC3B,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWS;AAAnB,OAAd;AACH;;AACD,SAAKqB,QAAL,CAAc;AAACvB,MAAAA,aAAa,EAAE;AAAhB,KAAd;AACH;;AAEMU,EAAAA,gBAAP,CAAwBW,KAAxB,EAAoE;AAChE,SAAK5B,KAAL,CAAWiB,gBAAX,CAA4BW,KAA5B;AACA,SAAKE,QAAL,CAAc;AAACtB,MAAAA,OAAO,EAAE;AAAV,KAAd;AACA,SAAKsB,QAAL,CAAc;AAAC3B,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWyB;AAAnB,KAAd;AACA,SAAKK,QAAL,CAAc;AAACvB,MAAAA,aAAa,EAAE;AAAhB,KAAd,EAJgE,CAKhE;;AACA,SAAKW,iBAAL,CAAuBU,KAAK,CAACK,MAAN,CAAaD,KAAb,CAAmB,CAAnB,CAAvB;AACH;;AAEMd,EAAAA,iBAAP,CAAyBP,IAAzB,EAA2C;AAEvC,QAAIuB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,SAAKL,QAAL,CAAc;AAACnB,MAAAA,IAAI,EAAEA;AAAP,KAAd;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEA,QAAIhB,IAAI,CAACyB,IAAL,KAAc,iBAAlB,EAAqC;AACjC/C,MAAAA,KAAK,CAACgD,mBAAN,CAA0BC,SAA1B,GAAuC,2CAA0CjD,KAAK,CAACkD,OAAQ,gBAA/F;AACH,KAFD,MAEO;AACHL,MAAAA,MAAM,CAACM,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AAClC;AACA,aAAKV,QAAL,CAAc;AAACpB,UAAAA,GAAG,EAAEwB,MAAM,CAACO;AAAb,SAAd;AACH,OAHD;;AAKA,UAAI9B,IAAJ,EAAU;AACNuB,QAAAA,MAAM,CAACQ,aAAP,CAAqB/B,IAArB;AACH;AACJ;AACJ;;AAEMQ,EAAAA,qBAAP,GAAqC,CACpC;;AAEMC,EAAAA,UAAP,GAA+B;AAC3B,QAAI,KAAKd,KAAL,CAAWE,OAAf,EAAwB;AACpB;AACA,UAAI,KAAKF,KAAL,CAAWK,IAAX,CAAgByB,IAAhB,CAAqBO,QAArB,CAA8B,OAA9B,CAAJ,EAA4C;AACxC,eACI;AACI,UAAA,EAAE,EAAE,aADR;AAEI,UAAA,GAAG,EAAE,KAAKrC,KAAL,CAAWI,GAFpB;AAGI,UAAA,GAAG,EAAE,MAHT;AAII,UAAA,KAAK,EAAE;AACHZ,YAAAA,KAAK,EAAE,OADJ;AAEHC,YAAAA,MAAM,EAAE,OAFL;AAGH6C,YAAAA,YAAY,EAAE;AAHX,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,OAbD,MAaO;AACH,eACI,oBAAC,QAAD;AACI,UAAA,IAAI,EAAE,KAAKtC,KAAL,CAAWK,IADrB;AAEI,UAAA,aAAa,EAAE,KAAKQ,qBAFxB;AAGI,UAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,GAAb;AAAkB,UAAA,MAAM,EAAE,GAA1B;AAA+B,UAAA,KAAK,EAAE,CAAtC;AAAyC,UAAA,UAAU,EAAE,CAArD;AACM,UAAA,KAAK,EAAE;AACHrB,YAAAA,KAAK,EAAE,OADJ;AAEHC,YAAAA,MAAM,EAAE,OAFL;AAGH6C,YAAAA,YAAY,EAAE;AAHX,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,CADJ;AAeH;AACJ,KAhCD,MAgCO;AACH,aACI;AACI,QAAA,SAAS,EAAE,WADf;AAEI,QAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAE,MADN;AAEHC,UAAAA,MAAM,EAAE,MAFL;AAGHF,UAAAA,YAAY,EAAE,KAHX;AAIH/C,UAAAA,eAAe,EAAE,SAJd;AAKHC,UAAAA,KAAK,EAAE,KALJ;AAMHC,UAAAA,MAAM,EAAE,KANL;AAOHgD,UAAAA,UAAU,EAAE,MAPT;AAQHC,UAAAA,WAAW,EAAE;AARV,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CADJ;AAiBH;AACJ;;AAEMpD,EAAAA,MAAP,GAA2B;AACvB,WACI;AACI,MAAA,SAAS,EAAE,KAAKI,KAAL,CAAWC,SAD1B;AAEI,MAAA,UAAU,EAAE,KAAKW,cAFrB;AAGI,MAAA,MAAM,EAAE,KAAKE,cAHjB;AAII,MAAA,WAAW,EAAE,KAAKC,eAJtB;AAKI,MAAA,UAAU,EAAE,KAAKC,cALrB;AAMI,MAAA,KAAK,EAAE;AACHiC,QAAAA,OAAO,EAAE,KAAK3C,KAAL,CAAWC,aAAX,KAA6B,UAA7B,GAA0C,GAA1C,GAAgD,CADtD;AAEH2C,QAAAA,SAAS,EAAE,KAAK5C,KAAL,CAAWC,aAAX,KAA6B,UAA7B,GAA0C,iCAA1C,GAA8E;AAFtF,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AACI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWH,KADtB;AAEI,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWmD,mBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AACI,MAAA,IAAI,EAAE,MADV;AAEI,MAAA,EAAE,EAAE,KAAKnD,KAAL,CAAWoD,EAFnB;AAGI,MAAA,QAAQ,EAAE,KAAKnC,gBAHnB;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWqD,MALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAUK,KAAKjC,UAAL,EAVL,CADJ,CAXJ,CADJ;AA2BH;;AA9K6D;;AAiLlE,eAAehB,OAAf","sourcesContent":["import React, {ChangeEvent, ReactNode} from 'react';\nimport styled from 'styled-components';\nimport {ReactComponent as DropBoxLogo} from \"../../img/usable-image-icon.svg\";\nimport {pdfjs, Document, Page} from 'react-pdf';\n\nconst Heading = styled.p<{ active: boolean }>`\n  color: #5757e7;\n  text-align: center;\n`;\n\nclass DropBoxBackground extends React.Component<{ label: string, className: string }, any> {\n    public render(): ReactNode {\n        return (\n            <div\n                style={{\n                    backgroundColor: '#ffffff',\n                    width: '220px',\n                    height: '145px',\n                }}\n                className={'rounded pt-4 ' + this.props.className}\n            >\n                {this.props.children}\n                <Heading active={false}>\n                    {this.props.label}\n                </Heading>\n            </div>\n        );\n    }\n}\n\ninterface DropBoxProps {\n    id: string,\n    className: string,\n    labelNotDragged: string,\n    labelDragged: string,\n    accept: string,\n    backgroundClassName: string,\n    handleFileDrop: (event: React.DragEvent<HTMLDivElement>) => void,\n    handleFileChange: (event: ChangeEvent<HTMLInputElement>) => void,\n}\n\ninterface DropBoxState {\n    draggingState: string,\n    dragged: boolean,\n    label: string,\n    src: string,\n    file: File | null,\n}\n\nclass DropBox extends React.Component<DropBoxProps, DropBoxState> {\n    // private file: File | null;\n\n    constructor(props: any) {\n        super(props);\n        // this.file = null;\n        this.state = {\n            draggingState: '',\n            dragged: false,\n            label: this.props.labelNotDragged,\n            src: '',\n            file: null,\n        }\n        this.handleDragOver = this.handleDragOver.bind(this);\n        this.handleFileDrop = this.handleFileDrop.bind(this);\n        this.handleDragEnter = this.handleDragEnter.bind(this);\n        this.handleDragExit = this.handleDragExit.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.updateFilePreview = this.updateFilePreview.bind(this);\n        this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n        this.renderLogo = this.renderLogo.bind(this);\n    }\n\n    public componentDidUpdate(prevProps: Readonly<DropBoxProps>, prevState: Readonly<DropBoxState>, snapshot?: any): void {\n        if (this.props.labelDragged === 'dragged') {\n            console.log('ok');\n        }\n    }\n\n    public handleDragOver(event: React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n    }\n\n    public handleFileDrop(event: React.DragEvent<HTMLDivElement>): void {\n        this.props.handleFileDrop(event);\n        // event.preventDefault();\n        // this.file = event.dataTransfer.files[0];\n        this.setState({dragged: true});\n        this.setState({label: this.props.labelDragged});\n        this.setState({draggingState: 'not dragging'});\n\n        this.updateFilePreview(event.dataTransfer.files[0]);\n    }\n\n    public handleDragEnter(event: React.DragEvent<HTMLDivElement>): void {\n        console.log('drag enter');\n        this.setState({label: this.props.labelNotDragged});\n        this.setState({draggingState: 'dragging'});\n    }\n\n    public handleDragExit(event: React.DragEvent<HTMLDivElement>): void {\n        console.log('drag exit');\n        if (this.state.dragged) {\n            this.setState({label: this.props.labelDragged});\n        } else {\n            this.setState({label: this.props.labelNotDragged});\n        }\n        this.setState({draggingState: 'not dragging'});\n    }\n\n    public handleFileChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.props.handleFileChange(event);\n        this.setState({dragged: true});\n        this.setState({label: this.props.labelDragged});\n        this.setState({draggingState: 'not dragging'});\n        // @ts-ignore\n        this.updateFilePreview(event.target.files[0]);\n    }\n\n    public updateFilePreview(file: File): void {\n\n        let reader = new FileReader();\n        this.setState({file: file});\n        console.log('begin');\n\n        if (file.type === 'application/pdf') {\n            pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n        } else {\n            reader.addEventListener('load', () => {\n                // @ts-ignore\n                this.setState({src: reader.result});\n            });\n\n            if (file) {\n                reader.readAsDataURL(file);\n            }\n        }\n    }\n\n    public onDocumentLoadSuccess(): void {\n    }\n\n    public renderLogo(): ReactNode {\n        if (this.state.dragged) {\n            // @ts-ignore\n            if (this.state.file.type.includes('image')) {\n                return (\n                    <img\n                        id={'draggedLogo'}\n                        src={this.state.src}\n                        alt={'Logo'}\n                        style={{\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50px',\n                        }}\n                    />\n                );\n            } else {\n                return (\n                    <Document\n                        file={this.state.file}\n                        onLoadSuccess={this.onDocumentLoadSuccess}\n                        noData={<h4>Glisse un fichier</h4>}\n\n                    >\n                        <Page width={100} height={100} scale={1} pageNumber={1}\n                              style={{\n                                  width: '100px',\n                                  height: '100px',\n                                  borderRadius: '50px',\n                              }}/>\n                    </Document>\n                );\n            }\n        } else {\n            return (\n                <div\n                    className={'rounded-1'}\n                    style={{\n                        padding: '10px',\n                        margin: '10px',\n                        borderRadius: '5px',\n                        backgroundColor: '#e6e6e6',\n                        width: '40%',\n                        height: '50%',\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                    }}\n                >\n                    <DropBoxLogo/>\n                </div>\n            );\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <div\n                className={this.props.className}\n                onDragOver={this.handleDragOver}\n                onDrop={this.handleFileDrop}\n                onDragEnter={this.handleDragEnter}\n                onDragExit={this.handleDragExit}\n                style={{\n                    opacity: this.state.draggingState === 'dragging' ? 0.5 : 1,\n                    transform: this.state.draggingState === 'dragging' ? 'rotate(-2deg) translateY(-10px)' : 'rotate(0)',\n                }}\n            >\n                <label>\n                    <DropBoxBackground\n                        label={this.state.label}\n                        className={this.props.backgroundClassName}\n                    >\n                        <input\n                            type={'file'}\n                            id={this.props.id}\n                            onChange={this.handleFileChange}\n                            hidden\n                            accept={this.props.accept}/>\n                        {this.renderLogo()}\n                    </DropBoxBackground>\n                </label>\n            </div>);\n    }\n}\n\nexport default DropBox;"]},"metadata":{},"sourceType":"module"}