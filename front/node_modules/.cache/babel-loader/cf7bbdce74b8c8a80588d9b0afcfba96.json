{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/usr/src/app/client/src/Request.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Request = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        connected = _useState2[0],\n        setConnected = _useState2[1];\n\n  function verifyIfConnected() {\n    const domain = 'http://localhost:80';\n    const method = props.method;\n    const data = props.data;\n    let route = '/';\n\n    if (undefined !== props.route.split(/\\//)[1]) {\n      route += '?module=' + props.route.split(/\\//)[1];\n\n      if (undefined !== props.route.split(/\\//)[2]) {\n        route += '&action=' + props.route.split(/\\//)[2];\n\n        if (undefined !== props.route.split(/\\//)[3]) {\n          route += '&param=' + props.route.split(/\\//)[3];\n        }\n      }\n    }\n\n    fetch(domain + route, {\n      method: method,\n      headers: 'POST' === method ? {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      } : null,\n      body: 'POST' === method ? JSON.stringify(data) : null\n    }).then(response => response.json()).then(jsonResponse => setConnected(jsonResponse['connected'])).catch(networkError => console.log(networkError));\n  }\n\n  useEffect(() => {\n    verifyIfConnected();\n  });\n  return React.createElement(\"span\", {\n    className: \"offset-lg-1 pt-lg-3 pt-sm-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, connected ? 'Vous êtes connecté en tant que ' + props.data['pseudo'] : 'Non connecté');\n};\n\nexport default Request;","map":{"version":3,"sources":["/usr/src/app/client/src/Request.js"],"names":["React","useState","useEffect","Request","props","connected","setConnected","verifyIfConnected","domain","method","data","route","undefined","split","fetch","headers","body","JSON","stringify","then","response","json","jsonResponse","catch","networkError","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,oBACSH,QAAQ,CAAC,KAAD,CADjB;AAAA;AAAA,QAClBI,SADkB;AAAA,QACPC,YADO;;AAEzB,WAASC,iBAAT,GAA8B;AAC5B,UAAMC,MAAM,GAAG,qBAAf;AACA,UAAMC,MAAM,GAAGL,KAAK,CAACK,MAArB;AACA,UAAMC,IAAI,GAAGN,KAAK,CAACM,IAAnB;AACA,QAAIC,KAAK,GAAG,GAAZ;;AACA,QAAIC,SAAS,KAAKR,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,MAAAA,KAAK,IAAI,aAAaP,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAtB;;AACA,UAAID,SAAS,KAAKR,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,QAAAA,KAAK,IAAI,aAAaP,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAtB;;AACA,YAAID,SAAS,KAAKR,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,UAAAA,KAAK,IAAI,YAAYP,KAAK,CAACO,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAArB;AACD;AACF;AACF;;AACDC,IAAAA,KAAK,CAACN,MAAM,GAAGG,KAAV,EAAiB;AACpBF,MAAAA,MAAM,EAAEA,MADY;AAEpBM,MAAAA,OAAO,EAAE,WAAWN,MAAX,GAAoB;AAC3B,kBAAU,kBADiB;AAE3B,wBAAgB;AAFW,OAApB,GAGL,IALgB;AAMpBO,MAAAA,IAAI,EAAE,WAAWP,MAAX,GAAoBQ,IAAI,CAACC,SAAL,CAAeR,IAAf,CAApB,GAA2C;AAN7B,KAAjB,CAAL,CAQGS,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQG,YAAY,IAAIhB,YAAY,CAACgB,YAAY,CAAC,WAAD,CAAb,CATpC,EAUGC,KAVH,CAUSC,YAAY,IAAIC,OAAO,CAACC,GAAR,CAAYF,YAAZ,CAVzB;AAWD;;AACDtB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,iBAAiB;AAClB,GAFQ,CAAT;AAGA,SAAO;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CF,SAAS,GAAG,oCAAoCD,KAAK,CAACM,IAAN,CAAW,QAAX,CAAvC,GAA8D,cAAtH,CAAP;AACD,CAhCD;;AAkCA,eAAeP,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Request = (props) => {\n  const [connected, setConnected] = useState(false);\n  function verifyIfConnected () {\n    const domain = 'http://localhost:80';\n    const method = props.method;\n    const data = props.data;\n    let route = '/';\n    if (undefined !== props.route.split(/\\//)[1]) {\n      route += '?module=' + props.route.split(/\\//)[1];\n      if (undefined !== props.route.split(/\\//)[2]) {\n        route += '&action=' + props.route.split(/\\//)[2];\n        if (undefined !== props.route.split(/\\//)[3]) {\n          route += '&param=' + props.route.split(/\\//)[3];\n        }\n      }\n    }\n    fetch(domain + route, {\n      method: method,\n      headers: 'POST' === method ? {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      } : null,\n      body: 'POST' === method ? JSON.stringify(data) : null\n    })\n      .then(response => response.json())\n      .then(jsonResponse => setConnected(jsonResponse['connected']))\n      .catch(networkError => console.log(networkError))\n  }\n  useEffect(() => {\n    verifyIfConnected();\n  });\n  return <span className=\"offset-lg-1 pt-lg-3 pt-sm-3\">{connected ? 'Vous êtes connecté en tant que ' + props.data['pseudo'] : 'Non connecté'}</span>;\n}\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}