{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/Hashtag.tsx\";\nimport React from 'react';\n\nclass Hashtag extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hashtagBox = void 0;\n    this.state = {\n      width: 0\n    };\n    this.hashtagBox = React.createRef();\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    let box = this.hashtagBox.current;\n    console.log(box);\n    console.log(window.getComputedStyle(box));\n    console.log(box.style.paddingLeft);\n    let marginLeft = window.getComputedStyle(box).marginLeft.substr(0, window.getComputedStyle(box).marginLeft.length - 1);\n    let ml = +marginLeft;\n    console.log(marginLeft);\n    console.log(ml);\n    let paddingLeft = window.getComputedStyle(box).paddingLeft.substr(0, window.getComputedStyle(box).paddingLeft.length - 1);\n    let pl = +paddingLeft;\n    let paddingRight = window.getComputedStyle(box).paddingRight.substr(0, window.getComputedStyle(box).paddingRight.length - 1);\n    let pr = +paddingRight;\n    let marginRight = window.getComputedStyle(box).marginRight.substr(0, window.getComputedStyle(box).marginRight.length - 1);\n    let mr = +marginRight;\n    this.setState({\n      width: ml + pl + box.clientWidth + pr + mr\n    }, () => this.props.updateWidth(this.state.width));\n  }\n\n  render() {\n    let div = React.createElement(\"div\", {\n      key: this.props.text,\n      style: {\n        backgroundColor: 'black',\n        opacity: 0.3,\n        zIndex: 1\n      },\n      className: 'rounded p-1 pl-2 pr-2 m-1',\n      ref: this.hashtagBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'white',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"#\", this.props.text));\n    return div;\n  }\n\n}\n\nexport default Hashtag;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/Hashtag.tsx"],"names":["React","Hashtag","Component","constructor","props","hashtagBox","state","width","createRef","componentDidMount","box","current","console","log","window","getComputedStyle","style","paddingLeft","marginLeft","substr","length","ml","pl","paddingRight","pr","marginRight","mr","setState","clientWidth","updateWidth","render","div","text","backgroundColor","opacity","zIndex","color","fontWeight"],"mappings":"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","sourcesContent":["import React, {ReactNode, Ref} from 'react';\n\nclass Hashtag extends React.Component<{ text: string, updateWidth: any }, { width: number }> {\n    private hashtagBox: Ref<HTMLDivElement>;\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            width: 0,\n        }\n        this.hashtagBox = React.createRef();\n    }\n\n    public componentDidMount(): void {\n        // @ts-ignore\n        let box: any | null = this.hashtagBox.current;\n        console.log(box);\n        console.log(window.getComputedStyle(box));\n        console.log(box.style.paddingLeft);\n        let marginLeft: string = window.getComputedStyle(box).marginLeft.substr(0, (window.getComputedStyle(box).marginLeft).length - 1);\n        let ml: number = +marginLeft;\n        console.log(marginLeft);\n        console.log(ml);\n        let paddingLeft: string = window.getComputedStyle(box).paddingLeft.substr(0, (window.getComputedStyle(box).paddingLeft).length - 1);\n        let pl: number = +paddingLeft;\n        let paddingRight: string = window.getComputedStyle(box).paddingRight.substr(0, (window.getComputedStyle(box).paddingRight).length - 1);\n        let pr: number = +paddingRight;\n        let marginRight: string = window.getComputedStyle(box).marginRight.substr(0, (window.getComputedStyle(box).marginRight).length - 1);\n        let mr: number = +marginRight;\n        this.setState(\n            {\n                width:\n                    ml +\n                    pl +\n                    box.clientWidth +\n                    pr +\n                    mr\n            },\n            () => this.props.updateWidth(this.state.width));\n    }\n\n    public render(): ReactNode {\n        let div = (\n            <div key={this.props.text}\n                 style={{\n                     backgroundColor: 'black',\n                     opacity: 0.3,\n                     zIndex: 1,\n                 }}\n                 className={'rounded p-1 pl-2 pr-2 m-1'}\n                 ref={this.hashtagBox}\n            >\n                        <span\n                            style={{\n                                color: 'white',\n                                fontWeight: 'bold',\n                            }}\n                        >\n                            #{this.props.text}\n                        </span>\n            </div>\n        );\n        return div;\n    }\n}\n\nexport default Hashtag;\n"]},"metadata":{},"sourceType":"module"}