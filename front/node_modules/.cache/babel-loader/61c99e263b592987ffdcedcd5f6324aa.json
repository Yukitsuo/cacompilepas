{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Pages/Personal.tsx\";\nimport React from 'react';\nimport '../../css/Personal.css';\nimport Request from \"../../API/Request\";\nimport Divider from \"../General/Divider\";\nimport PublicLobby from \"../Public/PublicLobby\";\n\nclass Personal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      personalInformation: [],\n      lobbies: []\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.fillIcon = this.fillIcon.bind(this);\n    this.getIcon = this.getIcon.bind(this);\n    this.renderLobbies = this.renderLobbies.bind(this);\n  }\n\n  componentDidMount() {\n    new Request('/connection/personal/0', this.fetchData);\n  }\n\n  renderLobbies() {\n    return this.state.lobbies.map(lobby => React.createElement(PublicLobby, {\n      key: lobby['id_lobby'],\n      id: lobby['id_lobby'],\n      label: lobby['label_lobby'],\n      description: lobby['description'],\n      logo: lobby['logo'],\n      pseudo: lobby['pseudo'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n  getIcon() {\n    new Request('/connection/getIcon/' + this.state.personalInformation['id_user'], this.fillIcon, 'POST', {\n      path: this.state.personalInformation['icon']\n    }, 'json', 'blob');\n  }\n\n  fillIcon(data) {\n    const img = document.getElementById('personal-icon-' + this.state.personalInformation['id_user']);\n    const blob = new Blob([data], {\n      type: 'image/jpg'\n    });\n    img.src = URL.createObjectURL(blob);\n  }\n\n  fetchData(data) {\n    this.setState({\n      personalInformation: data[0],\n      lobbies: data[1]\n    }, this.getIcon);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'container-fluid mt-5',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'row container-fluid',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'row container-fluid',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'col-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: 'personal-icon-' + this.state.personalInformation['id_user'],\n      className: 'personal-icon',\n      alt: 'Personal icon',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: 'row container-fluid mt-5',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'col-12 text-center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.personalInformation['first_name'])))), React.createElement(Divider, {\n      className: 'mt-5 offset-lg-2 col-lg-8',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'row container-fluid mt-5',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'row container-fluid',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'col-12 text-center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Mes lobbies\"))), React.createElement(\"div\", {\n      className: 'row ml-lg-5 ml-sm-5 pl-lg-5',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.renderLobbies())));\n  }\n\n}\n\nexport default Personal;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Pages/Personal.tsx"],"names":["React","Request","Divider","PublicLobby","Personal","Component","constructor","props","state","personalInformation","lobbies","fetchData","bind","fillIcon","getIcon","renderLobbies","componentDidMount","map","lobby","path","data","img","document","getElementById","blob","Blob","type","src","URL","createObjectURL","setState","render"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport '../../css/Personal.css';\nimport Request from \"../../API/Request\";\nimport Divider from \"../General/Divider\";\nimport PublicLobby from \"../Public/PublicLobby\";\n\ninterface PersonalState {\n    personalInformation: any,\n    lobbies: [],\n}\n\nclass Personal extends React.Component<any, PersonalState> {\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            personalInformation: [],\n            lobbies: [],\n        }\n        this.fetchData = this.fetchData.bind(this);\n        this.fillIcon = this.fillIcon.bind(this);\n        this.getIcon = this.getIcon.bind(this);\n        this.renderLobbies = this.renderLobbies.bind(this);\n    }\n\n    public componentDidMount(): void {\n        new Request(\n            '/connection/personal/0',\n            this.fetchData,\n        );\n    }\n\n    public renderLobbies(): ReactNode {\n        return this.state.lobbies.map(\n            lobby =>\n                <PublicLobby\n                    key={lobby['id_lobby']}\n                    id={lobby['id_lobby']}\n                    label={lobby['label_lobby']}\n                    description={lobby['description']}\n                    logo={lobby['logo']}\n                    pseudo={lobby['pseudo']}\n                />\n        );\n    }\n\n    public getIcon(): void {\n        new Request(\n            '/connection/getIcon/' + this.state.personalInformation['id_user'],\n            this.fillIcon,\n            'POST',\n            {\n                path: this.state.personalInformation['icon'],\n            },\n            'json',\n            'blob',\n        );\n    }\n\n    public fillIcon(data: Blob): void {\n        const img: any = document.getElementById('personal-icon-' + this.state.personalInformation['id_user']);\n        const blob = new Blob([data], {type: 'image/jpg'});\n        img.src = URL.createObjectURL(blob);\n    }\n\n    public fetchData(data: any) {\n        this.setState({\n                personalInformation: data[0],\n                lobbies: data[1],\n            },\n            this.getIcon);\n    }\n\n    public render(): ReactNode {\n        return (\n            <div className={'container-fluid mt-5'}>\n                <div className={'row container-fluid'}>\n                    <div className={'row container-fluid'}>\n                        <div className={'col-12'}>\n                            <img\n                                id={'personal-icon-' + this.state.personalInformation['id_user']}\n                                className={'personal-icon'}\n                                alt={'Personal icon'}\n                            />\n                        </div>\n                    </div>\n                    <div className={'row container-fluid mt-5'}>\n                        <div className={'col-12 text-center'}>\n                            <h3>{this.state.personalInformation['first_name']}</h3>\n                        </div>\n                    </div>\n                </div>\n                <Divider\n                    className={'mt-5 offset-lg-2 col-lg-8'}\n                />\n                <div className={'row container-fluid mt-5'}>\n                    <div className={'row container-fluid'}>\n                        <div className={'col-12 text-center'}>\n                            <h2>Mes lobbies</h2>\n                        </div>\n                    </div>\n                    <div className={'row ml-lg-5 ml-sm-5 pl-lg-5'}>\n                        {this.renderLobbies()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Personal;\n"]},"metadata":{},"sourceType":"module"}