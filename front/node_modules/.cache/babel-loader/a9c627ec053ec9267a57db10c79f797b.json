{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Admin/Admin.tsx\";\nimport React from 'react';\nimport Request from \"../../API/Request\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ReactComponent as Loader } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/loader.svg\";\nimport Input from \"../General/Input\";\nimport InputArea from \"../General/InputArea\";\nimport DropBox from \"../General/DropBox\";\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdmin: '',\n      currentTab: 'presentation',\n      currentLabel: '',\n      currentDescription: '',\n      currentLogo: null,\n      newLabel: '',\n      newDescription: '',\n      newLogo: null\n    };\n    this.checkIfAdmin = this.checkIfAdmin.bind(this);\n    this.handleLabelChange = this.handleLabelChange.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.handleFileDrop = this.handleFileDrop.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.updateLobbby = this.updateLobbby.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  checkIfAdmin(data) {\n    if (undefined === data['message']) {\n      this.setState({\n        isAdmin: 'true'\n      });\n      this.setState({\n        currentLabel: data[0]['label_lobby']\n      });\n      this.setState({\n        currentDescription: data[0]['description']\n      });\n    } else {\n      this.setState({\n        isAdmin: 'false'\n      });\n    }\n  }\n\n  componentDidMount() {\n    new Request('/lobby/consult/' + this.props.location.pathname.split(/\\//)[2], 'POST', 'json', {\n      token: localStorage.getItem('token')\n    }, this.checkIfAdmin);\n  }\n\n  handleLabelChange(event) {\n    this.setState({\n      newLabel: event.target.value\n    });\n  }\n\n  handleDescriptionChange(event) {\n    this.setState({\n      newDescription: event.target.value\n    });\n  }\n\n  handleFileDrop(event) {\n    event.preventDefault();\n    this.setState({\n      newLogo: event.dataTransfer.files[0]\n    });\n  }\n\n  handleFileChange(event) {\n    // @ts-ignore\n    this.setState({\n      newLogo: event.target.files[0]\n    });\n  }\n\n  update(data) {\n    if (undefined !== data['message_label']) {\n      this.setState({\n        currentLabel: this.state.newLabel\n      });\n    }\n\n    if (undefined !== data['message_description']) {\n      this.setState({\n        currentDescription: this.state.newDescription\n      });\n    }\n\n    if (undefined !== data['message_logo']) {\n      this.setState({\n        currentLogo: this.state.newLogo\n      });\n    }\n  }\n\n  updateLobbby(event) {\n    let formData = new FormData(); // @ts-ignore\n\n    formData.append('token', localStorage.getItem('token'));\n\n    if ('' !== this.state.newLabel) {\n      formData.append('label', this.state.newLabel);\n    }\n\n    if ('' !== this.state.newDescription) {\n      formData.append('description', this.state.newDescription);\n    }\n\n    if (null !== this.state.newLogo) {\n      formData.append('file', this.state.newLogo);\n      new Request('/lobby/update/' + this.props.location.pathname.split(/\\//)[2], 'POST', this.state.newLogo.type, formData, this.update);\n    } else {\n      new Request('/lobby/update/' + this.props.location.pathname.split(/\\//)[2], 'POST', 'json', formData, this.update);\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: this.props.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Veuillez choisir un lobby\")), React.createElement(Route, {\n      path: this.props.location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, () => {\n      if ('true' === this.state.isAdmin) {\n        let tab;\n\n        switch (this.state.currentTab) {\n          case 'presentation':\n            tab = React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }, \"Informations visibles par les visiteurs\"), React.createElement(Input, {\n              id: 'labelInput',\n              inputType: 'text',\n              placeholder: 'Titre du lobby (n\\'en mets pas un trop long)',\n              className: 'mt-5',\n              onChange: this.handleLabelChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125\n              },\n              __self: this\n            }), React.createElement(InputArea, {\n              id: 'descriptionInput',\n              placeholder: 'Description du lobby\\nRacontes-y ce que tu veux, du moment que ça reste dans le thème de ton lobby',\n              className: 'mt-5',\n              rows: 5,\n              onChange: this.handleDescriptionChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }), React.createElement(InputArea, {\n              id: 'descriptionInput',\n              placeholder: 'La description actuelle de ton lobby que voient tes visiteurs\\n\\n' + this.state.currentDescription,\n              className: 'mt-5',\n              rows: 3,\n              onChange: this.handleDescriptionChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }), React.createElement(DropBox, {\n              id: 'logoInput',\n              className: '',\n              handleFileDrop: this.handleFileDrop,\n              handleFileChange: this.handleFileChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136\n              },\n              __self: this\n            }), React.createElement(SubmitButton, {\n              onClick: this.updateLobbby,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            }));\n            break;\n\n          case 'coursesheets':\n            tab = React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }, \"Nouvelle fiche de cours\");\n            break;\n\n          case 'rights':\n            tab = React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              },\n              __self: this\n            }, \"Utilisateurs autoris\\xE9s \\xE0 consulter le lobby\");\n            break;\n\n          default:\n            tab = React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            }, \"Informations visibles par les visiteurs\");\n            break;\n        }\n\n        return React.createElement(\"section\", {\n          className: 'content row container-fluid',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: 'row col col-lg-12 col-md-12 col-sm-12 col-xs-12',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, this.state.currentLabel))), tab);\n      } else if ('false' === this.state.isAdmin) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"Vous n'\\xEAtes pas administrateur de ce lobby\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: 'mt-5',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }));\n      }\n    })));\n  }\n\n}\n\nclass SubmitButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      className: \"btn btn-default btn-transparent mt-0 rounded-1 custom\",\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Mettre \\xE0 jour le lobby\");\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Admin/Admin.tsx"],"names":["React","Request","BrowserRouter","Router","Switch","Route","Input","InputArea","DropBox","Admin","Component","constructor","props","state","isAdmin","currentTab","currentLabel","currentDescription","currentLogo","newLabel","newDescription","newLogo","checkIfAdmin","bind","handleLabelChange","handleDescriptionChange","handleFileDrop","handleFileChange","updateLobbby","update","data","undefined","setState","componentDidMount","location","pathname","split","token","localStorage","getItem","event","target","value","preventDefault","dataTransfer","files","formData","FormData","append","type","render","path","tab","SubmitButton","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,QAIO,kBAJP;;AAMA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAaA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAqD;AAE1CC,EAAAA,WAAP,CAAmBC,KAAnB,EAA+B;AAC3B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,cAFH;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,kBAAkB,EAAE,EAJX;AAKTC,MAAAA,WAAW,EAAE,IALJ;AAMTC,MAAAA,QAAQ,EAAE,EAND;AAOTC,MAAAA,cAAc,EAAE,EAPP;AAQTC,MAAAA,OAAO,EAAE;AARA,KAAb;AAUA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BF,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBL,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKM,MAAL,GAAc,KAAKA,MAAL,CAAYN,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEMD,EAAAA,YAAP,CAAoBQ,IAApB,EAAqC;AACjC,QAAIC,SAAS,KAAKD,IAAI,CAAC,SAAD,CAAtB,EAAmC;AAC/B,WAAKE,QAAL,CAAc;AAAClB,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,WAAKkB,QAAL,CAAc;AAAChB,QAAAA,YAAY,EAAEc,IAAI,CAAC,CAAD,CAAJ,CAAQ,aAAR;AAAf,OAAd;AACA,WAAKE,QAAL,CAAc;AAACf,QAAAA,kBAAkB,EAAEa,IAAI,CAAC,CAAD,CAAJ,CAAQ,aAAR;AAArB,OAAd;AACH,KAJD,MAIO;AACH,WAAKE,QAAL,CAAc;AAAClB,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH;AACJ;;AAEMmB,EAAAA,iBAAP,GAAiC;AAC7B,QAAIhC,OAAJ,CAAY,oBAAoB,KAAKW,KAAL,CAAWsB,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,IAAnC,EAAyC,CAAzC,CAAhC,EAA6E,MAA7E,EAAqF,MAArF,EAA6F;AAACC,MAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAR,KAA7F,EAAqI,KAAKjB,YAA1I;AACH;;AAEME,EAAAA,iBAAP,CAAyBgB,KAAzB,EAAqE;AACjE,SAAKR,QAAL,CAAc;AAACb,MAAAA,QAAQ,EAAEqB,KAAK,CAACC,MAAN,CAAaC;AAAxB,KAAd;AACH;;AAEMjB,EAAAA,uBAAP,CAA+Be,KAA/B,EAA8E;AAC1E,SAAKR,QAAL,CAAc;AAACZ,MAAAA,cAAc,EAAEoB,KAAK,CAACC,MAAN,CAAaC;AAA9B,KAAd;AACH;;AAEMhB,EAAAA,cAAP,CAAsBc,KAAtB,EAAoE;AAChEA,IAAAA,KAAK,CAACG,cAAN;AACA,SAAKX,QAAL,CAAc;AAACX,MAAAA,OAAO,EAAEmB,KAAK,CAACI,YAAN,CAAmBC,KAAnB,CAAyB,CAAzB;AAAV,KAAd;AACH;;AAEMlB,EAAAA,gBAAP,CAAwBa,KAAxB,EAAoE;AAChE;AACA,SAAKR,QAAL,CAAc;AAACX,MAAAA,OAAO,EAAEmB,KAAK,CAACC,MAAN,CAAaI,KAAb,CAAmB,CAAnB;AAAV,KAAd;AACH;;AAEMhB,EAAAA,MAAP,CAAcC,IAAd,EAA+B;AAC3B,QAAIC,SAAS,KAAKD,IAAI,CAAC,eAAD,CAAtB,EAAyC;AACrC,WAAKE,QAAL,CAAc;AAAChB,QAAAA,YAAY,EAAE,KAAKH,KAAL,CAAWM;AAA1B,OAAd;AACH;;AACD,QAAIY,SAAS,KAAKD,IAAI,CAAC,qBAAD,CAAtB,EAA+C;AAC3C,WAAKE,QAAL,CAAc;AAACf,QAAAA,kBAAkB,EAAE,KAAKJ,KAAL,CAAWO;AAAhC,OAAd;AACH;;AACD,QAAIW,SAAS,KAAKD,IAAI,CAAC,cAAD,CAAtB,EAAwC;AACpC,WAAKE,QAAL,CAAc;AAACd,QAAAA,WAAW,EAAE,KAAKL,KAAL,CAAWQ;AAAzB,OAAd;AACH;AACJ;;AAEMO,EAAAA,YAAP,CAAoBY,KAApB,EAAkF;AAC9E,QAAIM,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAD8E,CAE9E;;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBV,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAzB;;AACA,QAAI,OAAO,KAAK1B,KAAL,CAAWM,QAAtB,EAAgC;AAC5B2B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKnC,KAAL,CAAWM,QAApC;AACH;;AACD,QAAI,OAAO,KAAKN,KAAL,CAAWO,cAAtB,EAAsC;AAClC0B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAKnC,KAAL,CAAWO,cAA1C;AACH;;AACD,QAAI,SAAS,KAAKP,KAAL,CAAWQ,OAAxB,EAAiC;AAC7ByB,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKnC,KAAL,CAAWQ,OAAnC;AACA,UAAIpB,OAAJ,CAAY,mBAAmB,KAAKW,KAAL,CAAWsB,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,IAAnC,EAAyC,CAAzC,CAA/B,EAA4E,MAA5E,EAAoF,KAAKvB,KAAL,CAAWQ,OAAX,CAAmB4B,IAAvG,EAA6GH,QAA7G,EAAuH,KAAKjB,MAA5H;AACH,KAHD,MAGO;AACH,UAAI5B,OAAJ,CAAY,mBAAmB,KAAKW,KAAL,CAAWsB,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,IAAnC,EAAyC,CAAzC,CAA/B,EAA4E,MAA5E,EAAoF,MAApF,EAA4FU,QAA5F,EAAsG,KAAKjB,MAA3G;AACH;AACJ;;AAEMqB,EAAAA,MAAP,GAA2B;AACvB,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,KAAKtC,KAAL,CAAWuC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKvC,KAAL,CAAWsB,QAAX,CAAoBC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,MAAM;AACH,UAAI,WAAW,KAAKtB,KAAL,CAAWC,OAA1B,EAAmC;AAC/B,YAAIsC,GAAJ;;AACA,gBAAQ,KAAKvC,KAAL,CAAWE,UAAnB;AACI,eAAK,cAAL;AACIqC,YAAAA,GAAG,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,EAEI,oBAAC,KAAD;AAAO,cAAA,EAAE,EAAE,YAAX;AAAyB,cAAA,SAAS,EAAE,MAApC;AACO,cAAA,WAAW,EAAE,8CADpB;AAEO,cAAA,SAAS,EAAE,MAFlB;AAE0B,cAAA,QAAQ,EAAE,KAAK5B,iBAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAKI,oBAAC,SAAD;AAAW,cAAA,EAAE,EAAE,kBAAf;AACW,cAAA,WAAW,EAAE,oGADxB;AAEW,cAAA,SAAS,EAAE,MAFtB;AAE8B,cAAA,IAAI,EAAE,CAFpC;AAGW,cAAA,QAAQ,EAAE,KAAKC,uBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EASI,oBAAC,SAAD;AAAW,cAAA,EAAE,EAAE,kBAAf;AACW,cAAA,WAAW,EAAE,sEAAsE,KAAKZ,KAAL,CAAWI,kBADzG;AAEW,cAAA,SAAS,EAAE,MAFtB;AAE8B,cAAA,IAAI,EAAE,CAFpC;AAGW,cAAA,QAAQ,EAAE,KAAKQ,uBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAaI,oBAAC,OAAD;AAAS,cAAA,EAAE,EAAE,WAAb;AAA0B,cAAA,SAAS,EAAE,EAArC;AACS,cAAA,cAAc,EAAE,KAAKC,cAD9B;AAES,cAAA,gBAAgB,EAAE,KAAKC,gBAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,EAgBI,oBAAC,YAAD;AAAc,cAAA,OAAO,EAAE,KAAKC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,CADJ;AAoBA;;AAEJ,eAAK,cAAL;AACIwB,YAAAA,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAN;AACA;;AAEJ,eAAK,QAAL;AACIA,YAAAA,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAAN;AACA;;AAEJ;AACIA,YAAAA,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAN;AACA;AAlCR;;AAoCA,eACI;AAAS,UAAA,SAAS,EAAE,6BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAE,iDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKvC,KAAL,CAAWG,YAAhB,CADJ,CADJ,CADJ,EAMKoC,GANL,CADJ;AAUH,OAhDD,MAgDO,IAAI,YAAY,KAAKvC,KAAL,CAAWC,OAA3B,EAAoC;AACvC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADJ,CADJ;AAKH,OANM,MAMA;AACH,eAAO;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB,CAAP;AACH;AACJ,KA3DL,CAJJ,CADJ,CADJ;AAsEH;;AA5JgD;;AA+JrD,MAAMuC,YAAN,SAA2BrD,KAAK,CAACU,SAAjC,CAA8H;AACnHwC,EAAAA,MAAP,GAAgB;AACZ,WACI;AAAQ,MAAA,SAAS,EAAC,uDAAlB;AACQ,MAAA,OAAO,EAAE,KAAKtC,KAAL,CAAW0C,OAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ;AAIH;;AANyH;;AAS9H,eAAe7C,KAAf","sourcesContent":["import React, {ChangeEvent, ReactNode} from 'react';\nimport Request from \"../../API/Request\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport {ReactComponent as Loader} from \"../../img/loader.svg\";\nimport Input from \"../General/Input\";\nimport InputArea from \"../General/InputArea\";\nimport DropBox from \"../General/DropBox\";\n\ninterface AdminState {\n    isAdmin: string,\n    currentTab: string,\n    currentLabel: string,\n    currentDescription: string,\n    currentLogo: File | null,\n    newLabel: string,\n    newDescription: string,\n    newLogo: File | null,\n}\n\nclass Admin extends React.Component<any, AdminState> {\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            isAdmin: '',\n            currentTab: 'presentation',\n            currentLabel: '',\n            currentDescription: '',\n            currentLogo: null,\n            newLabel: '',\n            newDescription: '',\n            newLogo: null,\n        }\n        this.checkIfAdmin = this.checkIfAdmin.bind(this);\n        this.handleLabelChange = this.handleLabelChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n        this.handleFileDrop = this.handleFileDrop.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.updateLobbby = this.updateLobbby.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    public checkIfAdmin(data: any): void {\n        if (undefined === data['message']) {\n            this.setState({isAdmin: 'true'});\n            this.setState({currentLabel: data[0]['label_lobby']});\n            this.setState({currentDescription: data[0]['description']});\n        } else {\n            this.setState({isAdmin: 'false'});\n        }\n    }\n\n    public componentDidMount(): void {\n        new Request('/lobby/consult/' + this.props.location.pathname.split(/\\//)[2], 'POST', 'json', {token: localStorage.getItem('token')}, this.checkIfAdmin);\n    }\n\n    public handleLabelChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({newLabel: event.target.value});\n    }\n\n    public handleDescriptionChange(event: ChangeEvent<HTMLTextAreaElement>): void {\n        this.setState({newDescription: event.target.value});\n    }\n\n    public handleFileDrop(event: React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n        this.setState({newLogo: event.dataTransfer.files[0]});\n    }\n\n    public handleFileChange(event: ChangeEvent<HTMLInputElement>): void {\n        // @ts-ignore\n        this.setState({newLogo: event.target.files[0]});\n    }\n\n    public update(data: any): void {\n        if (undefined !== data['message_label']) {\n            this.setState({currentLabel: this.state.newLabel});\n        }\n        if (undefined !== data['message_description']) {\n            this.setState({currentDescription: this.state.newDescription});\n        }\n        if (undefined !== data['message_logo']) {\n            this.setState({currentLogo: this.state.newLogo});\n        }\n    }\n\n    public updateLobbby(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        let formData = new FormData();\n        // @ts-ignore\n        formData.append('token', localStorage.getItem('token'));\n        if ('' !== this.state.newLabel) {\n            formData.append('label', this.state.newLabel);\n        }\n        if ('' !== this.state.newDescription) {\n            formData.append('description', this.state.newDescription);\n        }\n        if (null !== this.state.newLogo) {\n            formData.append('file', this.state.newLogo);\n            new Request('/lobby/update/' + this.props.location.pathname.split(/\\//)[2], 'POST', this.state.newLogo.type, formData, this.update);\n        } else {\n            new Request('/lobby/update/' + this.props.location.pathname.split(/\\//)[2], 'POST', 'json', formData, this.update);\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path={this.props.path}>\n                        <h3>Veuillez choisir un lobby</h3>\n                    </Route>\n                    <Route path={this.props.location.pathname}>\n                        {() => {\n                            if ('true' === this.state.isAdmin) {\n                                let tab;\n                                switch (this.state.currentTab) {\n                                    case 'presentation':\n                                        tab = (\n                                            <div>\n                                                <h2>Informations visibles par les visiteurs</h2>\n                                                <Input id={'labelInput'} inputType={'text'}\n                                                       placeholder={'Titre du lobby (n\\'en mets pas un trop long)'}\n                                                       className={'mt-5'} onChange={this.handleLabelChange}/>\n                                                <InputArea id={'descriptionInput'}\n                                                           placeholder={'Description du lobby\\nRacontes-y ce que tu veux, du moment que ça reste dans le thème de ton lobby'}\n                                                           className={'mt-5'} rows={5}\n                                                           onChange={this.handleDescriptionChange}/>\n                                                <InputArea id={'descriptionInput'}\n                                                           placeholder={'La description actuelle de ton lobby que voient tes visiteurs\\n\\n' + this.state.currentDescription}\n                                                           className={'mt-5'} rows={3}\n                                                           onChange={this.handleDescriptionChange}/>\n                                                <DropBox id={'logoInput'} className={''}\n                                                         handleFileDrop={this.handleFileDrop}\n                                                         handleFileChange={this.handleFileChange}/>\n                                                <SubmitButton onClick={this.updateLobbby}/>\n                                            </div>\n                                        );\n                                        break;\n\n                                    case 'coursesheets':\n                                        tab = <h2>Nouvelle fiche de cours</h2>;\n                                        break;\n\n                                    case 'rights':\n                                        tab = <h2>Utilisateurs autorisés à consulter le lobby</h2>;\n                                        break;\n\n                                    default:\n                                        tab = <h2>Informations visibles par les visiteurs</h2>\n                                        break;\n                                }\n                                return (\n                                    <section className={'content row container-fluid'}>\n                                        <div className={'row col col-lg-12 col-md-12 col-sm-12 col-xs-12'}>\n                                            <div className={''}>\n                                                <h1>{this.state.currentLabel}</h1>\n                                            </div>\n                                        </div>\n                                        {tab}\n                                    </section>\n                                );\n                            } else if ('false' === this.state.isAdmin) {\n                                return (\n                                    <div>\n                                        <h1>Vous n'êtes pas administrateur de ce lobby</h1>\n                                    </div>\n                                );\n                            } else {\n                                return <div className={'mt-5'}><Loader/></div>\n                            }\n                        }}\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nclass SubmitButton extends React.Component<{ onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void }, {}> {\n    public render() {\n        return (\n            <button className=\"btn btn-default btn-transparent mt-0 rounded-1 custom\"\n                    onClick={this.props.onClick}>Mettre à jour le lobby</button>\n        )\n    }\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}