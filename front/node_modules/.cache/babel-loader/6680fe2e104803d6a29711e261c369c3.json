{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/SearchBar.tsx\";\nimport React from 'react';\nimport Request from \"../../API/Request\";\nimport HashtagInput from \"./HashtagInput\";\nimport ProposalList from \"./ProposalList\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      proposals: [],\n      inputIsNotEmpty: true,\n      hashtags: [],\n      hashtagsView: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })\n    };\n    this.emptyInput = this.emptyInput.bind(this);\n    this.updateHashtagsView = this.updateHashtagsView.bind(this);\n    this.refreshProposals = this.refreshProposals.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  componentDidUpdate() {\n    new Request('/lobby/search/0', this.refreshProposals, 'POST', {\n      search: this.state.query.split(/ /)\n    });\n  }\n\n  refreshProposals(data) {\n    this.setState({\n      proposals: undefined === data['message'] ? data.slice(0, 3) : []\n    });\n  }\n\n  emptyInput(isEmpty) {\n    this.setState({\n      inputIsNotEmpty: isEmpty\n    });\n  }\n\n  updateHashtagsView(hashtags) {\n    this.setState({\n      hashtagsView: hashtags\n    });\n  }\n\n  updateHashtags(hashtags) {\n    this.setState({\n      hashtags: hashtags\n    }, () => console.log(this.state.hashtags));\n  }\n\n  updateQuery(text) {\n    this.setState({\n      query: text\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'container-fluid col-lg-9 col-md-6 col-sm-6 col-xs-6 mt-lg-4 mt-md-4 mt-sm-3 mt-xs-3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-8 col-md-8 col-sm-12 col-xs-12 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0 p-0 search-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"search-label\",\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"search-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.inputIsNotEmpty ? 'Rechercher...' : '')), this.state.hashtagsView, React.createElement(HashtagInput, {\n      id: 'search',\n      className: 'form-control mr-sm-2 col-12 w-100 search-input',\n      type: 'search',\n      baseIndent: 14,\n      onUpdate: this.emptyInput,\n      updateHashtagsView: this.updateHashtagsView,\n      updateHashtags: this.updateHashtags,\n      updateText: this.updateQuery,\n      hashtagClassName: '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), (() => 0 !== this.state.proposals.length && '' !== this.state.query ? React.createElement(ProposalList, {\n      proposals: this.state.proposals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))());\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/SearchBar.tsx"],"names":["React","Request","HashtagInput","ProposalList","SearchBar","Component","constructor","props","state","query","proposals","inputIsNotEmpty","hashtags","hashtagsView","emptyInput","bind","updateHashtagsView","refreshProposals","updateQuery","componentDidUpdate","search","split","data","setState","undefined","slice","isEmpty","updateHashtags","console","log","text","render","length"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport Request from \"../../API/Request\";\nimport HashtagInput from \"./HashtagInput\";\nimport ProposalList from \"./ProposalList\";\n\ninterface SearchBarState {\n    query: string,\n    proposals: [],\n    inputIsNotEmpty: boolean,\n    hashtags: string[],\n    hashtagsView: ReactNode,\n}\n\nclass SearchBar extends React.Component<any, SearchBarState> {\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            query: '',\n            proposals: [],\n            inputIsNotEmpty: true,\n            hashtags: [],\n            hashtagsView: <div></div>,\n        }\n        this.emptyInput = this.emptyInput.bind(this);\n        this.updateHashtagsView = this.updateHashtagsView.bind(this);\n        this.refreshProposals = this.refreshProposals.bind(this);\n        this.updateQuery = this.updateQuery.bind(this);\n    }\n\n    public componentDidUpdate(): void {\n        new Request(\n            '/lobby/search/0',\n            this.refreshProposals,\n            'POST',\n            {search: this.state.query.split(/ /)},\n        );\n    }\n\n    public refreshProposals(data: any): void {\n        this.setState({proposals: undefined === data['message'] ? data.slice(0, 3) : []});\n    }\n\n    public emptyInput(isEmpty: boolean): void {\n        this.setState({inputIsNotEmpty: isEmpty});\n    }\n\n    public updateHashtagsView(hashtags: ReactNode): void {\n        this.setState({hashtagsView: hashtags});\n    }\n\n    public updateHashtags(hashtags: string[]): void {\n        this.setState({hashtags: hashtags}, ()=>console.log(this.state.hashtags));\n    }\n\n    public updateQuery(text: string): void {\n        this.setState({query: text});\n    }\n\n    public render(): ReactNode {\n        return (\n            <div className={'container-fluid col-lg-9 col-md-6 col-sm-6 col-xs-6 mt-lg-4 mt-md-4 mt-sm-3 mt-xs-3'}>\n                <form\n                    className=\"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-8 col-md-8 col-sm-12 col-xs-12 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0 p-0 search-form\">\n                    <label id=\"search-label\" htmlFor=\"search\">\n                        <span className=\"glyphicon glyphicon-search search-icon\"></span>\n                        <span\n                            id=\"search-placeholder\">{this.state.inputIsNotEmpty ? 'Rechercher...' : ''}</span>\n                    </label>\n                    {this.state.hashtagsView}\n                    <HashtagInput\n                        id={'search'}\n                        className={'form-control mr-sm-2 col-12 w-100 search-input'}\n                        type={'search'}\n                        baseIndent={14}\n                        onUpdate={this.emptyInput}\n                        updateHashtagsView={this.updateHashtagsView}\n                        updateHashtags={this.updateHashtags}\n                        updateText={this.updateQuery}\n                        hashtagClassName={''}\n                    />\n                </form>\n                {(() => 0 !== this.state.proposals.length && '' !== this.state.query ? <ProposalList proposals={this.state.proposals}/> : <div></div>)()}\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}