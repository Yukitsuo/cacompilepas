{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/SearchBar.tsx\";\nimport React from 'react';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      hashtags: []\n    };\n    this.write = this.write.bind(this);\n    this.renderHashtags = this.renderHashtags.bind(this);\n    this.addHashtag = this.addHashtag.bind(this);\n  }\n\n  write(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  async addHashtag(event) {\n    if (13 === event.keyCode) {\n      event.preventDefault();\n      console.log('ok');\n      const newHashtag = event.target.value;\n      event.target.value = '';\n      console.log(newHashtag);\n\n      if (!this.state.hashtags.includes(newHashtag)) {\n        this.state.hashtags.push(newHashtag);\n        this.render();\n        console.log(this.state.hashtags);\n      }\n    }\n  }\n\n  renderHashtags() {\n    const res = this.state.hashtags.map(hashtag => React.createElement(\"div\", {\n      key: hashtag,\n      style: {\n        backgroundColor: 'black',\n        opacity: 0.3,\n        zIndex: 1\n      },\n      className: 'rounded p-1 pl-2 pr-2 m-1',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'white',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"#\", hashtag)));\n    return res;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-5 col-md-5 col-sm-6 col-xs-6 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"search-icon\",\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"search-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.text === '' && 0 === this.state.hashtags.length ? 'Search...' : '')), this.renderHashtags(), React.createElement(\"input\", {\n      id: \"search\",\n      className: \"form-control col-lg-12 w-75 mr-sm-2\",\n      type: \"search\",\n      \"aria-label\": \"Search\",\n      onChange: event => this.write(event),\n      value: this.state.text,\n      onKeyDown: this.addHashtag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/SearchBar.tsx"],"names":["React","SearchBar","Component","constructor","props","state","text","hashtags","write","bind","renderHashtags","addHashtag","event","setState","target","value","keyCode","preventDefault","console","log","newHashtag","includes","push","render","res","map","hashtag","backgroundColor","opacity","zIndex","color","fontWeight","length"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, ReactNode} from 'react';\nimport CourseSheet from \"../Lobby/CourseSheet\";\n\nclass SearchBar extends React.Component<any, { text: string, hashtags: string[] }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            text: '',\n            hashtags: [],\n        }\n        this.write = this.write.bind(this);\n        this.renderHashtags = this.renderHashtags.bind(this);\n        this.addHashtag =  this.addHashtag.bind(this);\n    }\n\n    public write(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({text: event.target.value});\n    }\n\n    public async addHashtag(event: React.KeyboardEvent<HTMLInputElement>): Promise<void> {\n        if (13 === event.keyCode) {\n            event.preventDefault();\n            console.log('ok');\n            const newHashtag = (event.target as HTMLInputElement).value;\n            (event.target as HTMLInputElement).value = '';\n            console.log(newHashtag);\n            if (!this.state.hashtags.includes(newHashtag)) {\n                this.state.hashtags.push(newHashtag);\n                this.render();\n                console.log(this.state.hashtags);\n            }\n        }\n    }\n\n    public renderHashtags(): ReactNode {\n        const res = this.state.hashtags.map(\n            (hashtag: string) =>\n                    <div key={hashtag}\n                        style={{\n                            backgroundColor: 'black',\n                            opacity: 0.3,\n                            zIndex: 1,\n                        }}\n                        className={'rounded p-1 pl-2 pr-2 m-1'}\n                    >\n                        <span\n                            style={{\n                                color: 'white',\n                                fontWeight: 'bold',\n                            }}\n                        >\n                            #{hashtag}\n                        </span>\n                    </div>\n        );\n        return res;\n    }\n\n    public render(): ReactNode {\n        return (\n            <form\n                className=\"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-5 col-md-5 col-sm-6 col-xs-6 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0\">\n                <label id=\"search-icon\" htmlFor=\"search\">\n                    <span className=\"glyphicon glyphicon-search search-icon\"></span>\n                    <span id=\"search-placeholder\">{this.state.text === '' && 0 === this.state.hashtags.length ? 'Search...' : ''}</span>\n                </label>\n                {this.renderHashtags()}\n                <input id=\"search\" className=\"form-control col-lg-12 w-75 mr-sm-2\" type=\"search\"\n                       aria-label=\"Search\"\n                       onChange={event => this.write(event)}\n                       value={this.state.text}\n                       onKeyDown={this.addHashtag}\n                />\n            </form>\n        );\n    }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}