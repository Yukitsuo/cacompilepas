{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Lobby/Messages.tsx\";\nimport React from 'react';\nimport Message from \"./Message\";\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: []\n    };\n    this.renderMessage = this.renderMessage.bind(this);\n    this.renderMessages = this.renderMessages.bind(this);\n    this.setState = this.setState.bind(this);\n  }\n\n  renderMessage(key, content, send_date, pseudo) {\n    return React.createElement(Message, {\n      key: key,\n      content: content,\n      send_date: send_date,\n      pseudo: pseudo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n  renderMessages() {\n    // @ts-ignore\n    if (undefined === this.props.messages['message']) {\n      console.log(this.props.messages.sort());\n      let res = this.props.messages.map(message => this.renderMessage(message['id_message'], message['content'], message['send_date'], message['pseudo'])).sort((message1, message2) => {\n        console.log(message1);\n        return 1; // message1['send_date'].compareTo(message2['send_date']);\n      });\n      return res;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 pl-lg-0 pl-sm-0 pr-lg-5 mt-lg-3 mt-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"messages-list list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.renderMessages()));\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Lobby/Messages.tsx"],"names":["React","Message","Messages","Component","constructor","props","state","messages","renderMessage","bind","renderMessages","setState","key","content","send_date","pseudo","undefined","console","log","sort","res","map","message","message1","message2","render"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAA0E;AAC/DC,EAAAA,WAAP,CAAmBC,KAAnB,EAA+B;AAC3B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEMD,EAAAA,aAAP,CAAqBI,GAArB,EAAkCC,OAAlC,EAAmDC,SAAnD,EAAsEC,MAAtE,EAAiG;AAC7F,WAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEH,GAAd;AAAmB,MAAA,OAAO,EAAEC,OAA5B;AAAqC,MAAA,SAAS,EAAEC,SAAhD;AAA2D,MAAA,MAAM,EAAEC,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAEML,EAAAA,cAAP,GAAmD;AAC/C;AACA,QAAIM,SAAS,KAAK,KAAKX,KAAL,CAAWE,QAAX,CAAoB,SAApB,CAAlB,EAAkD;AAC9CU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWE,QAAX,CAAoBY,IAApB,EAAZ;AACA,UAAIC,GAAG,GAAG,KAAKf,KAAL,CAAWE,QAAX,CAAoBc,GAApB,CACLC,OAAD,IAAkB,KAAKd,aAAL,CAAmBc,OAAO,CAAC,YAAD,CAA1B,EAA0CA,OAAO,CAAC,SAAD,CAAjD,EAA8DA,OAAO,CAAC,WAAD,CAArE,EAAoFA,OAAO,CAAC,QAAD,CAA3F,CADZ,EAGTH,IAHS,CAGJ,CAACI,QAAD,EAAgBC,QAAhB,KAA0C;AACxCP,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACA,eAAO,CAAP,CAFwC,CAEhC;AACX,OANK,CAAV;AAQA,aAAOH,GAAP;AACH,KAXD,MAWO;AACH,aAAO,EAAP;AACH;AACJ;;AAEMK,EAAAA,MAAP,GAA2B;AACvB,WACI;AAAK,MAAA,SAAS,EAAC,iFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,cAAL,EADL,CADJ,CADJ;AAOH;;AAzCqE;;AA4C1E,eAAeR,QAAf","sourcesContent":["import React, {ReactNode} from 'react';\nimport Message from \"./Message\";\n\nclass Messages extends React.Component<{ id: string, messages: [] }, any> {\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            messages: [],\n        }\n        this.renderMessage = this.renderMessage.bind(this);\n        this.renderMessages = this.renderMessages.bind(this);\n        this.setState = this.setState.bind(this);\n    }\n\n    public renderMessage(key: string, content: string, send_date: string, pseudo: string): ReactNode {\n        return <Message key={key} content={content} send_date={send_date} pseudo={pseudo}/>;\n    }\n\n    public renderMessages(): ({} | null | undefined)[] {\n        // @ts-ignore\n        if (undefined === this.props.messages['message']) {\n            console.log(this.props.messages.sort());\n            let res = this.props.messages.map(\n                (message: any) => this.renderMessage(message['id_message'], message['content'], message['send_date'], message['pseudo'])\n            )\n            .sort((message1: any, message2: any): number => {\n                    console.log(message1);\n                    return 1// message1['send_date'].compareTo(message2['send_date']);\n                }\n            );\n            return res;\n        } else {\n            return [];\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 pl-lg-0 pl-sm-0 pr-lg-5 mt-lg-3 mt-sm-4\">\n                <ul className=\"messages-list list-unstyled\">\n                    {this.renderMessages()}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}