{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/DropBox.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as DropBoxLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/usable-image-icon.svg\";\nconst Heading = styled.p`\n  color: #5757e7;\n  text-align: center;\n`;\n\nclass DropBoxBackground extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#ffffff',\n        width: '220px',\n        height: '145px'\n      },\n      className: 'rounded pt-4 ' + this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.props.children, React.createElement(Heading, {\n      active: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.label));\n  }\n\n}\n\nclass DropBox extends React.Component {\n  // private file: File | null;\n  constructor(props) {\n    super(props); // this.file = null;\n\n    this.state = {\n      draggingState: '',\n      dragged: false,\n      label: this.props.labelNotDragged,\n      src: ''\n    };\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleFileDrop = this.handleFileDrop.bind(this);\n    this.handleDragEnter = this.handleDragEnter.bind(this);\n    this.handleDragExit = this.handleDragExit.bind(this);\n  }\n\n  handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  handleFileDrop(event) {\n    this.props.handleFileDrop(event); // event.preventDefault();\n    // this.file = event.dataTransfer.files[0];\n\n    this.setState({\n      dragged: true\n    });\n    this.setState({\n      label: this.props.labelDragged\n    });\n    this.setState({\n      draggingState: 'not dragging'\n    });\n    let file = event.dataTransfer.files[0];\n    let preview = document.getElementById('lala');\n    console.log(preview);\n    let reader = new FileReader();\n    reader.addEventListener('load', () => {\n      // @ts-ignore\n      this.setState({\n        src: reader.result\n      });\n    });\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  }\n\n  handleDragEnter(event) {\n    console.log('drag enter');\n    this.setState({\n      label: this.props.labelNotDragged\n    });\n    this.setState({\n      draggingState: 'dragging'\n    });\n  }\n\n  handleDragExit(event) {\n    console.log('drag exit');\n\n    if (this.state.dragged) {\n      this.setState({\n        label: this.props.labelDragged\n      });\n    } else {\n      this.setState({\n        label: this.props.labelNotDragged\n      });\n    }\n\n    this.setState({\n      draggingState: 'not dragging'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      onDragOver: this.handleDragOver,\n      onDrop: this.handleFileDrop,\n      onDragEnter: this.handleDragEnter,\n      onDragExit: this.handleDragExit,\n      style: {\n        opacity: this.state.draggingState === 'dragging' ? 0.5 : 1,\n        transform: this.state.draggingState === 'dragging' ? 'rotate(-2deg) translateY(-10px)' : 'rotate(0)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(DropBoxBackground, {\n      label: this.state.label,\n      className: this.props.backgroundClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: 'file',\n      id: this.props.id,\n      onChange: this.props.handleFileChange,\n      hidden: true,\n      accept: this.props.accept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, () => {\n      if (this.state.dragged) {\n        return React.createElement(\"img\", {\n          src: this.state.src,\n          alt: 'Logo',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: 'rounded-1',\n          style: {\n            padding: '10px',\n            margin: '10px',\n            borderRadius: '5px',\n            backgroundColor: '#e6e6e6',\n            width: '40%',\n            height: '50%',\n            marginLeft: 'auto',\n            marginRight: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n      }\n    }), React.createElement(DropBoxLogo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default DropBox;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/DropBox.tsx"],"names":["React","styled","Heading","p","DropBoxBackground","Component","render","backgroundColor","width","height","props","className","children","label","DropBox","constructor","state","draggingState","dragged","labelNotDragged","src","handleDragOver","bind","handleFileDrop","handleDragEnter","handleDragExit","event","preventDefault","setState","labelDragged","file","dataTransfer","files","preview","document","getElementById","console","log","reader","FileReader","addEventListener","result","readAsDataURL","opacity","transform","backgroundClassName","id","handleFileChange","accept","padding","margin","borderRadius","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, ReactNode} from 'react';\nimport styled from 'styled-components';\nimport {ReactComponent as DropBoxLogo} from \"../../img/usable-image-icon.svg\";\n\nconst Heading = styled.p<{ active: boolean }>`\n  color: #5757e7;\n  text-align: center;\n`;\n\nclass DropBoxBackground extends React.Component<{ label: string, className: string }, any> {\n    public render(): ReactNode {\n        return (\n            <div\n                style={{\n                    backgroundColor: '#ffffff',\n                    width: '220px',\n                    height: '145px',\n                }}\n                className={'rounded pt-4 ' + this.props.className}\n            >\n                {this.props.children}\n                <Heading active={false}>\n                    {this.props.label}\n                </Heading>\n            </div>\n        );\n    }\n}\n\ninterface DropBoxProps {\n    id: string,\n    className: string,\n    labelNotDragged: string,\n    labelDragged: string,\n    accept: string,\n    backgroundClassName: string,\n    handleFileDrop: (event: React.DragEvent<HTMLDivElement>) => void,\n    handleFileChange: (event: ChangeEvent<HTMLInputElement>) => void,\n}\n\ninterface DropBoxState {\n    draggingState: string,\n    dragged: boolean,\n    label: string,\n    src: string,\n}\n\nclass DropBox extends React.Component<DropBoxProps, DropBoxState> {\n    // private file: File | null;\n\n    constructor(props: any) {\n        super(props);\n        // this.file = null;\n        this.state = {\n            draggingState: '',\n            dragged: false,\n            label: this.props.labelNotDragged,\n            src: '',\n        }\n        this.handleDragOver = this.handleDragOver.bind(this);\n        this.handleFileDrop = this.handleFileDrop.bind(this);\n        this.handleDragEnter = this.handleDragEnter.bind(this);\n        this.handleDragExit = this.handleDragExit.bind(this);\n    }\n\n    public handleDragOver(event: React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n    }\n\n    public handleFileDrop(event: React.DragEvent<HTMLDivElement>): void {\n        this.props.handleFileDrop(event);\n        // event.preventDefault();\n        // this.file = event.dataTransfer.files[0];\n        this.setState({dragged: true});\n        this.setState({label: this.props.labelDragged});\n        this.setState({draggingState: 'not dragging'});\n\n        let file = event.dataTransfer.files[0];\n        let preview = document.getElementById('lala');\n        console.log(preview);\n        let reader = new FileReader();\n\n        reader.addEventListener('load', () => {\n            // @ts-ignore\n            this.setState({src: reader.result});\n        });\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n\n    public handleDragEnter(event: React.DragEvent<HTMLDivElement>): void {\n        console.log('drag enter');\n        this.setState({label: this.props.labelNotDragged});\n        this.setState({draggingState: 'dragging'});\n    }\n\n    public handleDragExit(event: React.DragEvent<HTMLDivElement>): void {\n        console.log('drag exit');\n        if (this.state.dragged) {\n            this.setState({label: this.props.labelDragged});\n        } else {\n            this.setState({label: this.props.labelNotDragged});\n        }\n        this.setState({draggingState: 'not dragging'});\n    }\n\n    public render(): ReactNode {\n        return (\n            <div\n                className={this.props.className}\n                onDragOver={this.handleDragOver}\n                onDrop={this.handleFileDrop}\n                onDragEnter={this.handleDragEnter}\n                onDragExit={this.handleDragExit}\n                style={{\n                    opacity: this.state.draggingState === 'dragging' ? 0.5 : 1,\n                    transform: this.state.draggingState === 'dragging' ? 'rotate(-2deg) translateY(-10px)' : 'rotate(0)',\n                }}\n            >\n                <label>\n                    <DropBoxBackground\n                        label={this.state.label}\n                        className={this.props.backgroundClassName}\n                    >\n                        <input\n                            type={'file'}\n                            id={this.props.id}\n                            onChange={this.props.handleFileChange}\n                            hidden\n                            accept={this.props.accept}/>\n                            <div>\n                        {() => {\n                            if (this.state.dragged) {\n                                return (\n                                    <img\n                                        src={this.state.src}\n                                        alt={'Logo'}\n                                    />\n                                );\n                            } else {\n                                return (<div\n                                        className={'rounded-1'}\n                                        style={{\n                                            padding: '10px',\n                                            margin: '10px',\n                                            borderRadius: '5px',\n                                            backgroundColor: '#e6e6e6',\n                                            width: '40%',\n                                            height: '50%',\n                                            marginLeft: 'auto',\n                                            marginRight: 'auto',\n                                        }}\n                                    ></div>\n                                );\n                            }\n                        }}</div>\n                        <DropBoxLogo/>\n                    </DropBoxBackground>\n                </label>\n            </div>);\n    }\n}\n\nexport default DropBox;"]},"metadata":{},"sourceType":"module"}