{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/usr/src/app/client/src/Request.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Request = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        JSONResponse = _useState2[0],\n        setResponse = _useState2[1];\n\n  let route = '/';\n\n  if (undefined !== props.route.split(/\\//)[1]) {\n    route += '?module=' + props.route.split(/\\//)[1];\n\n    if (undefined !== props.route.split(/\\//)[2]) {\n      route += '&action=' + props.route.split(/\\//)[2];\n\n      if (undefined !== props.route.split(/\\//)[3]) {\n        route += '&param=' + props.route.split(/\\//)[3];\n      }\n    }\n  }\n\n  useEffect(() => {\n    const domain = 'http://localhost:80';\n    const method = props.method;\n    const data = props.data;\n\n    const verifyIfConnected = () => {\n      fetch(domain + route, {\n        method: method,\n        headers: 'POST' === method ? {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        } : null,\n        body: 'POST' === method ? JSON.stringify(data) : null\n      }).then(response => response.json()).then(jsonResponse => setResponse(jsonResponse)).catch(networkError => console.log(networkError));\n    };\n\n    verifyIfConnected();\n  }, []);\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Connected: \", null !== JSONResponse ? JSONResponse['connected'] : 'coucou');\n};\n\nexport default Request;","map":{"version":3,"sources":["/usr/src/app/client/src/Request.js"],"names":["React","useState","useEffect","Request","props","JSONResponse","setResponse","route","undefined","split","domain","method","data","verifyIfConnected","fetch","headers","body","JSON","stringify","then","response","json","jsonResponse","catch","networkError","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,oBACWH,QAAQ,CAAC,IAAD,CADnB;AAAA;AAAA,QAClBI,YADkB;AAAA,QACJC,WADI;;AAEzB,MAAIC,KAAK,GAAG,GAAZ;;AACA,MAAIC,SAAS,KAAKJ,KAAK,CAACG,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,IAAAA,KAAK,IAAI,aAAaH,KAAK,CAACG,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAtB;;AACA,QAAID,SAAS,KAAKJ,KAAK,CAACG,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,MAAAA,KAAK,IAAI,aAAaH,KAAK,CAACG,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAtB;;AACA,UAAID,SAAS,KAAKJ,KAAK,CAACG,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,QAAAA,KAAK,IAAI,YAAYH,KAAK,CAACG,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAArB;AACD;AACF;AACF;;AACDP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,MAAM,GAAG,qBAAf;AACA,UAAMC,MAAM,GAAGP,KAAK,CAACO,MAArB;AACA,UAAMC,IAAI,GAAGR,KAAK,CAACQ,IAAnB;;AACA,UAAMC,iBAAiB,GAAG,MAAM;AAC9BC,MAAAA,KAAK,CAACJ,MAAM,GAAGH,KAAV,EAAiB;AACpBI,QAAAA,MAAM,EAAEA,MADY;AAEpBI,QAAAA,OAAO,EAAE,WAAWJ,MAAX,GAAoB;AAC3B,oBAAU,kBADiB;AAE3B,0BAAgB;AAFW,SAApB,GAGL,IALgB;AAMpBK,QAAAA,IAAI,EAAE,WAAWL,MAAX,GAAoBM,IAAI,CAACC,SAAL,CAAeN,IAAf,CAApB,GAA2C;AAN7B,OAAjB,CAAL,CAQGO,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQG,YAAY,IAAIhB,WAAW,CAACgB,YAAD,CATnC,EAUGC,KAVH,CAUSC,YAAY,IAAIC,OAAO,CAACC,GAAR,CAAYF,YAAZ,CAVzB;AAWD,KAZD;;AAaAX,IAAAA,iBAAiB;AAClB,GAlBQ,EAkBN,EAlBM,CAAT;AAmBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB,SAASR,YAAT,GAAwBA,YAAY,CAAC,WAAD,CAApC,GAAoD,QAApE,CAAP;AACD,CAhCD;;AAkCA,eAAeF,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Request = (props) => {\n  const [JSONResponse, setResponse] = useState(null);\n  let route = '/';\n  if (undefined !== props.route.split(/\\//)[1]) {\n    route += '?module=' + props.route.split(/\\//)[1];\n    if (undefined !== props.route.split(/\\//)[2]) {\n      route += '&action=' + props.route.split(/\\//)[2];\n      if (undefined !== props.route.split(/\\//)[3]) {\n        route += '&param=' + props.route.split(/\\//)[3];\n      }\n    }\n  }\n  useEffect(() => {\n    const domain = 'http://localhost:80';\n    const method = props.method;\n    const data = props.data;\n    const verifyIfConnected = () => {\n      fetch(domain + route, {\n        method: method,\n        headers: 'POST' === method ? {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        } : null,\n        body: 'POST' === method ? JSON.stringify(data) : null\n      })\n        .then(response => response.json())\n        .then(jsonResponse => setResponse(jsonResponse))\n        .catch(networkError => console.log(networkError))\n    }\n    verifyIfConnected();\n  }, []);\n  return <h1>Connected: {null !== JSONResponse ? JSONResponse['connected'] : 'coucou' }</h1>;\n}\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}