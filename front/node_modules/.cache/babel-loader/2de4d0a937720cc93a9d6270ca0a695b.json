{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/SearchBar.tsx\";\nimport React from 'react';\nimport Request from \"../../API/Request\";\nimport HashtagInput from \"./HashtagInput\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      proposals: [],\n      inputIsNotEmpty: true,\n      hashtagsView: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })\n    };\n    this.emptyInput = this.emptyInput.bind(this);\n    this.updateHashtagsView = this.updateHashtagsView.bind(this);\n    this.refreshProposals = this.refreshProposals.bind(this);\n    this.setState = this.setState.bind(this);\n  }\n\n  componentDidUpdate() {\n    new Request('/lobby/search/0', this.refreshProposals, 'POST', {\n      search: this.state.query.split(/ /)\n    });\n  }\n\n  refreshProposals(data) {\n    console.log('ok');\n    console.log(data);\n    console.log(this.state.proposals);\n    this.setState({\n      proposals: undefined === data['message'] ? data : []\n    });\n  }\n\n  emptyInput(isEmpty) {\n    this.setState({\n      inputIsNotEmpty: isEmpty\n    });\n  }\n\n  updateHashtagsView(hashtags) {\n    this.setState({\n      hashtagsView: hashtags\n    });\n  }\n\n  updateHashtags(hashtags) {}\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-8 col-md-8 col-sm-6 col-xs-6 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"search-icon\",\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"search-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.inputIsNotEmpty ? 'Rechercher...' : '')), this.state.hashtagsView, React.createElement(HashtagInput, {\n      id: 'search',\n      className: 'form-control col-lg-12 w-75 mr-sm-2',\n      type: 'search',\n      baseIndent: 14,\n      onUpdate: this.emptyInput,\n      updateHashtagsView: this.updateHashtagsView,\n      updateHashtags: this.updateHashtags,\n      hashtagClassName: '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/SearchBar.tsx"],"names":["React","Request","HashtagInput","SearchBar","Component","constructor","props","state","query","proposals","inputIsNotEmpty","hashtagsView","emptyInput","bind","updateHashtagsView","refreshProposals","setState","componentDidUpdate","search","split","data","console","log","undefined","isEmpty","hashtags","updateHashtags","render"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport Request from \"../../API/Request\";\nimport HashtagInput from \"./HashtagInput\";\n\ninterface SearchBarState {\n    query: string,\n    proposals: [],\n    inputIsNotEmpty: boolean,\n    hashtagsView: ReactNode,\n}\n\nclass SearchBar extends React.Component<any, SearchBarState> {\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            query: '',\n            proposals: [],\n            inputIsNotEmpty: true,\n            hashtagsView: <div></div>,\n        }\n        this.emptyInput = this.emptyInput.bind(this);\n        this.updateHashtagsView = this.updateHashtagsView.bind(this);\n        this.refreshProposals = this.refreshProposals.bind(this);\n        this.setState = this.setState.bind(this);\n    }\n\n    public componentDidUpdate(): void {\n        new Request(\n            '/lobby/search/0',\n            this.refreshProposals,\n            'POST',\n            {search: this.state.query.split(/ /)},\n        );\n    }\n\n    public refreshProposals(data: any): void {\n        console.log('ok');\n        console.log(data);\n        console.log(this.state.proposals);\n        this.setState({proposals: undefined === data['message'] ? data : []});\n    }\n\n    public emptyInput(isEmpty: boolean): void {\n        this.setState({inputIsNotEmpty: isEmpty});\n    }\n\n    public updateHashtagsView(hashtags: ReactNode): void {\n        this.setState({hashtagsView: hashtags});\n    }\n\n    public updateHashtags(hashtags: string[]): void {\n    }\n\n    public render(): ReactNode {\n        return (\n            <form\n                className=\"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-8 col-md-8 col-sm-6 col-xs-6 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0\">\n                <label id=\"search-icon\" htmlFor=\"search\">\n                    <span className=\"glyphicon glyphicon-search search-icon\"></span>\n                    <span\n                        id=\"search-placeholder\">{this.state.inputIsNotEmpty ? 'Rechercher...' : ''}</span>\n                </label>\n                {this.state.hashtagsView}\n                <HashtagInput\n                    id={'search'}\n                    className={'form-control col-lg-12 w-75 mr-sm-2'}\n                    type={'search'}\n                    baseIndent={14}\n                    onUpdate={this.emptyInput}\n                    updateHashtagsView={this.updateHashtagsView}\n                    updateHashtags={this.updateHashtags}\n                    hashtagClassName={''}\n                />\n            </form>\n        );\n    }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}