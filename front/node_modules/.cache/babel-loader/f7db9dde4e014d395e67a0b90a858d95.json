{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/SearchBar.tsx\";\nimport React from 'react';\nimport Hashtag from \"./Hashtag\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.input = void 0;\n    this.state = {\n      text: '',\n      hashtags: [],\n      widths: [],\n      totalWidth: 0\n    };\n    this.input = React.createRef();\n    this.init();\n  }\n\n  init() {\n    this.write = this.write.bind(this);\n    this.renderHashtags = this.renderHashtags.bind(this);\n    this.addHashtag = this.addHashtag.bind(this);\n    this.deleteHashtag = this.deleteHashtag.bind(this);\n    this.updateHashtags = this.updateHashtags.bind(this);\n    this.updateIndent = this.updateIndent.bind(this);\n    this.updateTotalWidth = this.updateTotalWidth.bind(this);\n  }\n\n  write(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.updateIndent();\n  }\n\n  updateIndent() {\n    this.forceUpdate(() => {\n      console.log(this.state.totalWidth);\n      console.log('h ' + (this.state.hashtags.length - 1) * 10);\n      let x = 0 === this.state.totalWidth ? 2 : this.state.totalWidth / 7 - (this.state.hashtags.length - 1) * 10 / 4.5; // @ts-ignore\n\n      this.input.current.style.textIndent = x + 'vh'; // @ts-ignore\n\n      this.input.current.value = this.state.text;\n    });\n  }\n\n  addHashtag(text) {\n    if (!this.state.hashtags.includes(text)) {\n      this.state.hashtags.push(text);\n      this.state.widths.push(0);\n      this.setState({\n        text: ''\n      }); // @ts-ignore\n\n      this.forceUpdate(() => this.input.current.value = '');\n      this.updateIndent();\n    }\n  }\n\n  deleteHashtag() {\n    this.state.hashtags.pop();\n    this.state.widths.pop();\n    this.setState((state, props) => {\n      return {\n        totalWidth: 0 === state.widths.length ? 0 : state.widths.map(width => width).reduce((width, nextWidth) => width + nextWidth)\n      };\n    });\n    this.updateIndent();\n  }\n\n  async updateHashtags(event) {\n    if (13 === event.keyCode) {\n      event.preventDefault(); // @ts-ignore\n\n      this.addHashtag(event.target.value);\n    } else if (8 === event.keyCode) {\n      // @ts-ignore\n      if ('' === this.input.current.value && 0 !== this.state.hashtags.length) {\n        event.preventDefault();\n        this.deleteHashtag();\n      }\n    }\n  }\n\n  updateTotalWidth(text, hashtagBoxWidth) {\n    this.setState((state, props) => {\n      state.widths[this.state.hashtags.indexOf(text)] = hashtagBoxWidth;\n      return {\n        totalWidth: state.widths.map(width => width).reduce((width, nextWidth) => width + nextWidth)\n      };\n    }, () => document.getElementById('search').value = '');\n    this.updateIndent();\n  }\n\n  renderHashtags() {\n    const res = this.state.hashtags.map(hashtag => React.createElement(Hashtag, {\n      key: hashtag,\n      text: hashtag,\n      updateWidth: this.updateTotalWidth,\n      remove: this.deleteHashtag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n    return res;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-5 col-md-5 col-sm-6 col-xs-6 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"search-icon\",\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"search-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.text === '' && 0 === this.state.hashtags.length ? 'Search...' : '')), this.renderHashtags(), React.createElement(\"input\", {\n      id: \"search\",\n      className: \"form-control col-lg-12 w-75 mr-sm-2\",\n      type: \"search\",\n      \"aria-label\": \"Search\",\n      onChange: event => this.write(event),\n      value: this.state.text,\n      onKeyDown: this.updateHashtags,\n      ref: this.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/SearchBar.tsx"],"names":["React","Hashtag","SearchBar","Component","constructor","props","input","state","text","hashtags","widths","totalWidth","createRef","init","write","bind","renderHashtags","addHashtag","deleteHashtag","updateHashtags","updateIndent","updateTotalWidth","event","setState","target","value","componentDidMount","forceUpdate","console","log","length","x","current","style","textIndent","includes","push","pop","map","width","reduce","nextWidth","keyCode","preventDefault","hashtagBoxWidth","indexOf","document","getElementById","res","hashtag","render"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, ReactNode, Ref} from 'react';\nimport Hashtag from \"./Hashtag\";\n\ninterface SearchBarState {\n    text: string,\n    hashtags: string[],\n    widths: number[],\n    totalWidth: number,\n}\n\nclass SearchBar extends React.Component<any, SearchBarState> {\n    private input: Ref<HTMLInputElement>;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            text: '',\n            hashtags: [],\n            widths: [],\n            totalWidth: 0,\n        }\n        this.input = React.createRef();\n        this.init();\n    }\n\n    public init(): void {\n        this.write = this.write.bind(this);\n        this.renderHashtags = this.renderHashtags.bind(this);\n        this.addHashtag = this.addHashtag.bind(this);\n        this.deleteHashtag = this.deleteHashtag.bind(this);\n        this.updateHashtags = this.updateHashtags.bind(this);\n        this.updateIndent = this.updateIndent.bind(this);\n        this.updateTotalWidth = this.updateTotalWidth.bind(this);\n    }\n\n    public write(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({text: event.target.value});\n    }\n\n    public componentDidMount(): void {\n        this.updateIndent();\n    }\n\n    public updateIndent(): void {\n        this.forceUpdate(() => {\n            console.log(this.state.totalWidth);\n            console.log('h ' + ((this.state.hashtags.length - 1) * 10));\n            let x: number = 0 === this.state.totalWidth ? 2 : this.state.totalWidth / 7 - ((this.state.hashtags.length - 1) * 10) / 4.5;\n            // @ts-ignore\n            this.input.current.style.textIndent = x + 'vh';\n            // @ts-ignore\n            this.input.current.value = this.state.text;\n        });\n    }\n\n    public addHashtag(text: string): void {\n        if (!this.state.hashtags.includes(text)) {\n            this.state.hashtags.push(text);\n            this.state.widths.push(0);\n            this.setState({text: ''});\n            // @ts-ignore\n            this.forceUpdate(() => this.input.current.value = '');\n            this.updateIndent();\n        }\n    }\n\n    public deleteHashtag(): void {\n        this.state.hashtags.pop();\n        this.state.widths.pop();\n        this.setState((state, props) => {\n            return {totalWidth: 0 === state.widths.length ? 0 : state.widths.map((width: number) => width).reduce((width: number, nextWidth: number) => width + nextWidth)};\n        });\n        this.updateIndent();\n    }\n\n    public async updateHashtags(event: React.KeyboardEvent<HTMLInputElement>): Promise<void> {\n        if (13 === event.keyCode) {\n            event.preventDefault();\n            // @ts-ignore\n            this.addHashtag((event as KeyboardEvent).target.value);\n        } else if (8 === event.keyCode) {\n            // @ts-ignore\n            if ('' === this.input.current.value && 0 !== this.state.hashtags.length) {\n                event.preventDefault();\n                this.deleteHashtag();\n            }\n        }\n    }\n\n    public updateTotalWidth(text: string, hashtagBoxWidth: number): void {\n        this.setState((state, props) => {\n                state.widths[this.state.hashtags.indexOf(text)] = hashtagBoxWidth;\n                return {totalWidth: state.widths.map((width: number) => width).reduce((width: number, nextWidth: number) => width + nextWidth)}\n            },\n            () => (document.getElementById('search') as HTMLInputElement).value = '');\n        this.updateIndent();\n    }\n\n    public renderHashtags(): ReactNode {\n        const res = this.state.hashtags.map(\n            (hashtag: string) => <Hashtag\n                key={hashtag}\n                text={hashtag}\n                updateWidth={this.updateTotalWidth}\n                remove={this.deleteHashtag}\n            />\n        );\n        return res;\n    }\n\n    public render(): ReactNode {\n        return (\n            <form\n                className=\"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-5 col-md-5 col-sm-6 col-xs-6 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0\">\n                <label id=\"search-icon\" htmlFor=\"search\">\n                    <span className=\"glyphicon glyphicon-search search-icon\"></span>\n                    <span\n                        id=\"search-placeholder\">{this.state.text === '' && 0 === this.state.hashtags.length ? 'Search...' : ''}</span>\n                </label>\n                {this.renderHashtags()}\n                <input id=\"search\" className=\"form-control col-lg-12 w-75 mr-sm-2\" type=\"search\"\n                       aria-label=\"Search\"\n                       onChange={event => this.write(event)}\n                       value={this.state.text}\n                       onKeyDown={this.updateHashtags}\n                       ref={this.input}\n                />\n            </form>\n        );\n    }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}