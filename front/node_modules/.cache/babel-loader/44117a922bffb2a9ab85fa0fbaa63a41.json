{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/DropBox.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as DropBoxLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/usable-image-icon.svg\";\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst Heading = styled.p`\n  color: #5757e7;\n  text-align: center;\n`;\n\nclass DropBoxBackground extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#ffffff',\n        width: '220px',\n        height: '145px'\n      },\n      className: 'rounded pt-4 ' + this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.children, React.createElement(Heading, {\n      active: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.label));\n  }\n\n}\n\nclass DropBox extends React.Component {\n  // private file: File | null;\n  constructor(props) {\n    super(props); // this.file = null;\n\n    this.state = {\n      draggingState: '',\n      dragged: false,\n      label: this.props.labelNotDragged,\n      src: ''\n    };\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleFileDrop = this.handleFileDrop.bind(this);\n    this.handleDragEnter = this.handleDragEnter.bind(this);\n    this.handleDragExit = this.handleDragExit.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.updateFilePreview = this.updateFilePreview.bind(this);\n    this.renderLogo = this.renderLogo.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.labelDragged === 'dragged') {\n      console.log('ok');\n    }\n  }\n\n  handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  handleFileDrop(event) {\n    this.props.handleFileDrop(event); // event.preventDefault();\n    // this.file = event.dataTransfer.files[0];\n\n    this.setState({\n      dragged: true\n    });\n    this.setState({\n      label: this.props.labelDragged\n    });\n    this.setState({\n      draggingState: 'not dragging'\n    });\n    this.updateFilePreview(event.dataTransfer.files[0]);\n  }\n\n  handleDragEnter(event) {\n    console.log('drag enter');\n    this.setState({\n      label: this.props.labelNotDragged\n    });\n    this.setState({\n      draggingState: 'dragging'\n    });\n  }\n\n  handleDragExit(event) {\n    console.log('drag exit');\n\n    if (this.state.dragged) {\n      this.setState({\n        label: this.props.labelDragged\n      });\n    } else {\n      this.setState({\n        label: this.props.labelNotDragged\n      });\n    }\n\n    this.setState({\n      draggingState: 'not dragging'\n    });\n  }\n\n  handleFileChange(event) {\n    this.props.handleFileChange(event);\n    this.setState({\n      dragged: true\n    });\n    this.setState({\n      label: this.props.labelDragged\n    });\n    this.setState({\n      draggingState: 'not dragging'\n    }); // @ts-ignore\n\n    this.updateFilePreview(event.target.files[0]);\n  }\n\n  updateFilePreview(file) {\n    let reader = new FileReader();\n    console.log('begin');\n\n    if (file.type === 'application/pdf') {\n      // @ts-ignore\n      let typedArray = new Uint8Array(reader.result);\n      let promise = new Promise(() => {\n        return pdfjsLib.getDocument(typedArray);\n      });\n      promise.then(pdf => {\n        console.log(\"the pdf has \", pdf.numPages, \"page(s).\");\n      });\n    } else {\n      reader.addEventListener('load', () => {\n        // @ts-ignore\n        this.setState({\n          src: reader.result\n        });\n      });\n\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n\n  renderLogo() {\n    if (this.state.dragged) {\n      return React.createElement(\"img\", {\n        id: 'draggedLogo',\n        src: this.state.src,\n        alt: 'Logo',\n        style: {\n          width: '100px',\n          height: '100px',\n          borderRadius: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: 'rounded-1',\n        style: {\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '5px',\n          backgroundColor: '#e6e6e6',\n          width: '40%',\n          height: '50%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(DropBoxLogo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      onDragOver: this.handleDragOver,\n      onDrop: this.handleFileDrop,\n      onDragEnter: this.handleDragEnter,\n      onDragExit: this.handleDragExit,\n      style: {\n        opacity: this.state.draggingState === 'dragging' ? 0.5 : 1,\n        transform: this.state.draggingState === 'dragging' ? 'rotate(-2deg) translateY(-10px)' : 'rotate(0)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(DropBoxBackground, {\n      label: this.state.label,\n      className: this.props.backgroundClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: 'file',\n      id: this.props.id,\n      onChange: this.handleFileChange,\n      hidden: true,\n      accept: this.props.accept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), this.renderLogo())));\n  }\n\n}\n\nexport default DropBox;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/DropBox.tsx"],"names":["React","styled","pdfjs","GlobalWorkerOptions","workerSrc","version","Heading","p","DropBoxBackground","Component","render","backgroundColor","width","height","props","className","children","label","DropBox","constructor","state","draggingState","dragged","labelNotDragged","src","handleDragOver","bind","handleFileDrop","handleDragEnter","handleDragExit","handleFileChange","updateFilePreview","renderLogo","componentDidUpdate","prevProps","prevState","snapshot","labelDragged","console","log","event","preventDefault","setState","dataTransfer","files","target","file","reader","FileReader","type","typedArray","Uint8Array","result","promise","Promise","pdfjsLib","getDocument","then","pdf","numPages","addEventListener","readAsDataURL","borderRadius","padding","margin","marginLeft","marginRight","opacity","transform","backgroundClassName","id","accept"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, ReactNode} from 'react';\nimport styled from 'styled-components';\nimport {ReactComponent as DropBoxLogo} from \"../../img/usable-image-icon.svg\";\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst Heading = styled.p<{ active: boolean }>`\n  color: #5757e7;\n  text-align: center;\n`;\n\nclass DropBoxBackground extends React.Component<{ label: string, className: string }, any> {\n    public render(): ReactNode {\n        return (\n            <div\n                style={{\n                    backgroundColor: '#ffffff',\n                    width: '220px',\n                    height: '145px',\n                }}\n                className={'rounded pt-4 ' + this.props.className}\n            >\n                {this.props.children}\n                <Heading active={false}>\n                    {this.props.label}\n                </Heading>\n            </div>\n        );\n    }\n}\n\ninterface DropBoxProps {\n    id: string,\n    className: string,\n    labelNotDragged: string,\n    labelDragged: string,\n    accept: string,\n    backgroundClassName: string,\n    handleFileDrop: (event: React.DragEvent<HTMLDivElement>) => void,\n    handleFileChange: (event: ChangeEvent<HTMLInputElement>) => void,\n}\n\ninterface DropBoxState {\n    draggingState: string,\n    dragged: boolean,\n    label: string,\n    src: string,\n}\n\nclass DropBox extends React.Component<DropBoxProps, DropBoxState> {\n    // private file: File | null;\n\n    constructor(props: any) {\n        super(props);\n        // this.file = null;\n        this.state = {\n            draggingState: '',\n            dragged: false,\n            label: this.props.labelNotDragged,\n            src: '',\n        }\n        this.handleDragOver = this.handleDragOver.bind(this);\n        this.handleFileDrop = this.handleFileDrop.bind(this);\n        this.handleDragEnter = this.handleDragEnter.bind(this);\n        this.handleDragExit = this.handleDragExit.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.updateFilePreview = this.updateFilePreview.bind(this);\n        this.renderLogo = this.renderLogo.bind(this);\n    }\n\n    public componentDidUpdate(prevProps: Readonly<DropBoxProps>, prevState: Readonly<DropBoxState>, snapshot?: any): void {\n        if (this.props.labelDragged === 'dragged') {\n            console.log('ok');\n        }\n    }\n\n    public handleDragOver(event: React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n    }\n\n    public handleFileDrop(event: React.DragEvent<HTMLDivElement>): void {\n        this.props.handleFileDrop(event);\n        // event.preventDefault();\n        // this.file = event.dataTransfer.files[0];\n        this.setState({dragged: true});\n        this.setState({label: this.props.labelDragged});\n        this.setState({draggingState: 'not dragging'});\n\n        this.updateFilePreview(event.dataTransfer.files[0]);\n    }\n\n    public handleDragEnter(event: React.DragEvent<HTMLDivElement>): void {\n        console.log('drag enter');\n        this.setState({label: this.props.labelNotDragged});\n        this.setState({draggingState: 'dragging'});\n    }\n\n    public handleDragExit(event: React.DragEvent<HTMLDivElement>): void {\n        console.log('drag exit');\n        if (this.state.dragged) {\n            this.setState({label: this.props.labelDragged});\n        } else {\n            this.setState({label: this.props.labelNotDragged});\n        }\n        this.setState({draggingState: 'not dragging'});\n    }\n\n    public handleFileChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.props.handleFileChange(event);\n        this.setState({dragged: true});\n        this.setState({label: this.props.labelDragged});\n        this.setState({draggingState: 'not dragging'});\n        // @ts-ignore\n        this.updateFilePreview(event.target.files[0]);\n    }\n\n    public updateFilePreview(file: File): void {\n\n        let reader = new FileReader();\n        console.log('begin');\n\n        if (file.type === 'application/pdf') {\n            // @ts-ignore\n            let typedArray = new Uint8Array(reader.result);\n\n            let promise = new Promise(() => {\n                return pdfjsLib.getDocument(typedArray);\n            });\n            promise.then(\n                (pdf: any) => {\n                    console.log(\"the pdf has \",pdf.numPages, \"page(s).\");\n                }\n            );\n        } else {\n            reader.addEventListener('load', () => {\n                // @ts-ignore\n                this.setState({src: reader.result});\n            });\n\n            if (file) {\n                reader.readAsDataURL(file);\n            }\n        }\n    }\n\n    public renderLogo(): ReactNode {\n        if (this.state.dragged) {\n            return (\n                <img\n                    id={'draggedLogo'}\n                    src={this.state.src}\n                    alt={'Logo'}\n                    style={{\n                        width: '100px',\n                        height: '100px',\n                        borderRadius: '50px',\n                    }}\n                />\n            );\n        } else {\n            return (\n                <div\n                    className={'rounded-1'}\n                    style={{\n                        padding: '10px',\n                        margin: '10px',\n                        borderRadius: '5px',\n                        backgroundColor: '#e6e6e6',\n                        width: '40%',\n                        height: '50%',\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                    }}\n                >\n                    <DropBoxLogo/>\n                </div>\n            );\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <div\n                className={this.props.className}\n                onDragOver={this.handleDragOver}\n                onDrop={this.handleFileDrop}\n                onDragEnter={this.handleDragEnter}\n                onDragExit={this.handleDragExit}\n                style={{\n                    opacity: this.state.draggingState === 'dragging' ? 0.5 : 1,\n                    transform: this.state.draggingState === 'dragging' ? 'rotate(-2deg) translateY(-10px)' : 'rotate(0)',\n                }}\n            >\n                <label>\n                    <DropBoxBackground\n                        label={this.state.label}\n                        className={this.props.backgroundClassName}\n                    >\n                        <input\n                            type={'file'}\n                            id={this.props.id}\n                            onChange={this.handleFileChange}\n                            hidden\n                            accept={this.props.accept}/>\n                        {this.renderLogo()}\n                    </DropBoxBackground>\n                </label>\n            </div>);\n    }\n}\n\nexport default DropBox;"]},"metadata":{},"sourceType":"module"}