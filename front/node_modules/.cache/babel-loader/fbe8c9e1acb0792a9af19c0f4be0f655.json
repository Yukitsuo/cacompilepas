{"ast":null,"code":"var _jsxFileName = \"/Users/danidani/cacompilepas/front/front/src/Request.js\";\nimport React from 'react';\n\nconst Request = props => {\n  const domain = 'localhost:80';\n  route['module'] = undefined !== props.route.split(/\\//)[0] ? props.route.split(/\\//)[0] : null;\n  route['action'] = props.route.split(/\\//)[1] ? props.route.split(/\\//)[1] : null;\n  route['param'] = props.route.split(/\\//)[2] ? props.route.split(/\\//)[2] : null;\n  let route = '';\n\n  if (undefined !== props.route.split(/\\//)[0]) {\n    route += '?module=' + props.route.split(/\\//)[0] ? props.route.split(/\\//)[0] : '';\n  }\n\n  route += '&';\n\n  for (let routePart of route) {\n    null !== routePart ? finalRoute += routePart : '';\n  }\n\n  const method = props.method;\n  const data = props.data;\n  const JSONResponse = null;\n  fetch(domain + finalRoute, {\n    method: method,\n    headers: 'POST' === method ? {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    } : null,\n    body: 'POST' === method ? JSON.stringify(data) : null\n  }).then(response => response.json()).then(jsonResponse => JSONResponse = jsonResponse).catch(networkError => console.log(networkError));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nexport default Request;","map":{"version":3,"sources":["/Users/danidani/cacompilepas/front/front/src/Request.js"],"names":["React","Request","props","domain","route","undefined","split","routePart","finalRoute","method","data","JSONResponse","fetch","headers","body","JSON","stringify","then","response","json","jsonResponse","catch","networkError","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,MAAM,GAAG,cAAf;AACAC,EAAAA,KAAK,CAAC,QAAD,CAAL,GAAkBC,SAAS,KAAKH,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAd,GAA2CJ,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAA3C,GAAwE,IAA1F;AACAF,EAAAA,KAAK,CAAC,QAAD,CAAL,GAAkBF,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,IAA6BJ,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAA7B,GAA0D,IAA5E;AACAF,EAAAA,KAAK,CAAC,OAAD,CAAL,GAAiBF,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,IAA6BJ,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAA7B,GAA0D,IAA3E;AACA,MAAIF,KAAK,GAAG,EAAZ;;AACA,MAAIC,SAAS,KAAKH,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAlB,EAA8C;AAC5CF,IAAAA,KAAK,IAAI,aAAaF,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAAb,GAA0CJ,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,CAAxB,CAA1C,GAAuE,EAAhF;AACD;;AACDF,EAAAA,KAAK,IAAI,GAAT;;AACA,OAAK,IAAIG,SAAT,IAAsBH,KAAtB,EAA6B;AAC3B,aAASG,SAAT,GAAqBC,UAAU,IAAID,SAAnC,GAA+C,EAA/C;AACD;;AACD,QAAME,MAAM,GAAGP,KAAK,CAACO,MAArB;AACA,QAAMC,IAAI,GAAGR,KAAK,CAACQ,IAAnB;AACA,QAAMC,YAAY,GAAG,IAArB;AACAC,EAAAA,KAAK,CAACT,MAAM,GAAGK,UAAV,EAAsB;AACzBC,IAAAA,MAAM,EAAEA,MADiB;AAEzBI,IAAAA,OAAO,EAAE,WAAWJ,MAAX,GAAoB;AAC3B,gBAAU,kBADiB;AAE3B,sBAAgB;AAFW,KAApB,GAGL,IALqB;AAMzBK,IAAAA,IAAI,EAAE,WAAWL,MAAX,GAAoBM,IAAI,CAACC,SAAL,CAAeN,IAAf,CAApB,GAA2C;AANxB,GAAtB,CAAL,CAQCO,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARlB,EASCF,IATD,CASMG,YAAY,IAAIT,YAAY,GAAGS,YATrC,EAUCC,KAVD,CAUOC,YAAY,IAAIC,OAAO,CAACC,GAAR,CAAYF,YAAZ,CAVvB;AAWA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA5BD;;AA8BA,eAAerB,OAAf","sourcesContent":["import React from 'react';\n\nconst Request = (props) => {\n  const domain = 'localhost:80';\n  route['module'] = undefined !== props.route.split(/\\//)[0] ? props.route.split(/\\//)[0] : null;\n  route['action'] = props.route.split(/\\//)[1] ? props.route.split(/\\//)[1] : null;\n  route['param'] = props.route.split(/\\//)[2] ? props.route.split(/\\//)[2] : null;\n  let route = '';\n  if (undefined !== props.route.split(/\\//)[0]) {\n    route += '?module=' + props.route.split(/\\//)[0] ? props.route.split(/\\//)[0] : '';\n  }\n  route += '&'\n  for (let routePart of route) {\n    null !== routePart ? finalRoute += routePart : '';\n  }\n  const method = props.method;\n  const data = props.data;\n  const JSONResponse = null;\n  fetch(domain + finalRoute, {\n    method: method,\n    headers: 'POST' === method ? {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    } : null,\n    body: 'POST' === method ? JSON.stringify(data) : null\n  })\n  .then(response => response.json())\n  .then(jsonResponse => JSONResponse = jsonResponse)\n  .catch(networkError => console.log(networkError));\n  return <div/>;\n}\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}