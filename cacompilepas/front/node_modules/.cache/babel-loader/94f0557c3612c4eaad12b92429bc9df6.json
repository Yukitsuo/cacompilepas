{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Admin/Users.tsx\";\nimport React from 'react';\nimport User from \"./User\";\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderUsers = this.renderUsers.bind(this);\n  }\n\n  renderUsers() {\n    if (this.props.users['succes']) {\n      let res = this.props.users['data'].map(user => React.createElement(User, {\n        id: user['id_user'],\n        key: user['id_user'],\n        pseudo: user['pseudo'],\n        writeRight: user['write_right'] === '1' ? true : false,\n        icon: user['icon'],\n        delete: this.props.delete,\n        toggleWriteRights: this.props.toggleWriteRights,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n      return res;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'users-section ' + this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.renderUsers());\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Admin/Users.tsx"],"names":["React","User","Users","Component","constructor","props","renderUsers","bind","users","res","map","user","delete","toggleWriteRights","render","className"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAUA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAqD;AAC1CC,EAAAA,WAAP,CAAmBC,KAAnB,EAAsC;AAClC,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEMD,EAAAA,WAAP,GAAgC;AAC5B,QAAI,KAAKD,KAAL,CAAWG,KAAX,CAAiB,QAAjB,CAAJ,EAAgC;AAC5B,UAAIC,GAAG,GAAG,KAAKJ,KAAL,CAAWG,KAAX,CAAiB,MAAjB,EAAyBE,GAAzB,CAA8BC,IAAD,IACnC,oBAAC,IAAD;AACI,QAAA,EAAE,EAAEA,IAAI,CAAC,SAAD,CADZ;AAEI,QAAA,GAAG,EAAEA,IAAI,CAAC,SAAD,CAFb;AAGI,QAAA,MAAM,EAAEA,IAAI,CAAC,QAAD,CAHhB;AAII,QAAA,UAAU,EAAEA,IAAI,CAAC,aAAD,CAAJ,KAAwB,GAAxB,GAA8B,IAA9B,GAAqC,KAJrD;AAKI,QAAA,IAAI,EAAEA,IAAI,CAAC,MAAD,CALd;AAMI,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MANvB;AAOI,QAAA,iBAAiB,EAAE,KAAKP,KAAL,CAAWQ,iBAPlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAV;AAWA,aAAOJ,GAAP;AACH,KAbD,MAaO;AACH,aAAO,EAAP;AACH;AACJ;;AAEMK,EAAAA,MAAP,GAA2B;AACvB,WACI;AAAK,MAAA,SAAS,EAAE,mBAAmB,KAAKT,KAAL,CAAWU,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,WAAL,EADL,CADJ;AAKH;;AA/BgD;;AAkCrD,eAAeJ,KAAf","sourcesContent":["import React, {ReactNode} from 'react';\nimport User from \"./User\";\n\ninterface UsersProps {\n    id: string,\n    users: any,\n    className: string,\n    toggleWriteRights: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    delete: (event: React.MouseEvent<HTMLImageElement, MouseEvent>) => void,\n}\n\nclass Users extends React.Component<UsersProps, any> {\n    public constructor(props: UsersProps) {\n        super(props);\n        this.renderUsers = this.renderUsers.bind(this);\n    }\n\n    public renderUsers(): ReactNode {\n        if (this.props.users['succes']) {\n            let res = this.props.users['data'].map((user: any) =>\n                <User\n                    id={user['id_user']}\n                    key={user['id_user']}\n                    pseudo={user['pseudo']}\n                    writeRight={user['write_right'] === '1' ? true : false}\n                    icon={user['icon']}\n                    delete={this.props.delete}\n                    toggleWriteRights={this.props.toggleWriteRights}\n                />\n            );\n            return res;\n        } else {\n            return [];\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <div className={'users-section ' + this.props.className}>\n                {this.renderUsers()}\n            </div>\n        );\n    }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}