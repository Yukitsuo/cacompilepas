{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Search/UserProposal.tsx\";\nimport React from 'react';\nimport Request from \"../../API/Request\";\nimport swal from \"sweetalert\";\n\nclass UserProposal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fillIcon = this.fillIcon.bind(this);\n    this.getIcon = this.getIcon.bind(this);\n    this.proposeToWriteMessage = this.proposeToWriteMessage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getIcon();\n  }\n\n  getIcon() {\n    new Request('/lobby/getIcon/0', this.fillIcon, 'POST', {\n      idUser: this.props.id.split(/-/)[2],\n      path: this.props.icon\n    }, 'json', 'blob');\n  }\n\n  fillIcon(payload) {\n    const img = document.getElementById('search-user-icon-' + this.props.id);\n    const blob = new Blob([payload], {\n      type: 'image/jpg'\n    });\n    img.src = URL.createObjectURL(blob);\n  }\n\n  proposeToWriteMessage(event) {\n    swal({\n      title: 'Veux-tu écrire un message à ' + this.props.pseudo + ' ?',\n      text: 'Un lobby privé vous permettant de discuter sera créé',\n      buttons: ['Tout compte fait, non', 'Oui, c\\'est parti !'],\n      dangerMode: true // @ts-ignore\n\n    }).then(willToWrite => {\n      if (willToWrite) {\n        // @ts-ignore\n        document.location = '/message/conversation/' + this.props.id.split(/-/)[2];\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"li\", {\n      key: 'search-user-' + this.props.id,\n      className: 'bg-light p-3 proposal-link' + (() => {\n        if ('first' === this.props.position) {\n          return ' rounded-top';\n        } else if ('last' === this.props.position) {\n          return ' rounded-bottom';\n        } else {\n          return '';\n        }\n      })(),\n      onClick: this.proposeToWriteMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'row',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'col-1',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: 'search-user-icon-' + this.props.id,\n      src: this.props.icon,\n      className: 'proposal-icon rounded-circle',\n      alt: this.props.pseudo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: 'col-11 pl-4 pl-sm-5 pt-2 pt-sm-2 proposal',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.firstName, \" \", this.props.lastName, \" alias \", React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.props.pseudo))));\n  }\n\n}\n\nexport default UserProposal;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Search/UserProposal.tsx"],"names":["React","Request","swal","UserProposal","Component","constructor","props","fillIcon","bind","getIcon","proposeToWriteMessage","componentDidMount","idUser","id","split","path","icon","payload","img","document","getElementById","blob","Blob","type","src","URL","createObjectURL","event","title","pseudo","text","buttons","dangerMode","then","willToWrite","location","render","position","firstName","lastName"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport Request from \"../../API/Request\";\nimport swal from \"sweetalert\";\n\ninterface UserProposalProps {\n    id: string,\n    position: string,\n    firstName: string,\n    lastName: string,\n    pseudo: string,\n    icon: string,\n}\n\nclass UserProposal extends React.Component<UserProposalProps, any> {\n    public constructor(props: UserProposalProps) {\n        super(props);\n\n        this.fillIcon = this.fillIcon.bind(this);\n        this.getIcon = this.getIcon.bind(this);\n        this.proposeToWriteMessage = this.proposeToWriteMessage.bind(this);\n    }\n\n    public componentDidMount(): void {\n        this.getIcon();\n    }\n\n    public getIcon(): void {\n        new Request(\n            '/lobby/getIcon/0',\n            this.fillIcon,\n            'POST',\n            {\n                idUser: this.props.id.split(/-/)[2],\n                path: this.props.icon,\n            },\n            'json',\n            'blob',\n        );\n    }\n\n    public fillIcon(payload: Blob): void {\n        const img: any = document.getElementById('search-user-icon-' + this.props.id);\n        const blob = new Blob([payload], {type: 'image/jpg'});\n        img.src = URL.createObjectURL(blob);\n    }\n\n    public proposeToWriteMessage(event: React.MouseEvent<HTMLLIElement>): void {\n        swal({\n            title: 'Veux-tu écrire un message à ' + this.props.pseudo + ' ?',\n            text: 'Un lobby privé vous permettant de discuter sera créé',\n            buttons: ['Tout compte fait, non', 'Oui, c\\'est parti !'],\n            dangerMode: true,\n            // @ts-ignore\n        }).then((willToWrite: boolean) => {\n            if (willToWrite) {\n                // @ts-ignore\n                document.location = '/message/conversation/' + this.props.id.split(/-/)[2];\n            }\n        });\n    }\n\n    public render(): ReactNode {\n        return (\n            <li\n                key={'search-user-' + this.props.id}\n                className={'bg-light p-3 proposal-link' +\n                (() => {\n                    if ('first' === this.props.position) {\n                        return ' rounded-top';\n                    } else if ('last' === this.props.position) {\n                        return ' rounded-bottom';\n                    } else {\n                        return '';\n                    }\n                })()}\n                onClick={this.proposeToWriteMessage}\n            >\n                <div\n                    className={'row'}\n                >\n                    <div className={'col-1'}>\n                        <img\n                            id={'search-user-icon-' + this.props.id}\n                            src={this.props.icon}\n                            className={'proposal-icon rounded-circle'}\n                            alt={this.props.pseudo}\n                        />\n                    </div>\n                    <div\n                        className={'col-11 pl-4 pl-sm-5 pt-2 pt-sm-2 proposal'}\n                    >\n                        {this.props.firstName} {this.props.lastName} alias <u>{this.props.pseudo}</u>\n                    </div>\n                </div>\n            </li>\n        );\n    }\n}\n\nexport default UserProposal;\n"]},"metadata":{},"sourceType":"module"}