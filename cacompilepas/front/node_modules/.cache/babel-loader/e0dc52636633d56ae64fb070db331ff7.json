{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Navigation/Breadcrumb.tsx\";\nimport React from 'react';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport BreadcrumbSeparator from './BreadcrumbSeparator';\nimport BreadCrumCollapser from './BreadCrumCollapser';\n\nclass Breadcrumb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: 1 !== React.Children.toArray(this.props.children).length,\n      children: React.Children.toArray(this.props.children)\n    };\n  }\n\n  renderChildren() {\n    let children = [];\n\n    if (1 !== this.state.children.length && 0 !== this.state.children.length) {\n      children = this.state.children.map((child, index) => React.createElement(BreadcrumbItem, {\n        key: `breadcrumb-item-${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, child)).reduce((acc, child, index) => {\n        acc.push(child, index !== this.state.children.length - 1 ? React.createElement(BreadcrumbSeparator, {\n          key: 'breadcrumb-separator-' + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, this.props.separator) : '');\n        return acc;\n      }, []);\n    } else if (1 === this.state.children.length) {\n      // @ts-ignore\n      children.push(React.createElement(BreadcrumbItem, {\n        key: `breadcrumb-item-0`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.children[1]), React.createElement(BreadcrumbSeparator, {\n        key: 'breadcrumb-separator-' + 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.separator));\n    } else if (0 === this.state.children.length) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n\n    console.log('children');\n    console.log(children);\n\n    if (4 > children.length && !this.state.expanded || children.length <= this.props.max) {\n      children = [...(children.slice(0, this.props.itemsBefore * 2) - 1), React.createElement(BreadCrumCollapser, {\n        title: 'Expand',\n        key: 'collapsed-separator',\n        onClick: () => this.setState({\n          expanded: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), ...children.slice(children.length - this.props.itemsAfter * 2 - 1, children.length)];\n    }\n\n    return children;\n  }\n\n  render() {\n    return React.createElement(\"ol\", {\n      className: 'pl-1 pl-lg-4 pl-md-4 pl-sm-4 ' + this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.renderChildren());\n  }\n\n}\n\nexport default Breadcrumb;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Navigation/Breadcrumb.tsx"],"names":["React","BreadcrumbItem","BreadcrumbSeparator","BreadCrumCollapser","Breadcrumb","Component","constructor","props","state","expanded","Children","toArray","children","length","renderChildren","map","child","index","reduce","acc","push","separator","console","log","max","slice","itemsBefore","setState","itemsAfter","render","className"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react'\nimport BreadcrumbItem from './BreadcrumbItem';\nimport BreadcrumbSeparator from './BreadcrumbSeparator';\nimport BreadCrumCollapser from './BreadCrumCollapser';\n\ninterface BreadcrumbProps {\n    itemsBefore: number,\n    itemsAfter: number,\n    max: number,\n    className?: string,\n    separator: string,\n    children: any,\n}\n\ninterface BreadcrumbState {\n    expanded: boolean,\n    children: any[],\n}\n\nclass Breadcrumb extends React.Component <BreadcrumbProps, BreadcrumbState> {\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            expanded: 1 !== React.Children.toArray(this.props.children).length,\n            children: React.Children.toArray(this.props.children),\n        }\n    }\n\n    public renderChildren(): ReactNode {\n        let children: any[] = [];\n        if (1 !== this.state.children.length && 0 !== this.state.children.length) {\n            children = this.state.children.map((child: any, index: number) =>\n                <BreadcrumbItem key={`breadcrumb-item-${index}`}>\n                    {child}\n                </BreadcrumbItem>\n            ).reduce((acc: any, child: any, index: number) => {\n                acc.push(child, index !== this.state.children.length - 1\n                    ? <BreadcrumbSeparator key={'breadcrumb-separator-' + index}>\n                        {this.props.separator}\n                    </BreadcrumbSeparator>\n                    : '');\n                return acc;\n            }, []);\n        } else if (1 === this.state.children.length) {\n            // @ts-ignore\n            children.push(\n                <BreadcrumbItem key={`breadcrumb-item-0`}>\n                    {this.props.children[1]}\n                </BreadcrumbItem>,\n                <BreadcrumbSeparator key={'breadcrumb-separator-' + 0}>\n                {this.props.separator}\n            </BreadcrumbSeparator>);\n        } else if (0 === this.state.children.length) {\n            return <div></div>;\n        }\n\n\n        console.log('children');\n        console.log(children);\n        if (4 > children.length && !this.state.expanded || children.length <= this.props.max) {\n            children = [\n                ...children.slice(0, this.props.itemsBefore * 2) - 1,\n                <BreadCrumCollapser\n                    title={'Expand'}\n                    key={'collapsed-separator'}\n                    onClick={() => this.setState({expanded: true})\n                    }\n                />,\n                ...children.slice(children.length - (this.props.itemsAfter * 2) - 1, children.length),\n            ]\n        }\n\n        return children;\n    }\n\n    public render(): ReactNode {\n        return (\n            <ol className={'pl-1 pl-lg-4 pl-md-4 pl-sm-4 ' + this.props.className}>\n                {this.renderChildren()}\n            </ol>\n        );\n    }\n}\n\nexport default Breadcrumb;"]},"metadata":{},"sourceType":"module"}