{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Pages/Inscription.tsx\";\nimport React from 'react';\nimport Request from '../../API/Request';\nimport '../../css/Inscription.css';\nimport Input from \"../General/Input\";\nimport SubmitButton from \"../General/SubmitButton\";\n\nclass Inscription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      firstName: '',\n      lastName: '',\n      pseudo: '',\n      validPassword: false,\n      formWasSubmitted: false\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n    this.handleLastNameChange = this.handleLastNameChange.bind(this);\n    this.handlePseudoChange = this.handlePseudoChange.bind(this);\n    this.handlePasswordConfirmationChange = this.handlePasswordConfirmationChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.redirectToConnection = this.redirectToConnection.bind(this);\n    this.setState = this.setState.bind(this);\n  }\n\n  handleEmailChange(event) {\n    // @ts-ignore\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    }, this.checkForm);\n  }\n\n  handlePasswordConfirmationChange(event) {\n    this.setState({\n      passwordConfirmation: event.target.value\n    }, this.passwordVerification);\n  }\n\n  handleFirstNameChange(event) {\n    this.setState({\n      firstName: event.target.value\n    });\n  }\n\n  handleLastNameChange(event) {\n    this.setState({\n      lastName: event.target.value\n    });\n  }\n\n  handlePseudoChange(event) {\n    this.setState({\n      pseudo: event.target.value\n    });\n  }\n\n  passwordVerification() {\n    let equal;\n\n    if (this.state.passwordConfirmation.length > 8 && this.state.password === this.state.passwordConfirmation) {\n      equal = true;\n    } else {\n      equal = false;\n    }\n\n    return equal;\n  }\n\n  checkForm() {\n    console.log(this.passwordVerification());\n    console.log(this.state.password);\n    console.log(this.state.passwordConfirmation);\n\n    if (this.passwordVerification() && this.state.firstName !== '' && this.state.lastName !== '' && this.state.pseudo !== '' && this.state.email !== '') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  redirectToConnection(data) {\n    if ('success' === data['status']) {\n      // @ts-ignore\n      window.location = '/connexion';\n    } else {\n      this.setState({\n        formWasSubmitted: true\n      });\n    }\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n\n    if (this.checkForm()) {\n      new Request('/connection/register', this.redirectToConnection, 'POST', {\n        prenom: this.state.firstName,\n        nom: this.state.lastName,\n        pseudo: this.state.pseudo,\n        email: this.state.email,\n        password: this.state.password,\n        confirm_password: this.state.passwordConfirmation\n      });\n    } else {\n      this.setState({\n        formWasSubmitted: true\n      });\n      alert(\"erreur\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"content row inscription-bloc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row buttons-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"input-prenom\",\n      inputType: \"text\",\n      placeholder: \"Pr√©nom\",\n      className: \"\",\n      onChange: this.handleFirstNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: \"input-nom\",\n      inputType: \"text\",\n      placeholder: \"Nom\",\n      className: \"\",\n      onChange: this.handleLastNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: \"pseudo\",\n      inputType: \"text\",\n      placeholder: \"Pseudo\",\n      className: \"\",\n      onChange: this.handlePseudoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"buttons-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"input-mail\",\n      inputType: \"email\",\n      placeholder: \"Adresse email\",\n      className: '',\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: \"input-password\",\n      inputType: \"password\",\n      placeholder: 'Mot de passe',\n      className: '',\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: \"input-password-confirmation\",\n      inputType: \"password\",\n      placeholder: \"Confirmation mot de passe\",\n      className: '',\n      onChange: this.handlePasswordConfirmationChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submit-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(SubmitButton, {\n      text: 'Inscris-toi !',\n      onClick: this.submitForm,\n      className: '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), \"D\\xE9ja Inscrit ? \", React.createElement(\"a\", {\n      id: \"redirect-button\",\n      href: '/connexion/login',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Connecte toi ! \"))));\n  }\n\n}\n\nexport default Inscription;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Pages/Inscription.tsx"],"names":["React","Request","Input","SubmitButton","Inscription","Component","constructor","props","state","email","password","passwordConfirmation","firstName","lastName","pseudo","validPassword","formWasSubmitted","handleEmailChange","bind","handlePasswordChange","handleFirstNameChange","handleLastNameChange","handlePseudoChange","handlePasswordConfirmationChange","submitForm","redirectToConnection","setState","event","target","value","checkForm","passwordVerification","equal","length","console","log","data","window","location","preventDefault","prenom","nom","confirm_password","alert","render"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, FormEvent, ReactNode} from 'react';\nimport Request from '../../API/Request';\nimport '../../css/Inscription.css';\nimport DropBox from '../General/DropBox';\nimport Input from \"../General/Input\";\nimport SubmitButton from \"../General/SubmitButton\";\n\ninterface InscriptionState {\n    email: string,\n    password: string,\n    passwordConfirmation: string,\n    firstName: string,\n    lastName: string,\n    pseudo: string,\n    validPassword: boolean,\n    formWasSubmitted: boolean,\n}\n\nclass Inscription extends React.Component<any,InscriptionState>{\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            passwordConfirmation: '',\n            firstName: '',\n            lastName: '',\n            pseudo: '',\n            validPassword: false,\n            formWasSubmitted: false,\n        }\n\n\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\n        this.handlePseudoChange = this.handlePseudoChange.bind(this);\n        this.handlePasswordConfirmationChange = this.handlePasswordConfirmationChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.redirectToConnection = this.redirectToConnection.bind(this);\n        this.setState = this.setState.bind(this);\n    }\n\n    public handleEmailChange(event: ChangeEvent<HTMLInputElement>): void {\n        // @ts-ignore\n        this.setState({email: event.target.value});\n    }\n\n    public handlePasswordChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({password: event.target.value}, this.checkForm);\n    }\n\n    public handlePasswordConfirmationChange (event: ChangeEvent<HTMLInputElement>) : void {\n        this.setState(\n            {passwordConfirmation: event.target.value},\n            this.passwordVerification\n            );\n    }\n\n    public handleFirstNameChange (event: ChangeEvent<HTMLInputElement>) : void {\n        this.setState({firstName: event.target.value});\n    }\n\n    public handleLastNameChange (event: ChangeEvent<HTMLInputElement>) : void {\n        this.setState({lastName: event.target.value});\n    }\n\n    public handlePseudoChange (event: ChangeEvent<HTMLInputElement>) : void {\n        this.setState({pseudo: event.target.value});\n    }\n\n    public passwordVerification () : boolean {\n        let equal: boolean;\n        if (this.state.passwordConfirmation.length > 8 && this.state.password === this.state.passwordConfirmation){\n            equal = true;\n        }\n        else{\n            equal = false;\n        }\n\n        return equal;\n    }\n\n    public checkForm () : boolean {\n        console.log(this.passwordVerification());\n        console.log(this.state.password);\n        console.log(this.state.passwordConfirmation);\n        if (this.passwordVerification() && this.state.firstName !== '' && this.state.lastName !== '' && this.state.pseudo !=='' && this.state.email !== '') {\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n\n    public redirectToConnection(data: any): void {\n        if ('success' === data['status']) {\n            // @ts-ignore\n            window.location='/connexion';\n        } else {\n            this.setState({formWasSubmitted: true});\n        }\n    }\n\n    public submitForm(event: FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        event.preventDefault();\n\n        if (this.checkForm()){\n            new Request(\n                '/connection/register',\n                this.redirectToConnection,\n                'POST',\n                {\n                    prenom : this.state.firstName,\n                    nom : this.state.lastName,\n                    pseudo : this.state.pseudo,\n                    email: this.state.email,\n                    password: this.state.password,\n                    confirm_password: this.state.passwordConfirmation,\n                },\n            );\n        }\n        else{\n            this.setState({formWasSubmitted: true});\n            alert(\"erreur\");\n        }\n    }\n\n    render(): ReactNode {\n        return (\n            <section className=\"content row inscription-bloc\">\n                <div className=\"container\">\n                    <div>\n                        <form onSubmit={this.submitForm}>\n                            <div className={\"row buttons-top\"}>\n                                <Input id={\"input-prenom\"} inputType={\"text\"} placeholder={\"Pr√©nom\"} className={\"\"} onChange={this.handleFirstNameChange}/>\n                                <Input id={\"input-nom\"} inputType={\"text\"} placeholder={\"Nom\"} className={\"\"} onChange={this.handleLastNameChange}/>\n                                <Input id={\"pseudo\"} inputType={\"text\"} placeholder={\"Pseudo\"} className={\"\"} onChange={this.handlePseudoChange}/>\n                            </div>\n\n                            <div className={\"buttons-bottom\"}>\n                                <Input id={\"input-mail\"} inputType={\"email\"} placeholder={\"Adresse email\"}\n                                                  className={''} onChange={this.handleEmailChange}/>\n                                <Input id={\"input-password\"} inputType={\"password\"}\n                                                  placeholder={'Mot de passe'}\n                                                  className={''} onChange={this.handlePasswordChange}/>\n                                <Input id={\"input-password-confirmation\"} inputType={\"password\"}\n                                                  placeholder={\"Confirmation mot de passe\"}\n                                                  className={''} onChange={this.handlePasswordConfirmationChange}/>\n                                <div className={\"submit-button\"}>\n                                    <SubmitButton\n                                        text={'Inscris-toi !'}\n                                        onClick={this.submitForm}\n                                        className={''}\n                                    />\n                                </div>\n                            </div>\n                        </form>\n                        <br/>\n                        D√©ja Inscrit ? <a id={\"redirect-button\"} href={'/connexion/login'}>Connecte toi ! </a>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Inscription;\n"]},"metadata":{},"sourceType":"module"}