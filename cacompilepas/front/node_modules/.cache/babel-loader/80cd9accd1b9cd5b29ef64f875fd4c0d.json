{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Navigation/Breadcrumb.tsx\";\nimport React from 'react';\nimport BreadcrumbItem from \"./BreadcrumbItem\";\nimport BreadcrumbSeparator from \"./BreadcrumbSeparator\";\nimport BreadCrumCollapser from \"./BreadCrumCollapser\";\n\nclass Breadcrumb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      children: React.Children.toArray(this.props.children)\n    };\n  }\n\n  renderChildren() {\n    let children = this.state.children.map((child, index) => React.createElement(BreadcrumbItem, {\n      key: `breadcrumb-item-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, child)).reduce((acc, child, index) => {\n      acc.push(child, index !== this.state.children.length - 1 ? React.createElement(BreadcrumbSeparator, {\n        key: 'breadcrumb-separator-' + index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.separator) : '');\n      return acc;\n    }, []);\n    let len = children.length;\n    console.log(len);\n    console.log(this.props.itemsAfter);\n    console.log(children.slice(len - this.props.itemsAfter - 1));\n\n    if (!this.state.expanded || children.length <= this.props.max) {\n      children = [...children.slice(0, this.props.itemsBefore), React.createElement(BreadCrumCollapser, {\n        title: 'Expand',\n        key: 'collapsed-separator',\n        onClick: () => this.setState({\n          expanded: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), ...children.slice(len - this.props.itemsAfter, len)];\n    }\n\n    return children;\n  }\n\n  render() {\n    return React.createElement(\"ol\", {\n      className: 'pl-1 pl-lg-4 pl-md-4 pl-sm-4 ' + this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.renderChildren());\n  }\n\n}\n\nexport default Breadcrumb;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Navigation/Breadcrumb.tsx"],"names":["React","BreadcrumbItem","BreadcrumbSeparator","BreadCrumCollapser","Breadcrumb","Component","constructor","props","state","expanded","children","Children","toArray","renderChildren","map","child","index","reduce","acc","push","length","separator","len","console","log","itemsAfter","slice","max","itemsBefore","setState","render","className"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAgBA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAA4E;AACjEC,EAAAA,WAAP,CAAmBC,KAAnB,EAA+B;AAC3B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuB,KAAKL,KAAL,CAAWG,QAAlC;AAFD,KAAb;AAIH;;AAEMG,EAAAA,cAAP,GAAmC;AAC/B,QAAIH,QAAe,GAAG,KAAKF,KAAL,CAAWE,QAAX,CAAoBI,GAApB,CAAwB,CAACC,KAAD,EAAaC,KAAb,KAC1C,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAG,mBAAkBA,KAAM,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KADL,CADkB,EAIpBE,MAJoB,CAIb,CAACC,GAAD,EAAWH,KAAX,EAAuBC,KAAvB,KAAyC;AAC9CE,MAAAA,GAAG,CAACC,IAAJ,CAASJ,KAAT,EAAgBC,KAAK,KAAK,KAAKR,KAAL,CAAWE,QAAX,CAAoBU,MAApB,GAA6B,CAAvC,GACV,oBAAC,mBAAD;AAAqB,QAAA,GAAG,EAAE,0BAA0BJ,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,KAAL,CAAWc,SADd,CADU,GAIV,EAJN;AAKA,aAAOH,GAAP;AACH,KAXqB,EAWnB,EAXmB,CAAtB;AAaA,QAAII,GAAW,GAAGZ,QAAQ,CAACU,MAA3B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWkB,UAAvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACgB,KAAT,CAAeJ,GAAG,GAAG,KAAKf,KAAL,CAAWkB,UAAjB,GAA8B,CAA7C,CAAZ;;AAEA,QAAI,CAAC,KAAKjB,KAAL,CAAWC,QAAZ,IAAwBC,QAAQ,CAACU,MAAT,IAAmB,KAAKb,KAAL,CAAWoB,GAA1D,EAA+D;AAC3DjB,MAAAA,QAAQ,GAAG,CACP,GAAGA,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,KAAKnB,KAAL,CAAWqB,WAA7B,CADI,EAEP,oBAAC,kBAAD;AACI,QAAA,KAAK,EAAE,QADX;AAEI,QAAA,GAAG,EAAE,qBAFT;AAGI,QAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACpB,UAAAA,QAAQ,EAAE;AAAX,SAAd,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFO,EAQP,GAAGC,QAAQ,CAACgB,KAAT,CAAeJ,GAAG,GAAG,KAAKf,KAAL,CAAWkB,UAAhC,EAA4CH,GAA5C,CARI,CAAX;AAUH;;AAED,WAAOZ,QAAP;AACH;;AAEMoB,EAAAA,MAAP,GAA2B;AACvB,WACI;AAAI,MAAA,SAAS,EAAE,kCAAkC,KAAKvB,KAAL,CAAWwB,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,cAAL,EADL,CADJ;AAKH;;AAlDuE;;AAqD5E,eAAeT,UAAf","sourcesContent":["import React, {ReactNode} from 'react'\nimport BreadcrumbItem from \"./BreadcrumbItem\";\nimport BreadcrumbSeparator from \"./BreadcrumbSeparator\";\nimport BreadCrumCollapser from \"./BreadCrumCollapser\";\n\ninterface BreadcrumbProps {\n    itemsBefore: number,\n    itemsAfter: number,\n    max: number,\n    className?: string,\n    separator: string,\n    children: any,\n}\n\ninterface BreadcrumbState {\n    expanded: boolean,\n    children: any[],\n}\n\nclass Breadcrumb extends React.Component <BreadcrumbProps, BreadcrumbState> {\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            expanded: false,\n            children: React.Children.toArray(this.props.children),\n        }\n    }\n\n    public renderChildren(): ReactNode {\n        let children: any[] = this.state.children.map((child: any, index: number) =>\n            <BreadcrumbItem key={`breadcrumb-item-${index}`}>\n                {child}\n            </BreadcrumbItem>\n        ).reduce((acc: any, child: any, index: number) => {\n            acc.push(child, index !== this.state.children.length - 1\n                ? <BreadcrumbSeparator key={'breadcrumb-separator-' + index}>\n                    {this.props.separator}\n                </BreadcrumbSeparator>\n                : '');\n            return acc;\n        }, []);\n\n        let len: number = children.length;\n        console.log(len);\n        console.log(this.props.itemsAfter);\n        console.log(children.slice(len - this.props.itemsAfter - 1))\n\n        if (!this.state.expanded || children.length <= this.props.max) {\n            children = [\n                ...children.slice(0, this.props.itemsBefore),\n                <BreadCrumCollapser\n                    title={'Expand'}\n                    key={'collapsed-separator'}\n                    onClick={() => this.setState({expanded: true})\n                    }\n                />,\n                ...children.slice(len - this.props.itemsAfter, len),\n            ]\n        }\n\n        return children;\n    }\n\n    public render(): ReactNode {\n        return (\n            <ol className={'pl-1 pl-lg-4 pl-md-4 pl-sm-4 ' + this.props.className}>\n                {this.renderChildren()}\n            </ol>\n        );\n    }\n}\n\nexport default Breadcrumb;"]},"metadata":{},"sourceType":"module"}