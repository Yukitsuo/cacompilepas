{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Search/SearchBar.tsx\";\nimport React from 'react';\nimport Request from \"../../API/Request\";\nimport HashtagInput from \"../Hashtag/HashtagInput\";\nimport ProposalList from \"./ProposalList\";\nimport '../../css/SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      proposals: [],\n      inputIsNotEmpty: true,\n      hashtags: [],\n      hashtagsView: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })\n    };\n    this.emptyInput = this.emptyInput.bind(this);\n    this.updateHashtags = this.updateHashtags.bind(this);\n    this.updateHashtagsView = this.updateHashtagsView.bind(this);\n    this.refreshProposals = this.refreshProposals.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  refreshProposals(payload) {\n    this.setState({\n      proposals: payload['success'] && [] !== payload['data'] ? payload : []\n    });\n  }\n\n  emptyInput(isEmpty) {\n    this.setState({\n      inputIsNotEmpty: isEmpty\n    });\n  }\n\n  updateHashtagsView(hashtags) {\n    this.setState({\n      hashtagsView: hashtags\n    });\n  }\n\n  updateHashtags(hashtags) {\n    this.setState({\n      hashtags: undefined === hashtags ? [] : hashtags\n    }, this.sendQuery);\n  }\n\n  sendQuery() {\n    if (this.state.query !== '' || 0 !== this.state.hashtags.length) {\n      new Request('/lobby/search/0', this.refreshProposals, 'POST', {\n        search: this.state.query.split(/ /),\n        hashtags: this.state.hashtags\n      });\n    } else {\n      this.refreshProposals([]);\n    }\n  }\n\n  updateQuery(text) {\n    this.setState({\n      query: text\n    }, this.sendQuery);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'container-fluid col-lg-9 col-md-8 col-sm-6 col-xs-12 mt-4 mt-lg-4 mt-md-4 mt-sm-3 ml-lg-0 ml-md-0 ml-sm-0 pl-lg-0 pl-md-0 pl-sm-0 pr-lg-0 pr-md-0 pr-sm-0 mt-3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-8 col-md-8 col-sm-12 col-xs-12 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0 p-0 pl-lg-5 search-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"search-label\",\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), this.state.hashtagsView, React.createElement(HashtagInput, {\n      id: 'search',\n      className: 'form-control mr-sm-2 col-12 w-100 search-input',\n      type: 'search',\n      baseIndent: 14,\n      onUpdate: this.emptyInput,\n      placeholder: 'Cherche un lobby ou un utilisateur...',\n      updateHashtagsView: this.updateHashtagsView,\n      updateHashtags: this.updateHashtags,\n      updateText: this.updateQuery,\n      hashtagClassName: '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), (() => 0 !== this.state.proposals.length ? React.createElement(ProposalList, {\n      proposals: this.state.proposals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))());\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Search/SearchBar.tsx"],"names":["React","Request","HashtagInput","ProposalList","SearchBar","Component","constructor","props","state","query","proposals","inputIsNotEmpty","hashtags","hashtagsView","emptyInput","bind","updateHashtags","updateHashtagsView","refreshProposals","updateQuery","payload","setState","isEmpty","undefined","sendQuery","length","search","split","text","render"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport Request from \"../../API/Request\";\nimport HashtagInput from \"../Hashtag/HashtagInput\";\nimport ProposalList from \"./ProposalList\";\nimport '../../css/SearchBar.css';\n\ninterface SearchBarState {\n    query: string,\n    proposals: [],\n    inputIsNotEmpty: boolean,\n    hashtags: string[],\n    hashtagsView: ReactNode,\n}\n\nclass SearchBar extends React.Component<any, SearchBarState> {\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            query: '',\n            proposals: [],\n            inputIsNotEmpty: true,\n            hashtags: [],\n            hashtagsView: <div></div>,\n        }\n        this.emptyInput = this.emptyInput.bind(this);\n        this.updateHashtags = this.updateHashtags.bind(this);\n        this.updateHashtagsView = this.updateHashtagsView.bind(this);\n        this.refreshProposals = this.refreshProposals.bind(this);\n        this.updateQuery = this.updateQuery.bind(this);\n    }\n\n    public refreshProposals(payload: any): void {\n        this.setState({proposals: payload['success'] && [] !== payload['data'] ? payload : []});\n    }\n\n    public emptyInput(isEmpty: boolean): void {\n        this.setState({inputIsNotEmpty: isEmpty});\n    }\n\n    public updateHashtagsView(hashtags: ReactNode): void {\n        this.setState({hashtagsView: hashtags});\n    }\n\n    public updateHashtags(hashtags: string[]): void {\n        this.setState(\n            {hashtags: undefined === hashtags ? [] : hashtags},\n            this.sendQuery);\n    }\n\n    public sendQuery(): void {\n        if (this.state.query !== '' || 0 !== this.state.hashtags.length) {\n            new Request(\n                '/lobby/search/0',\n                this.refreshProposals,\n                'POST',\n                {\n                    search: this.state.query.split(/ /),\n                    hashtags: this.state.hashtags,\n                },\n            );\n        } else {\n            this.refreshProposals([]);\n        }\n\n    }\n\n    public updateQuery(text: string): void {\n        this.setState(\n            {query: text},\n            this.sendQuery,\n        );\n    }\n\n    public render(): ReactNode {\n        return (\n            <div className={'container-fluid col-lg-9 col-md-8 col-sm-6 col-xs-12 mt-4 mt-lg-4 mt-md-4 mt-sm-3 ml-lg-0 ml-md-0 ml-sm-0 pl-lg-0 pl-md-0 pl-sm-0 pr-lg-0 pr-md-0 pr-sm-0 mt-3'}>\n                <form\n                    className=\"form-inline my-lg-0 my-md-0 my-sm-2 my-xs-2 col-lg-8 col-md-8 col-sm-12 col-xs-12 offset-lg-1 offset-md-1 offset-sm-0 offset-xs-0 p-0 pl-lg-5 search-form\">\n                    <label id=\"search-label\" htmlFor=\"search\">\n                        <span className=\"glyphicon glyphicon-search search-icon\"></span>\n                    </label>\n                    {this.state.hashtagsView}\n                    <HashtagInput\n                        id={'search'}\n                        className={'form-control mr-sm-2 col-12 w-100 search-input'}\n                        type={'search'}\n                        baseIndent={14}\n                        onUpdate={this.emptyInput}\n                        placeholder={'Cherche un lobby ou un utilisateur...'}\n                        updateHashtagsView={this.updateHashtagsView}\n                        updateHashtags={this.updateHashtags}\n                        updateText={this.updateQuery}\n                        hashtagClassName={''}\n                    />\n                </form>\n                {(() => 0 !== this.state.proposals.length ?\n                    <ProposalList proposals={this.state.proposals}/> : <div></div>)()}\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}