{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Admin/Admin.tsx\";\nimport React from 'react';\nimport Request from '../../API/Request';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ReactComponent as Loader } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/loader.svg\";\nimport Input from '../General/Input';\nimport InputArea from '../General/InputArea';\nimport DropBox from '../General/DropBox';\nimport '../../css/Admin.css';\nimport CourseSheets from '../Lobby/CourseSheets';\nimport Users from './Users';\nimport HashtagInput from \"../General/HashtagInput\";\nimport SubmitButton from \"../General/SubmitButton\";\nimport Messages from \"../Lobby/Messages\";\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.location.pathname.split(/\\//)[2],\n      isAdmin: '',\n      currentTab: 'presentation',\n      currentLabel: '',\n      currentDescription: '',\n      currentLogo: null,\n      newLabel: '',\n      newDescription: '',\n      newLogo: null,\n      courseSheets: [],\n      messages: [],\n      newCourseSheetTitle: '',\n      newCourseSheetDescription: '',\n      newCourseSheetDocument: null,\n      users: [],\n      newUserEmail: '',\n      private: '',\n      hashtagInputIsNotEmpty: true,\n      hashtagsView: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      hashtags: [],\n      logoPath: ''\n    };\n    this.init = this.init.bind(this);\n    this.init();\n  }\n\n  init() {\n    this.addUser = this.addUser.bind(this);\n    this.checkIfAdmin = this.checkIfAdmin.bind(this);\n    this.emptyInput = this.emptyInput.bind(this);\n    this.fetchCourseSheets = this.fetchCourseSheets.bind(this);\n    this.fetchMessages = this.fetchMessages.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.fillPresentation = this.fillPresentation.bind(this);\n    this.fillUsers = this.fillUsers.bind(this);\n    this.fillCourseSheets = this.fillCourseSheets.bind(this);\n    this.fillMessages = this.fillMessages.bind(this);\n    this.fillLogo = this.fillLogo.bind(this);\n    this.handleCourseSheetDocumentDrop = this.handleCourseSheetDocumentDrop.bind(this);\n    this.getLogo = this.getLogo.bind(this);\n    this.handleCourseSheetDocumentChange = this.handleCourseSheetDocumentChange.bind(this);\n    this.handleCourseSheetTitleChange = this.handleCourseSheetTitleChange.bind(this);\n    this.handleCourseSheetDescriptionChange = this.handleCourseSheetDescriptionChange.bind(this);\n    this.handleUserEmailChange = this.handleUserEmailChange.bind(this);\n    this.handleLabelChange = this.handleLabelChange.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.handleLogoDrop = this.handleLogoDrop.bind(this);\n    this.handleLogoChange = this.handleLogoChange.bind(this);\n    this.addCourseSheet = this.addCourseSheet.bind(this);\n    this.navigate = this.navigate.bind(this);\n    this.refreshPresentation = this.refreshPresentation.bind(this);\n    this.refreshCourseSheets = this.refreshCourseSheets.bind(this);\n    this.refreshMessages = this.refreshMessages.bind(this);\n    this.refreshVisibility = this.refreshVisibility.bind(this);\n    this.refreshUsers = this.refreshUsers.bind(this);\n    this.refreshAdmin = this.refreshAdmin.bind(this);\n    this.removeCourseSheetFromLobby = this.removeCourseSheetFromLobby.bind(this);\n    this.removeMessageFromLobby = this.removeMessageFromLobby.bind(this);\n    this.removeUserFromLobby = this.removeUserFromLobby.bind(this);\n    this.toggleWriteRights = this.toggleWriteRights.bind(this);\n    this.toggleVisibility = this.toggleVisibility.bind(this);\n    this.updateLobbby = this.updateLobbby.bind(this);\n    this.update = this.update.bind(this);\n    this.updateHashtagsView = this.updateHashtagsView.bind(this);\n    this.updateHashtags = this.updateHashtags.bind(this);\n    this.updateText = this.updateText.bind(this);\n    this.updateVisibility = this.updateVisibility.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshAdmin();\n    this.refreshPresentation();\n    this.refreshCourseSheets();\n    this.refreshMessages();\n    this.refreshUsers();\n    this.refreshVisibility();\n  }\n\n  checkIfAdmin(data) {\n    if (true === data['isAdmin']) {\n      this.setState({\n        isAdmin: 'true'\n      });\n    } else {\n      this.setState({\n        isAdmin: 'false'\n      });\n    }\n  }\n\n  fillPresentation(data) {\n    if (undefined === data['message']) {\n      this.setState({\n        currentLabel: data[0]['label_lobby']\n      });\n      this.setState({\n        currentDescription: data[0]['description']\n      });\n      this.setState({\n        logoPath: data[0]['logo']\n      }, this.getLogo);\n    }\n  }\n\n  fillCourseSheets(data) {\n    if (undefined === data['message']) {\n      this.setState({\n        courseSheets: data\n      }, () => this.forceUpdate(() => this.render()));\n    } else {\n      this.setState({\n        courseSheets: []\n      }, () => this.forceUpdate(() => this.render()));\n    }\n  }\n\n  fillMessages(data) {\n    if (undefined === data['message']) {\n      this.setState({\n        messages: data\n      }, () => this.forceUpdate(() => this.render()));\n    } else {\n      this.setState({\n        messages: []\n      }, () => this.forceUpdate(() => this.render()));\n    }\n  }\n\n  fillUsers(data) {\n    if (undefined === data['message']) {\n      this.setState({\n        users: data\n      });\n    } else {\n      this.setState({\n        users: []\n      });\n    }\n  }\n\n  updateVisibility(data) {\n    if (undefined === data['message']) {\n      '1' === data[0]['private'] ? this.setState({\n        private: 'true'\n      }) : this.setState({\n        private: 'false'\n      });\n    }\n  }\n\n  refreshVisibility() {\n    new Request('/lobby/visibility/' + this.state.id, this.updateVisibility);\n  }\n\n  handleLabelChange(event) {\n    this.setState({\n      newLabel: event.target.value\n    });\n  }\n\n  handleCourseSheetTitleChange(event) {\n    this.setState({\n      newCourseSheetTitle: event.target.value\n    });\n  }\n\n  handleDescriptionChange(event) {\n    this.setState({\n      newDescription: event.target.value\n    });\n  }\n\n  handleCourseSheetDescriptionChange(event) {\n    this.setState({\n      newCourseSheetDescription: event.target.value\n    });\n  }\n\n  handleLogoDrop(event) {\n    event.preventDefault();\n    this.setState({\n      newLogo: event.dataTransfer.files[0]\n    }, this.getLogo);\n  }\n\n  handleLogoChange(event) {\n    // @ts-ignore\n    this.setState( // @ts-ignore\n    {\n      newLogo: event.target.files[0]\n    }, this.getLogo);\n  }\n\n  handleCourseSheetDocumentDrop(event) {\n    event.preventDefault();\n    this.setState({\n      newCourseSheetDocument: event.dataTransfer.files[0]\n    });\n  }\n\n  handleCourseSheetDocumentChange(event) {\n    // @ts-ignore\n    this.setState({\n      newCourseSheetDocument: event.target.files[0]\n    });\n  }\n\n  update(data) {\n    if (undefined !== data['message_label']) {\n      this.setState({\n        currentLabel: this.state.newLabel\n      });\n    }\n\n    if (undefined !== data['message_description']) {\n      this.setState({\n        currentDescription: this.state.newDescription\n      });\n    }\n\n    if (undefined !== data['message_logo']) {\n      this.setState({\n        logoPath: data['path']\n      }, this.getLogo);\n      this.setState({\n        currentLogo: this.state.newLogo\n      }, this.getLogo);\n    }\n  }\n\n  navigate(event) {\n    event.preventDefault();\n    let target = event.target;\n\n    for (let li of target.parentElement.parentElement.children) {\n      li.firstElementChild.className = 'nav-link custom-tab';\n    }\n\n    target.className = target.className + ' custom-tab-active';\n    this.setState({\n      currentTab: target.attributes.href.value\n    });\n  }\n\n  updateLobbby(event) {\n    let formData = new FormData(); // @ts-ignore\n\n    formData.append('token', localStorage.getItem('token'));\n\n    if ('' !== this.state.newLabel) {\n      formData.append('label', this.state.newLabel);\n    }\n\n    if ('' !== this.state.newDescription) {\n      formData.append('description', this.state.newDescription);\n    }\n\n    if (null !== this.state.newLogo) {\n      formData.append('file', this.state.newLogo);\n      new Request('/lobby/update/' + this.state.id, this.update, 'POST', formData, this.state.newLogo.type);\n    } else {\n      new Request('/lobby/update/' + this.state.id, this.update, 'POST', formData, '');\n    }\n  }\n\n  addCourseSheet(event) {\n    let formData = new FormData(); // @ts-ignore\n\n    formData.append('token', localStorage.getItem('token'));\n\n    if ('' !== this.state.newCourseSheetTitle && '' !== this.state.newCourseSheetDescription && null !== this.state.newCourseSheetDocument) {\n      formData.append('title', this.state.newCourseSheetTitle);\n      formData.append('description', this.state.newCourseSheetDescription);\n      formData.append('hashtags', JSON.stringify(this.state.hashtags));\n      formData.append('file', this.state.newCourseSheetDocument);\n      new Request('/lobby/newCourseSheet/' + this.state.id, this.refreshCourseSheets, 'POST', formData, this.state.newCourseSheetDocument.type);\n    }\n  }\n\n  refreshAdmin() {\n    new Request('/lobby/checkIfAdmin/' + this.state.id, this.checkIfAdmin);\n  }\n\n  refreshPresentation() {\n    new Request('/lobby/consult/' + this.state.id, this.fillPresentation);\n  }\n\n  refreshCourseSheets() {\n    new Request('/lobby/coursesheets/' + this.state.id, this.fillCourseSheets);\n  }\n\n  refreshMessages() {\n    new Request('/lobby/messages/' + this.state.id, this.fillMessages);\n  }\n\n  refreshUsers() {\n    new Request('/lobby/users/' + this.state.id, this.fillUsers);\n  }\n\n  fetchCourseSheets(data) {\n    if (data['message'].includes('successfully')) {\n      this.refreshCourseSheets();\n    }\n  }\n\n  fetchMessages(data) {\n    if ('success' === data['status']) {\n      this.refreshMessages();\n    }\n  }\n\n  fetchUsers(data) {\n    if (data['message'].includes('successfully')) {\n      this.refreshUsers();\n    }\n  }\n\n  removeCourseSheetFromLobby(event) {\n    let removeButton = event.target;\n    new Request('/lobby/deleteCourseSheet/' + this.state.id, this.fetchCourseSheets, 'POST', {\n      id: removeButton.id.split(/-/)[3]\n    });\n  }\n\n  removeMessageFromLobby(event) {\n    let removeButton = event.target;\n    new Request('/lobby/deleteMessage/' + this.state.id, this.fetchMessages, 'POST', {\n      id: removeButton.id.split(/-/)[2]\n    });\n  }\n\n  removeUserFromLobby(event) {\n    let removeButton = event.target;\n    new Request('/lobby/removeUser/' + this.state.id, this.fetchUsers, 'POST', {\n      id: removeButton.id.split(/-/)[2]\n    });\n  }\n\n  toggleWriteRights(event) {\n    let action = true === event.target.checked ? 'addWriteRight/' : 'removeWriteRight/';\n    new Request('/lobby/' + action + this.state.id, this.fetchUsers, 'POST', {\n      id: event.target.id.split(/-/)[3]\n    });\n  }\n\n  addUser(event) {\n    new Request('/lobby/addUser/' + this.state.id, this.refreshUsers, 'POST', {\n      email: this.state.newUserEmail\n    });\n  }\n\n  handleUserEmailChange(event) {\n    this.setState({\n      newUserEmail: event.target.value\n    });\n  }\n\n  toggleVisibility(event) {\n    let action;\n    action = 'true' === this.state.private ? 'makePublic/' : 'makePrivate/';\n    new Request('/lobby/' + action + this.state.id, this.refreshVisibility);\n  }\n\n  emptyInput(isEmpty) {\n    this.setState({\n      hashtagInputIsNotEmpty: isEmpty\n    });\n  }\n\n  updateHashtagsView(hashtagsView) {\n    this.setState({\n      hashtagsView: hashtagsView\n    });\n  }\n\n  updateHashtags(hashtags) {\n    console.log(hashtags);\n    this.setState({\n      hashtags: hashtags\n    });\n  }\n\n  getLogo() {\n    new Request('/lobby/getLogo/0', this.fillLogo, 'POST', {\n      idLobby: this.state.id,\n      path: this.state.logoPath\n    }, 'json', 'blob');\n  }\n\n  fillLogo(data) {\n    const img = document.getElementById('lobby-logo-' + this.state.id);\n    const blob = new Blob([data], {\n      type: 'image/jpg'\n    });\n    img.src = URL.createObjectURL(blob);\n  }\n\n  updateText() {}\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: this.props.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"Veuillez choisir un lobby\")), React.createElement(Route, {\n      path: this.props.location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, () => {\n      if ('true' === this.state.isAdmin) {\n        let tab;\n\n        switch (this.state.currentTab) {\n          case 'presentation':\n            this.refreshPresentation();\n            tab = React.createElement(\"div\", {\n              className: 'container-fluid col-12 col-lg-8 offset-lg-2 pl-4',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 471\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 472\n              },\n              __self: this\n            }, \"Informations visibles par les visiteurs\"), React.createElement(Input, {\n              id: 'label-input',\n              inputType: 'text',\n              placeholder: 'Titre du lobby (n\\'en mets pas un trop long)',\n              checked: false,\n              className: 'mt-5',\n              onChange: this.handleLabelChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 473\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: 'row mt-5',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 478\n              },\n              __self: this\n            }, React.createElement(InputArea, {\n              id: 'new-description-input',\n              placeholder: 'Nouvelle description du lobby\\nRacontes-y ce que tu veux, du moment que ça reste dans le thème de ton lobby',\n              className: 'col-lg-6 col-md-6 col-sm-6 col-xs-6',\n              textAreaClassName: '',\n              rows: 5,\n              onChange: this.handleDescriptionChange,\n              disabled: false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 479\n              },\n              __self: this\n            }), React.createElement(InputArea, {\n              id: 'current-description-input',\n              placeholder: 'Description actuelle du lobby\\n' + this.state.currentDescription,\n              className: 'col-lg-6 col-md-6 col-sm-6 col-xs-6',\n              textAreaClassName: '',\n              rows: 5,\n              onChange: this.handleDescriptionChange,\n              disabled: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 487\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              className: 'row container-fluid p-0 ml-3',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 496\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'col-6 pl-0 pr-5',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 497\n              },\n              __self: this\n            }, React.createElement(\"h3\", {\n              className: 'd-none d-lg-block d-md-block d-sm-block mr-4',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 498\n              },\n              __self: this\n            }, \"Logo actuel\"), React.createElement(\"img\", {\n              id: 'lobby-logo-' + this.state.id,\n              className: 'lobby-logo mt-3 mt-lg-0 mt-md-0 mt-sm-0 mr-4',\n              src: this.state.logoPath,\n              alt: 'Lobby logo',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 500\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              className: 'col-5 ml-2 mt-0 ml-lg-4 ml-md-4 ml-sm-4 p-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 507\n              },\n              __self: this\n            }, React.createElement(DropBox, {\n              id: 'input-logo',\n              className: 'mt-lg-4 mt-md-4 mt-sm-5',\n              labelNotDragged: 'Glisse un logo par ici !',\n              labelDragged: 'Logo déposé !',\n              accept: 'image/*',\n              backgroundClassName: 'mt-lg-4 mt-md-4 mt-sm-4 ml-4 ml-lg-5 ml-md-5 ml-sm-4',\n              handleFileDrop: this.handleLogoDrop,\n              handleFileChange: this.handleLogoChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 508\n              },\n              __self: this\n            }))), React.createElement(\"div\", {\n              className: 'row pr-4 pl-4',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 519\n              },\n              __self: this\n            }, React.createElement(SubmitButton, {\n              text: 'Mettre à jour le lobby',\n              onClick: this.updateLobbby,\n              className: 'mt-5 col-12',\n              disconnectButton: 'plus',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 520\n              },\n              __self: this\n            })));\n            break;\n\n          case 'course-sheets':\n            this.refreshCourseSheets();\n            tab = React.createElement(\"div\", {\n              className: 'container-fluid col-12 col-lg-8 pr-4 pr-sm-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 534\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 535\n              },\n              __self: this\n            }, \"Fiches de cours pr\\xE9sentes dans le lobby\"), React.createElement(\"div\", {\n              className: 'row mt-5 pl-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 536\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'col-lg-4 col-md-4 col-sm-4 col-xs-12 pl-0 pr-lg-5 pr-md-0 pr-sm-0 pr-xs-0 pl-4 pl-lg-0 pl-md-0 pl-sm-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 537\n              },\n              __self: this\n            }, React.createElement(Input, {\n              id: 'title-input',\n              inputType: 'text',\n              placeholder: 'Titre',\n              className: 'no-mb',\n              checked: false,\n              formGroupClassName: 'mb-0 mb-lg-2 mb-md-1 mb-sm-4 pb-2 pb-lg-1 pb-md-0 pr-0 pl-0 pl-lg-4 pl-md-4 pl-sm-4 col-12',\n              onChange: this.handleCourseSheetTitleChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 539\n              },\n              __self: this\n            }), React.createElement(DropBox, {\n              id: 'course-sheet-input',\n              className: 'text-sm-left col-6 offset-3 offset-lg-0 offset-md-0 offset-sm-0 col-lg-12 col-md-12 col-sm-12 mt-3 mt-lg-0 mt-md-0 mt-sm-0 pr-0 pl-0 pl-lg-4 pl-md-4 pl-sm-4',\n              backgroundClassName: 'mt-1',\n              labelNotDragged: 'Glisse une fiche par ici !',\n              labelDragged: 'Fiche déposée !',\n              accept: '.docx,.pdf,.html,.htm,.odp,txt,md',\n              handleFileDrop: this.handleCourseSheetDocumentDrop,\n              handleFileChange: this.handleCourseSheetDocumentChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 545\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              className: 'col-12 col-lg-8 col-md-8 col-sm-8 mt-4 mt-lg-0 mt-md-0 mt-sm-0 pt-2 pt-lg-0 pt-md-0 pt-sm-0 pr-0 pr-lg-4 pr-md-4 pr-sm-4 pl-4 pl-lg-0 pl-md-5 pl-sm-5',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 554\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'row container-fluid course-sheet-textarea-container pr-0 pl-4 pl-lg-0 pl-md-0 pl-sm-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 556\n              },\n              __self: this\n            }, React.createElement(InputArea, {\n              id: 'description-input',\n              placeholder: 'Description de la fiche\\nFais-en un bref résumé permettant de savoir à quoi s\\'attendre en la lisant',\n              className: 'col-12 pl-0 course-sheet-textarea',\n              textAreaClassName: 'course-sheet-textarea',\n              rows: 6,\n              onChange: this.handleCourseSheetDescriptionChange,\n              disabled: false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 558\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              className: 'row container-fluid mb-4 pr-0 pl-4 pl-lg-0 pl-md-0 pl-sm-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 567\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'col-12 ml-0 pt-1 pr-0 pl-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 569\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'form-inline',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 571\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              id: \"hashtag-label\",\n              htmlFor: \"add-hashtags\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 572\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              id: \"hashtag-placeholder\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 573\n              },\n              __self: this\n            }, this.state.hashtagInputIsNotEmpty ? 'Entre des hashtags pour cette fiche' : '')), this.state.hashtagsView, React.createElement(\"div\", {\n              className: 'col-12 pl-0 pr-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 577\n              },\n              __self: this\n            }, React.createElement(HashtagInput, {\n              id: 'add-hashtags',\n              className: 'form-control w-100 mt-0 rounded hashtag-input col-12',\n              type: 'text',\n              baseIndent: -3,\n              onUpdate: this.emptyInput,\n              updateHashtagsView: this.updateHashtagsView,\n              updateHashtags: this.updateHashtags,\n              updateText: this.updateText,\n              hashtagClassName: 'hashtag-input-box hashtag',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 579\n              },\n              __self: this\n            }))))), React.createElement(\"div\", {\n              className: 'row container-fluid pr-0 pl-4 pl-lg-0 pl-md-0 pl-sm-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 594\n              },\n              __self: this\n            }, React.createElement(SubmitButton, {\n              text: 'Une nouvelle fiche ? Ajoute-la !',\n              onClick: this.addCourseSheet,\n              className: 'col-sm-12 container-fluid add-course-sheet-button mt-5 mr-0 ml-0 pl-0',\n              disconnectButton: 'plus',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 596\n              },\n              __self: this\n            })))), React.createElement(\"div\", {\n              className: 'row mt-5 pl-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 605\n              },\n              __self: this\n            }, 0 !== this.state.courseSheets.length ? React.createElement(CourseSheets, {\n              id: this.state.id.toString(),\n              courseSheets: this.state.courseSheets,\n              className: 'col-lg-12 col-sm-12 mt-lg-3 pl-4',\n              activeRemoveButton: true,\n              removableHashtags: true,\n              delete: this.removeCourseSheetFromLobby,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 608\n              },\n              __self: this\n            }) : React.createElement(\"div\", {\n              className: 'row container-fluid mt-5',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 617\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'col-12 text-left',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 618\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 619\n              },\n              __self: this\n            }, \"Il n'y a pas de fiches de cours pour l'instant\")))));\n            break;\n\n          case 'rights':\n            this.refreshUsers();\n            this.refreshVisibility();\n            tab = React.createElement(\"div\", {\n              className: 'container-fluid  col-lg-8 col-md-12 col-sm-12 col-xs-12',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 634\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 635\n              },\n              __self: this\n            }, \"Utilisateurs autoris\\xE9s \\xE0 consulter le lobby\"), React.createElement(\"div\", {\n              className: 'row',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 636\n              },\n              __self: this\n            }, React.createElement(Users, {\n              id: this.state.id.toString(),\n              users: this.state.users,\n              className: 'col-lg-12 col-sm-12 mt-lg-3 mt-md-0 mt-sm-0 mt-xs-0',\n              toggleWriteRights: this.toggleWriteRights,\n              delete: this.removeUserFromLobby,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 637\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              className: 'col-12 col-lg-10 col-md-10 offset-lg-1 offset-md-1 mt-5',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 645\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'row',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 647\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'col-12 pl-0 add-usr-button',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 648\n              },\n              __self: this\n            }, React.createElement(Input, {\n              id: 'friend-input',\n              inputType: 'email',\n              placeholder: 'Un ami veut voir ton lobby ? Alors saisis son adresse email ici',\n              checked: false,\n              className: 'add-usr-input',\n              onChange: this.handleUserEmailChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 649\n              },\n              __self: this\n            }))), React.createElement(\"div\", {\n              className: 'row',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 659\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'col-12 pl-0 ',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 660\n              },\n              __self: this\n            }, React.createElement(SubmitButton, {\n              text: 'Ca y est ? Alors c\\'est parti, ajoute-le !',\n              onClick: this.addUser,\n              className: 'mt-0 col-12 add-usr-button',\n              disconnectButton: 'plus',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 661\n              },\n              __self: this\n            })))), React.createElement(\"div\", {\n              className: 'row col-12 pt-5 pr-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 670\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'col-1 pt-2 pl-0 pr-0 checkbox-container',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 671\n              },\n              __self: this\n            }, React.createElement(Input, {\n              id: 'visibility-input',\n              inputType: 'checkbox',\n              checked: 'true' === this.state.private ? true : false,\n              placeholder: '',\n              className: 'user-rights-checkbox',\n              onChange: this.toggleVisibility,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 672\n              },\n              __self: this\n            })), React.createElement(\"h4\", {\n              className: 'col-11 pt-0 pt-lg-0 pt-md-0 pt-sm-0 pr-0 pl-2 pl-lg-0 pl-md-0 pl-sm-0 text-left lobby-write-right-label',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 681\n              },\n              __self: this\n            }, \"Lobby priv\\xE9 (seules les personnes autoris\\xE9es pourront le consulter\")));\n            break;\n\n          case 'messages':\n            this.refreshMessages();\n            tab = React.createElement(\"div\", {\n              className: 'container-fluid col-12 col-lg-8 pr-0',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 695\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 696\n              },\n              __self: this\n            }, \"Messages post\\xE9s dans le lobby\"), React.createElement(\"div\", {\n              className: 'row mt-5 pl-2',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 697\n              },\n              __self: this\n            }, 0 !== this.state.messages.length ? React.createElement(Messages, {\n              id: this.state.id.toString(),\n              messages: this.state.messages,\n              className: 'col-lg-12 col-sm-12 mt-lg-3 pl-4',\n              activeRemoveButton: true,\n              delete: this.removeMessageFromLobby,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 700\n              },\n              __self: this\n            }) : React.createElement(\"div\", {\n              className: 'row container-fluid mt-5',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 707\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: 'col-12 text-left',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 708\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 709\n              },\n              __self: this\n            }, \"Il n'y a pas de fiches de cours pour l'instant\")))));\n            break;\n\n          default:\n            tab = React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 719\n              },\n              __self: this\n            }, \"Informations visibles par les visiteurs\");\n            break;\n        }\n\n        return React.createElement(\"section\", {\n          className: 'content row container-fluid pl-0 pr-0',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: 'admin-header',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 724\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: 'lobby-title',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 725\n          },\n          __self: this\n        }, this.state.currentLabel), React.createElement(\"nav\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 726\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"nav nav-tabs custom-tab-nav\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"nav-item\",\n          onClick: this.navigate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 728\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"nav-link custom-tab-active custom-tab\",\n          href: 'presentation',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729\n          },\n          __self: this\n        }, \"Description\")), React.createElement(\"li\", {\n          className: \"nav-item\",\n          onClick: this.navigate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 732\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"nav-link custom-tab\",\n          href: 'course-sheets',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 733\n          },\n          __self: this\n        }, \"Fiches\")), React.createElement(\"li\", {\n          className: \"nav-item\",\n          onClick: this.navigate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 736\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"nav-link custom-tab\",\n          href: 'rights',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 737\n          },\n          __self: this\n        }, \"Droits\")), React.createElement(\"li\", {\n          className: \"nav-item\",\n          onClick: this.navigate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 740\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"nav-link custom-tab\",\n          href: 'messages',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 741\n          },\n          __self: this\n        }, \"Messages\"))))), tab);\n      } else if ('false' === this.state.isAdmin) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 752\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753\n          },\n          __self: this\n        }, \"Vous n'\\xEAtes pas administrateur de ce lobby\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: 'mt-5',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 757\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 757\n          },\n          __self: this\n        }));\n      }\n    })));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Admin/Admin.tsx"],"names":["React","Request","BrowserRouter","Router","Switch","Route","Input","InputArea","DropBox","CourseSheets","Users","HashtagInput","SubmitButton","Messages","Admin","Component","constructor","props","state","id","location","pathname","split","isAdmin","currentTab","currentLabel","currentDescription","currentLogo","newLabel","newDescription","newLogo","courseSheets","messages","newCourseSheetTitle","newCourseSheetDescription","newCourseSheetDocument","users","newUserEmail","private","hashtagInputIsNotEmpty","hashtagsView","hashtags","logoPath","init","bind","addUser","checkIfAdmin","emptyInput","fetchCourseSheets","fetchMessages","fetchUsers","fillPresentation","fillUsers","fillCourseSheets","fillMessages","fillLogo","handleCourseSheetDocumentDrop","getLogo","handleCourseSheetDocumentChange","handleCourseSheetTitleChange","handleCourseSheetDescriptionChange","handleUserEmailChange","handleLabelChange","handleDescriptionChange","handleLogoDrop","handleLogoChange","addCourseSheet","navigate","refreshPresentation","refreshCourseSheets","refreshMessages","refreshVisibility","refreshUsers","refreshAdmin","removeCourseSheetFromLobby","removeMessageFromLobby","removeUserFromLobby","toggleWriteRights","toggleVisibility","updateLobbby","update","updateHashtagsView","updateHashtags","updateText","updateVisibility","componentDidMount","data","setState","undefined","forceUpdate","render","event","target","value","preventDefault","dataTransfer","files","li","parentElement","children","firstElementChild","className","attributes","href","formData","FormData","append","localStorage","getItem","type","JSON","stringify","includes","removeButton","action","checked","email","isEmpty","console","log","idLobby","path","img","document","getElementById","blob","Blob","src","URL","createObjectURL","tab","length","toString"],"mappings":";AAAA,OAAOA,KAAP,MAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,QAIO,kBAJP;;AAMA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,qBAAP;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AA0BA,MAAMC,KAAN,SAAoBd,KAAK,CAACe,SAA1B,CAAqD;AAE1CC,EAAAA,WAAP,CAAmBC,KAAnB,EAA+B;AAC3B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,IAAnC,EAAyC,CAAzC,CADK;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,UAAU,EAAE,cAHH;AAITC,MAAAA,YAAY,EAAE,EAJL;AAKTC,MAAAA,kBAAkB,EAAE,EALX;AAMTC,MAAAA,WAAW,EAAE,IANJ;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,cAAc,EAAE,EARP;AASTC,MAAAA,OAAO,EAAE,IATA;AAUTC,MAAAA,YAAY,EAAE,EAVL;AAWTC,MAAAA,QAAQ,EAAE,EAXD;AAYTC,MAAAA,mBAAmB,EAAE,EAZZ;AAaTC,MAAAA,yBAAyB,EAAE,EAblB;AAcTC,MAAAA,sBAAsB,EAAE,IAdf;AAeTC,MAAAA,KAAK,EAAE,EAfE;AAgBTC,MAAAA,YAAY,EAAE,EAhBL;AAiBTC,MAAAA,OAAO,EAAE,EAjBA;AAkBTC,MAAAA,sBAAsB,EAAE,IAlBf;AAmBTC,MAAAA,YAAY,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBL;AAoBTC,MAAAA,QAAQ,EAAE,EApBD;AAqBTC,MAAAA,QAAQ,EAAE;AArBD,KAAb;AAuBA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKD,IAAL;AACH;;AAEMA,EAAAA,IAAP,GAAoB;AAChB,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKI,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBJ,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKK,aAAL,GAAqB,KAAKA,aAAL,CAAmBL,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKM,UAAL,GAAkB,KAAKA,UAAL,CAAgBN,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKO,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBP,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKQ,SAAL,GAAiB,KAAKA,SAAL,CAAeR,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKS,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBT,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKU,YAAL,GAAoB,KAAKA,YAAL,CAAkBV,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKW,QAAL,GAAgB,KAAKA,QAAL,CAAcX,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKY,6BAAL,GAAqC,KAAKA,6BAAL,CAAmCZ,IAAnC,CAAwC,IAAxC,CAArC;AACA,SAAKa,OAAL,GAAe,KAAKA,OAAL,CAAab,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKc,+BAAL,GAAuC,KAAKA,+BAAL,CAAqCd,IAArC,CAA0C,IAA1C,CAAvC;AACA,SAAKe,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCf,IAAlC,CAAuC,IAAvC,CAApC;AACA,SAAKgB,kCAAL,GAA0C,KAAKA,kCAAL,CAAwChB,IAAxC,CAA6C,IAA7C,CAA1C;AACA,SAAKiB,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BjB,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKkB,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBlB,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKmB,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BnB,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKoB,cAAL,GAAsB,KAAKA,cAAL,CAAoBpB,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKqB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBrB,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKsB,cAAL,GAAsB,KAAKA,cAAL,CAAoBtB,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKuB,QAAL,GAAgB,KAAKA,QAAL,CAAcvB,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKwB,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBxB,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKyB,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBzB,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAK0B,eAAL,GAAuB,KAAKA,eAAL,CAAqB1B,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAK2B,iBAAL,GAAyB,KAAKA,iBAAL,CAAuB3B,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAK4B,YAAL,GAAoB,KAAKA,YAAL,CAAkB5B,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK6B,YAAL,GAAoB,KAAKA,YAAL,CAAkB7B,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK8B,0BAAL,GAAkC,KAAKA,0BAAL,CAAgC9B,IAAhC,CAAqC,IAArC,CAAlC;AACA,SAAK+B,sBAAL,GAA8B,KAAKA,sBAAL,CAA4B/B,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKgC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBhC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKiC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBjC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKkC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBlC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKmC,YAAL,GAAoB,KAAKA,YAAL,CAAkBnC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKoC,MAAL,GAAc,KAAKA,MAAL,CAAYpC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKqC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBrC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKsC,cAAL,GAAsB,KAAKA,cAAL,CAAoBtC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKuC,UAAL,GAAkB,KAAKA,UAAL,CAAgBvC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKwC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBxC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEMyC,EAAAA,iBAAP,GAAiC;AAC7B,SAAKZ,YAAL;AACA,SAAKL,mBAAL;AACA,SAAKC,mBAAL;AACA,SAAKC,eAAL;AACA,SAAKE,YAAL;AACA,SAAKD,iBAAL;AACH;;AAEMzB,EAAAA,YAAP,CAAoBwC,IAApB,EAAqC;AACjC,QAAI,SAASA,IAAI,CAAC,SAAD,CAAjB,EAA8B;AAC1B,WAAKC,QAAL,CAAc;AAAChE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAFD,MAEO;AACH,WAAKgE,QAAL,CAAc;AAAChE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH;AACJ;;AAEM4B,EAAAA,gBAAP,CAAwBmC,IAAxB,EAAyC;AACrC,QAAIE,SAAS,KAAKF,IAAI,CAAC,SAAD,CAAtB,EAAmC;AAC/B,WAAKC,QAAL,CAAc;AAAC9D,QAAAA,YAAY,EAAE6D,IAAI,CAAC,CAAD,CAAJ,CAAQ,aAAR;AAAf,OAAd;AACA,WAAKC,QAAL,CAAc;AAAC7D,QAAAA,kBAAkB,EAAE4D,IAAI,CAAC,CAAD,CAAJ,CAAQ,aAAR;AAArB,OAAd;AACA,WAAKC,QAAL,CACI;AAAC7C,QAAAA,QAAQ,EAAE4C,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR;AAAX,OADJ,EAEI,KAAK7B,OAFT;AAIH;AACJ;;AAEMJ,EAAAA,gBAAP,CAAwBiC,IAAxB,EAAyC;AACrC,QAAIE,SAAS,KAAKF,IAAI,CAAC,SAAD,CAAtB,EAAmC;AAC/B,WAAKC,QAAL,CACI;AAACxD,QAAAA,YAAY,EAAEuD;AAAf,OADJ,EAEI,MAAM,KAAKG,WAAL,CAAiB,MAAM,KAAKC,MAAL,EAAvB,CAFV;AAIH,KALD,MAKO;AACH,WAAKH,QAAL,CAAc;AAACxD,QAAAA,YAAY,EAAE;AAAf,OAAd,EACI,MAAM,KAAK0D,WAAL,CAAiB,MAAM,KAAKC,MAAL,EAAvB,CADV;AAGH;AACJ;;AAEMpC,EAAAA,YAAP,CAAoBgC,IAApB,EAAqC;AACjC,QAAIE,SAAS,KAAKF,IAAI,CAAC,SAAD,CAAtB,EAAmC;AAC/B,WAAKC,QAAL,CACI;AAACvD,QAAAA,QAAQ,EAAEsD;AAAX,OADJ,EAEI,MAAM,KAAKG,WAAL,CAAiB,MAAM,KAAKC,MAAL,EAAvB,CAFV;AAIH,KALD,MAKO;AACH,WAAKH,QAAL,CAAc;AAACvD,QAAAA,QAAQ,EAAE;AAAX,OAAd,EACI,MAAM,KAAKyD,WAAL,CAAiB,MAAM,KAAKC,MAAL,EAAvB,CADV;AAGH;AACJ;;AAEMtC,EAAAA,SAAP,CAAiBkC,IAAjB,EAAkC;AAC9B,QAAIE,SAAS,KAAKF,IAAI,CAAC,SAAD,CAAtB,EAAmC;AAC/B,WAAKC,QAAL,CAAc;AAACnD,QAAAA,KAAK,EAAEkD;AAAR,OAAd;AACH,KAFD,MAEO;AACH,WAAKC,QAAL,CAAc;AAACnD,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH;AACJ;;AAEMgD,EAAAA,gBAAP,CAAwBE,IAAxB,EAAyC;AACrC,QAAIE,SAAS,KAAKF,IAAI,CAAC,SAAD,CAAtB,EAAmC;AAC/B,cAAQA,IAAI,CAAC,CAAD,CAAJ,CAAQ,SAAR,CAAR,GAA6B,KAAKC,QAAL,CAAc;AAACjD,QAAAA,OAAO,EAAE;AAAV,OAAd,CAA7B,GAAgE,KAAKiD,QAAL,CAAc;AAACjD,QAAAA,OAAO,EAAE;AAAV,OAAd,CAAhE;AACH;AACJ;;AAEMiC,EAAAA,iBAAP,GAAiC;AAC7B,QAAItE,OAAJ,CAAY,uBAAuB,KAAKiB,KAAL,CAAWC,EAA9C,EAAkD,KAAKiE,gBAAvD;AACH;;AAEMtB,EAAAA,iBAAP,CAAyB6B,KAAzB,EAAqE;AACjE,SAAKJ,QAAL,CAAc;AAAC3D,MAAAA,QAAQ,EAAE+D,KAAK,CAACC,MAAN,CAAaC;AAAxB,KAAd;AACH;;AAEMlC,EAAAA,4BAAP,CAAoCgC,KAApC,EAAgF;AAC5E,SAAKJ,QAAL,CAAc;AAACtD,MAAAA,mBAAmB,EAAE0D,KAAK,CAACC,MAAN,CAAaC;AAAnC,KAAd;AACH;;AAEM9B,EAAAA,uBAAP,CAA+B4B,KAA/B,EAA8E;AAC1E,SAAKJ,QAAL,CAAc;AAAC1D,MAAAA,cAAc,EAAE8D,KAAK,CAACC,MAAN,CAAaC;AAA9B,KAAd;AACH;;AAEMjC,EAAAA,kCAAP,CAA0C+B,KAA1C,EAAyF;AACrF,SAAKJ,QAAL,CAAc;AAACrD,MAAAA,yBAAyB,EAAEyD,KAAK,CAACC,MAAN,CAAaC;AAAzC,KAAd;AACH;;AAEM7B,EAAAA,cAAP,CAAsB2B,KAAtB,EAAoE;AAChEA,IAAAA,KAAK,CAACG,cAAN;AACA,SAAKP,QAAL,CACI;AAACzD,MAAAA,OAAO,EAAE6D,KAAK,CAACI,YAAN,CAAmBC,KAAnB,CAAyB,CAAzB;AAAV,KADJ,EAEI,KAAKvC,OAFT;AAIH;;AAEMQ,EAAAA,gBAAP,CAAwB0B,KAAxB,EAAoE;AAChE;AACA,SAAKJ,QAAL,EACI;AACA;AAACzD,MAAAA,OAAO,EAAE6D,KAAK,CAACC,MAAN,CAAaI,KAAb,CAAmB,CAAnB;AAAV,KAFJ,EAGI,KAAKvC,OAHT;AAKH;;AAEMD,EAAAA,6BAAP,CAAqCmC,KAArC,EAAmF;AAC/EA,IAAAA,KAAK,CAACG,cAAN;AACA,SAAKP,QAAL,CAAc;AAACpD,MAAAA,sBAAsB,EAAEwD,KAAK,CAACI,YAAN,CAAmBC,KAAnB,CAAyB,CAAzB;AAAzB,KAAd;AACH;;AAEMtC,EAAAA,+BAAP,CAAuCiC,KAAvC,EAAmF;AAC/E;AACA,SAAKJ,QAAL,CAAc;AAACpD,MAAAA,sBAAsB,EAAEwD,KAAK,CAACC,MAAN,CAAaI,KAAb,CAAmB,CAAnB;AAAzB,KAAd;AACH;;AAEMhB,EAAAA,MAAP,CAAcM,IAAd,EAA+B;AAC3B,QAAIE,SAAS,KAAKF,IAAI,CAAC,eAAD,CAAtB,EAAyC;AACrC,WAAKC,QAAL,CAAc;AAAC9D,QAAAA,YAAY,EAAE,KAAKP,KAAL,CAAWU;AAA1B,OAAd;AACH;;AACD,QAAI4D,SAAS,KAAKF,IAAI,CAAC,qBAAD,CAAtB,EAA+C;AAC3C,WAAKC,QAAL,CAAc;AAAC7D,QAAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWW;AAAhC,OAAd;AACH;;AACD,QAAI2D,SAAS,KAAKF,IAAI,CAAC,cAAD,CAAtB,EAAwC;AACpC,WAAKC,QAAL,CACI;AAAC7C,QAAAA,QAAQ,EAAE4C,IAAI,CAAC,MAAD;AAAf,OADJ,EAEI,KAAK7B,OAFT;AAIA,WAAK8B,QAAL,CACI;AAAC5D,QAAAA,WAAW,EAAE,KAAKT,KAAL,CAAWY;AAAzB,OADJ,EAEI,KAAK2B,OAFT;AAIH;AACJ;;AAEMU,EAAAA,QAAP,CAAgBwB,KAAhB,EAA0E;AACtEA,IAAAA,KAAK,CAACG,cAAN;AACA,QAAIF,MAAW,GAAGD,KAAK,CAACC,MAAxB;;AACA,SAAK,IAAIK,EAAT,IAAeL,MAAM,CAACM,aAAP,CAAqBA,aAArB,CAAmCC,QAAlD,EAA4D;AACxDF,MAAAA,EAAE,CAACG,iBAAH,CAAqBC,SAArB,GAAiC,qBAAjC;AACH;;AACDT,IAAAA,MAAM,CAACS,SAAP,GAAmBT,MAAM,CAACS,SAAP,GAAmB,oBAAtC;AACA,SAAKd,QAAL,CAAc;AAAC/D,MAAAA,UAAU,EAAEoE,MAAM,CAACU,UAAP,CAAkBC,IAAlB,CAAuBV;AAApC,KAAd;AACH;;AAEMd,EAAAA,YAAP,CAAoBY,KAApB,EAAkF;AAC9E,QAAIa,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAD8E,CAE9E;;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAzB;;AACA,QAAI,OAAO,KAAK1F,KAAL,CAAWU,QAAtB,EAAgC;AAC5B4E,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKxF,KAAL,CAAWU,QAApC;AACH;;AACD,QAAI,OAAO,KAAKV,KAAL,CAAWW,cAAtB,EAAsC;AAClC2E,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAKxF,KAAL,CAAWW,cAA1C;AACH;;AACD,QAAI,SAAS,KAAKX,KAAL,CAAWY,OAAxB,EAAiC;AAC7B0E,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKxF,KAAL,CAAWY,OAAnC;AACA,UAAI7B,OAAJ,CACI,mBAAmB,KAAKiB,KAAL,CAAWC,EADlC,EAEI,KAAK6D,MAFT,EAGI,MAHJ,EAIIwB,QAJJ,EAKI,KAAKtF,KAAL,CAAWY,OAAX,CAAmB+E,IALvB;AAOH,KATD,MASO;AACH,UAAI5G,OAAJ,CACI,mBAAmB,KAAKiB,KAAL,CAAWC,EADlC,EAEI,KAAK6D,MAFT,EAGI,MAHJ,EAIIwB,QAJJ,EAKI,EALJ;AAOH;AACJ;;AAEMtC,EAAAA,cAAP,CAAsByB,KAAtB,EAAoF;AAChF,QAAIa,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CADgF,CAEhF;;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAzB;;AACA,QACI,OAAO,KAAK1F,KAAL,CAAWe,mBAAlB,IACA,OAAO,KAAKf,KAAL,CAAWgB,yBADlB,IAEA,SAAS,KAAKhB,KAAL,CAAWiB,sBAHxB,EAIE;AACEqE,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKxF,KAAL,CAAWe,mBAApC;AACAuE,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAKxF,KAAL,CAAWgB,yBAA1C;AACAsE,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BI,IAAI,CAACC,SAAL,CAAe,KAAK7F,KAAL,CAAWuB,QAA1B,CAA5B;AACA+D,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKxF,KAAL,CAAWiB,sBAAnC;AACA,UAAIlC,OAAJ,CACI,2BAA2B,KAAKiB,KAAL,CAAWC,EAD1C,EAEI,KAAKkD,mBAFT,EAGI,MAHJ,EAIImC,QAJJ,EAKI,KAAKtF,KAAL,CAAWiB,sBAAX,CAAkC0E,IALtC;AAOH;AACJ;;AAEMpC,EAAAA,YAAP,GAA4B;AACxB,QAAIxE,OAAJ,CAAY,yBAAyB,KAAKiB,KAAL,CAAWC,EAAhD,EAAoD,KAAK2B,YAAzD;AACH;;AAEMsB,EAAAA,mBAAP,GAAmC;AAC/B,QAAInE,OAAJ,CAAY,oBAAoB,KAAKiB,KAAL,CAAWC,EAA3C,EAA+C,KAAKgC,gBAApD;AACH;;AAEMkB,EAAAA,mBAAP,GAAmC;AAC/B,QAAIpE,OAAJ,CAAY,yBAAyB,KAAKiB,KAAL,CAAWC,EAAhD,EAAoD,KAAKkC,gBAAzD;AACH;;AAEMiB,EAAAA,eAAP,GAA+B;AAC3B,QAAIrE,OAAJ,CAAY,qBAAqB,KAAKiB,KAAL,CAAWC,EAA5C,EAAgD,KAAKmC,YAArD;AACH;;AAEMkB,EAAAA,YAAP,GAA4B;AACxB,QAAIvE,OAAJ,CAAY,kBAAkB,KAAKiB,KAAL,CAAWC,EAAzC,EAA6C,KAAKiC,SAAlD;AACH;;AAEMJ,EAAAA,iBAAP,CAAyBsC,IAAzB,EAA0C;AACtC,QAAIA,IAAI,CAAC,SAAD,CAAJ,CAAgB0B,QAAhB,CAAyB,cAAzB,CAAJ,EAA8C;AAC1C,WAAK3C,mBAAL;AACH;AACJ;;AAEMpB,EAAAA,aAAP,CAAqBqC,IAArB,EAAsC;AAClC,QAAI,cAAcA,IAAI,CAAC,QAAD,CAAtB,EAAkC;AAC9B,WAAKhB,eAAL;AACH;AACJ;;AAEMpB,EAAAA,UAAP,CAAkBoC,IAAlB,EAAmC;AAC/B,QAAIA,IAAI,CAAC,SAAD,CAAJ,CAAgB0B,QAAhB,CAAyB,cAAzB,CAAJ,EAA8C;AAC1C,WAAKxC,YAAL;AACH;AACJ;;AAEME,EAAAA,0BAAP,CAAkCiB,KAAlC,EAA+F;AAC3F,QAAIsB,YAAiB,GAAGtB,KAAK,CAACC,MAA9B;AACA,QAAI3F,OAAJ,CAAY,8BAA8B,KAAKiB,KAAL,CAAWC,EAArD,EACI,KAAK6B,iBADT,EAEI,MAFJ,EAGI;AACI7B,MAAAA,EAAE,EAAE8F,YAAY,CAAC9F,EAAb,CAAgBG,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B;AADR,KAHJ;AAMH;;AAEMqD,EAAAA,sBAAP,CAA8BgB,KAA9B,EAA2F;AACvF,QAAIsB,YAAiB,GAAGtB,KAAK,CAACC,MAA9B;AACA,QAAI3F,OAAJ,CAAY,0BAA0B,KAAKiB,KAAL,CAAWC,EAAjD,EACI,KAAK8B,aADT,EAEI,MAFJ,EAGI;AACI9B,MAAAA,EAAE,EAAE8F,YAAY,CAAC9F,EAAb,CAAgBG,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B;AADR,KAHJ;AAMH;;AAEMsD,EAAAA,mBAAP,CAA2Be,KAA3B,EAAwF;AACpF,QAAIsB,YAAiB,GAAGtB,KAAK,CAACC,MAA9B;AACA,QAAI3F,OAAJ,CAAY,uBAAuB,KAAKiB,KAAL,CAAWC,EAA9C,EACI,KAAK+B,UADT,EAEI,MAFJ,EAGI;AACI/B,MAAAA,EAAE,EAAE8F,YAAY,CAAC9F,EAAb,CAAgBG,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B;AADR,KAHJ;AAMH;;AAEMuD,EAAAA,iBAAP,CAAyBc,KAAzB,EAA2E;AACvE,QAAIuB,MAAc,GAAG,SAASvB,KAAK,CAACC,MAAN,CAAauB,OAAtB,GACjB,gBADiB,GAEjB,mBAFJ;AAGA,QAAIlH,OAAJ,CACI,YAAYiH,MAAZ,GAAqB,KAAKhG,KAAL,CAAWC,EADpC,EAEI,KAAK+B,UAFT,EAGI,MAHJ,EAII;AACI/B,MAAAA,EAAE,EAAEwE,KAAK,CAACC,MAAN,CAAazE,EAAb,CAAgBG,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B;AADR,KAJJ;AAQH;;AAEMuB,EAAAA,OAAP,CAAe8C,KAAf,EAA6E;AACzE,QAAI1F,OAAJ,CACI,oBAAoB,KAAKiB,KAAL,CAAWC,EADnC,EAEI,KAAKqD,YAFT,EAGI,MAHJ,EAII;AACI4C,MAAAA,KAAK,EAAE,KAAKlG,KAAL,CAAWmB;AADtB,KAJJ;AAQH;;AAEMwB,EAAAA,qBAAP,CAA6B8B,KAA7B,EAAyE;AACrE,SAAKJ,QAAL,CAAc;AAAClD,MAAAA,YAAY,EAAEsD,KAAK,CAACC,MAAN,CAAaC;AAA5B,KAAd;AACH;;AAEMf,EAAAA,gBAAP,CAAwBa,KAAxB,EAAoE;AAChE,QAAIuB,MAAJ;AAEAA,IAAAA,MAAM,GAAG,WAAW,KAAKhG,KAAL,CAAWoB,OAAtB,GACL,aADK,GACW,cADpB;AAEA,QAAIrC,OAAJ,CAAY,YAAYiH,MAAZ,GAAqB,KAAKhG,KAAL,CAAWC,EAA5C,EAAgD,KAAKoD,iBAArD;AACH;;AAEMxB,EAAAA,UAAP,CAAkBsE,OAAlB,EAA0C;AACtC,SAAK9B,QAAL,CAAc;AAAChD,MAAAA,sBAAsB,EAAE8E;AAAzB,KAAd;AACH;;AAEMpC,EAAAA,kBAAP,CAA0BzC,YAA1B,EAAyD;AACrD,SAAK+C,QAAL,CAAc;AAAC/C,MAAAA,YAAY,EAAEA;AAAf,KAAd;AACH;;AAEM0C,EAAAA,cAAP,CAAsBzC,QAAtB,EAAgD;AAC5C6E,IAAAA,OAAO,CAACC,GAAR,CAAY9E,QAAZ;AACA,SAAK8C,QAAL,CAAc;AAAC9C,MAAAA,QAAQ,EAAEA;AAAX,KAAd;AACH;;AAEMgB,EAAAA,OAAP,GAAuB;AACnB,QAAIxD,OAAJ,CACI,kBADJ,EAEI,KAAKsD,QAFT,EAGI,MAHJ,EAII;AACIiE,MAAAA,OAAO,EAAE,KAAKtG,KAAL,CAAWC,EADxB;AAEIsG,MAAAA,IAAI,EAAE,KAAKvG,KAAL,CAAWwB;AAFrB,KAJJ,EAQI,MARJ,EASI,MATJ;AAWH;;AAEMa,EAAAA,QAAP,CAAgB+B,IAAhB,EAAkC;AAC9B,UAAMoC,GAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAgB,KAAK1G,KAAL,CAAWC,EAAnD,CAAjB;AACA,UAAM0G,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACxC,IAAD,CAAT,EAAiB;AAACuB,MAAAA,IAAI,EAAE;AAAP,KAAjB,CAAb;AACAa,IAAAA,GAAG,CAACK,GAAJ,GAAUC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAV;AACH;;AAEM1C,EAAAA,UAAP,GAA0B,CAEzB;;AAEMO,EAAAA,MAAP,GAA2B;AACvB,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,KAAKzE,KAAL,CAAWwG,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKxG,KAAL,CAAWG,QAAX,CAAoBC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,MAAM;AACH,UAAI,WAAW,KAAKH,KAAL,CAAWK,OAA1B,EAAmC;AAC/B,YAAI2G,GAAJ;;AACA,gBAAQ,KAAKhH,KAAL,CAAWM,UAAnB;AACI,eAAK,cAAL;AACI,iBAAK4C,mBAAL;AACA8D,YAAAA,GAAG,GACC;AAAK,cAAA,SAAS,EAAE,kDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,EAEI,oBAAC,KAAD;AAAO,cAAA,EAAE,EAAE,aAAX;AACO,cAAA,SAAS,EAAE,MADlB;AAEO,cAAA,WAAW,EAAE,8CAFpB;AAGO,cAAA,OAAO,EAAE,KAHhB;AAIO,cAAA,SAAS,EAAE,MAJlB;AAI0B,cAAA,QAAQ,EAAE,KAAKpE,iBAJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOI;AAAK,cAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,SAAD;AAAW,cAAA,EAAE,EAAE,uBAAf;AACW,cAAA,WAAW,EAAE,6GADxB;AAEW,cAAA,SAAS,EAAE,qCAFtB;AAGW,cAAA,iBAAiB,EAAE,EAH9B;AAIW,cAAA,IAAI,EAAE,CAJjB;AAKW,cAAA,QAAQ,EAAE,KAAKC,uBAL1B;AAMW,cAAA,QAAQ,EAAE,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EASI,oBAAC,SAAD;AAAW,cAAA,EAAE,EAAE,2BAAf;AACW,cAAA,WAAW,EAAE,oCAAoC,KAAK7C,KAAL,CAAWQ,kBADvE;AAEW,cAAA,SAAS,EAAE,qCAFtB;AAGW,cAAA,iBAAiB,EAAE,EAH9B;AAIW,cAAA,IAAI,EAAE,CAJjB;AAKW,cAAA,QAAQ,EAAE,KAAKqC,uBAL1B;AAMW,cAAA,QAAQ,EAAE,IANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CAPJ,EAyBI;AAAK,cAAA,SAAS,EAAE,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAI,cAAA,SAAS,EAAE,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAGI;AACI,cAAA,EAAE,EAAE,gBAAgB,KAAK7C,KAAL,CAAWC,EADnC;AAEI,cAAA,SAAS,EAAE,8CAFf;AAGI,cAAA,GAAG,EAAE,KAAKD,KAAL,CAAWwB,QAHpB;AAII,cAAA,GAAG,EAAE,YAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,EAWI;AAAK,cAAA,SAAS,EAAE,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,OAAD;AAAS,cAAA,EAAE,EAAE,YAAb;AACS,cAAA,SAAS,EAAE,yBADpB;AAES,cAAA,eAAe,EAAE,0BAF1B;AAGS,cAAA,YAAY,EAAE,eAHvB;AAIS,cAAA,MAAM,EAAE,SAJjB;AAKS,cAAA,mBAAmB,EAAE,sDAL9B;AAMS,cAAA,cAAc,EAAE,KAAKsB,cAN9B;AAOS,cAAA,gBAAgB,EAAE,KAAKC,gBAPhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAXJ,CAzBJ,EAgDI;AAAK,cAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,YAAD;AACI,cAAA,IAAI,EAAE,wBADV;AAEI,cAAA,OAAO,EAAE,KAAKc,YAFlB;AAGI,cAAA,SAAS,EAAE,aAHf;AAII,cAAA,gBAAgB,EAAE,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAhDJ,CADJ;AA2DA;;AAEJ,eAAK,eAAL;AACI,iBAAKV,mBAAL;AACA6D,YAAAA,GAAG,GACC;AAAK,cAAA,SAAS,EAAE,8CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADJ,EAEI;AAAK,cAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AACI,cAAA,SAAS,EAAE,wGADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI,oBAAC,KAAD;AAAO,cAAA,EAAE,EAAE,aAAX;AAA0B,cAAA,SAAS,EAAE,MAArC;AACO,cAAA,WAAW,EAAE,OADpB;AAEO,cAAA,SAAS,EAAE,OAFlB;AAGO,cAAA,OAAO,EAAE,KAHhB;AAIO,cAAA,kBAAkB,EAAE,4FAJ3B;AAKO,cAAA,QAAQ,EAAE,KAAKvE,4BALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQI,oBAAC,OAAD;AAAS,cAAA,EAAE,EAAE,oBAAb;AACS,cAAA,SAAS,EAAE,8JADpB;AAES,cAAA,mBAAmB,EAAE,MAF9B;AAGS,cAAA,eAAe,EAAE,4BAH1B;AAIS,cAAA,YAAY,EAAE,iBAJvB;AAKS,cAAA,MAAM,EAAE,mCALjB;AAMS,cAAA,cAAc,EAAE,KAAKH,6BAN9B;AAOS,cAAA,gBAAgB,EAAE,KAAKE,+BAPhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CADJ,EAkBI;AACI,cAAA,SAAS,EAAE,uJADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI;AACI,cAAA,SAAS,EAAE,uFADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI,oBAAC,SAAD;AAAW,cAAA,EAAE,EAAE,mBAAf;AACW,cAAA,WAAW,EAAE,sGADxB;AAEW,cAAA,SAAS,EAAE,mCAFtB;AAGW,cAAA,iBAAiB,EAAE,uBAH9B;AAIW,cAAA,IAAI,EAAE,CAJjB;AAKW,cAAA,QAAQ,EAAE,KAAKE,kCAL1B;AAMW,cAAA,QAAQ,EAAE,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAFJ,EAaI;AACI,cAAA,SAAS,EAAE,4DADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI;AACI,cAAA,SAAS,EAAE,4BADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI;AAAK,cAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAO,cAAA,EAAE,EAAC,eAAV;AAA0B,cAAA,OAAO,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AACI,cAAA,EAAE,EAAC,qBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAC8B,KAAK1C,KAAL,CAAWqB,sBAAX,GAAoC,qCAApC,GAA4E,EAD1G,CADJ,CADJ,EAKK,KAAKrB,KAAL,CAAWsB,YALhB,EAMI;AACI,cAAA,SAAS,EAAE,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI,oBAAC,YAAD;AACI,cAAA,EAAE,EAAE,cADR;AAEI,cAAA,SAAS,EAAE,sDAFf;AAGI,cAAA,IAAI,EAAE,MAHV;AAII,cAAA,UAAU,EAAE,CAAC,CAJjB;AAKI,cAAA,QAAQ,EAAE,KAAKO,UALnB;AAMI,cAAA,kBAAkB,EAAE,KAAKkC,kBAN7B;AAOI,cAAA,cAAc,EAAE,KAAKC,cAPzB;AAQI,cAAA,UAAU,EAAE,KAAKC,UARrB;AASI,cAAA,gBAAgB,EAAE,2BATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CANJ,CAFJ,CAFJ,CAbJ,EAwCI;AACI,cAAA,SAAS,EAAE,uDADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI,oBAAC,YAAD;AACI,cAAA,IAAI,EAAE,kCADV;AAEI,cAAA,OAAO,EAAE,KAAKjB,cAFlB;AAGI,cAAA,SAAS,EAAE,uEAHf;AAII,cAAA,gBAAgB,EAAE,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAxCJ,CAlBJ,CAFJ,EAuEI;AAAK,cAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEQ,MAAM,KAAKhD,KAAL,CAAWa,YAAX,CAAwBoG,MAA9B,GACI,oBAAC,YAAD;AACI,cAAA,EAAE,EAAE,KAAKjH,KAAL,CAAWC,EAAX,CAAciH,QAAd,EADR;AAEI,cAAA,YAAY,EAAE,KAAKlH,KAAL,CAAWa,YAF7B;AAGI,cAAA,SAAS,EAAE,kCAHf;AAII,cAAA,kBAAkB,EAAE,IAJxB;AAKI,cAAA,iBAAiB,EAAE,IALvB;AAMI,cAAA,MAAM,EAAE,KAAK2C,0BANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,GAUI;AAAK,cAAA,SAAS,EAAE,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADJ,CADJ,CAZZ,CAvEJ,CADJ;AA+FA;;AAEJ,eAAK,QAAL;AACI,iBAAKF,YAAL;AACA,iBAAKD,iBAAL;AACA2D,YAAAA,GAAG,GACC;AAAK,cAAA,SAAS,EAAE,yDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADJ,EAEI;AAAK,cAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,KAAD;AACI,cAAA,EAAE,EAAE,KAAKhH,KAAL,CAAWC,EAAX,CAAciH,QAAd,EADR;AAEI,cAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWkB,KAFtB;AAGI,cAAA,SAAS,EAAE,qDAHf;AAII,cAAA,iBAAiB,EAAE,KAAKyC,iBAJ5B;AAKI,cAAA,MAAM,EAAE,KAAKD,mBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAFJ,EAWI;AACI,cAAA,SAAS,EAAE,yDADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI;AAAK,cAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAE,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,KAAD;AACI,cAAA,EAAE,EAAE,cADR;AAEI,cAAA,SAAS,EAAE,OAFf;AAGI,cAAA,WAAW,EAAE,iEAHjB;AAII,cAAA,OAAO,EAAE,KAJb;AAKI,cAAA,SAAS,EAAE,eALf;AAMI,cAAA,QAAQ,EAAE,KAAKf,qBANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,CAFJ,EAcI;AAAK,cAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,YAAD;AACI,cAAA,IAAI,EAAE,4CADV;AAEI,cAAA,OAAO,EAAE,KAAKhB,OAFlB;AAGI,cAAA,SAAS,EAAE,4BAHf;AAII,cAAA,gBAAgB,EAAE,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,CAdJ,CAXJ,EAoCI;AAAK,cAAA,SAAS,EAAE,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAE,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,KAAD;AACI,cAAA,EAAE,EAAE,kBADR;AAEI,cAAA,SAAS,EAAE,UAFf;AAGI,cAAA,OAAO,EAAE,WAAW,KAAK3B,KAAL,CAAWoB,OAAtB,GAAgC,IAAhC,GAAuC,KAHpD;AAII,cAAA,WAAW,EAAE,EAJjB;AAKI,cAAA,SAAS,EAAE,sBALf;AAMI,cAAA,QAAQ,EAAE,KAAKwC,gBANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,EAWI;AACI,cAAA,SAAS,EAAE,yGADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAXJ,CApCJ,CADJ;AAyDA;;AAEJ,eAAK,UAAL;AACI,iBAAKR,eAAL;AACA4D,YAAAA,GAAG,GACC;AAAK,cAAA,SAAS,EAAE,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,EAEI;AAAK,cAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEQ,MAAM,KAAKhH,KAAL,CAAWc,QAAX,CAAoBmG,MAA1B,GACM,oBAAC,QAAD;AACE,cAAA,EAAE,EAAE,KAAKjH,KAAL,CAAWC,EAAX,CAAciH,QAAd,EADN;AAEE,cAAA,QAAQ,EAAE,KAAKlH,KAAL,CAAWc,QAFvB;AAGE,cAAA,SAAS,EAAE,kCAHb;AAIE,cAAA,kBAAkB,EAAE,IAJtB;AAKE,cAAA,MAAM,EAAE,KAAK2C,sBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,GAQM;AAAK,cAAA,SAAS,EAAE,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAK,cAAA,SAAS,EAAE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADJ,CADF,CAVd,CAFJ,CADJ;AAsBA;;AAEJ;AACIuD,YAAAA,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAN;AACA;AA7PR;;AA+PA,eACI;AAAS,UAAA,SAAS,EAAE,uCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAE,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+B,KAAKhH,KAAL,CAAWO,YAA1C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAyB,UAAA,OAAO,EAAE,KAAK0C,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,uCAAb;AACG,UAAA,IAAI,EAAE,cADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAKI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAyB,UAAA,OAAO,EAAE,KAAKA,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,qBAAb;AACG,UAAA,IAAI,EAAE,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CALJ,EASI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAyB,UAAA,OAAO,EAAE,KAAKA,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,qBAAb;AACG,UAAA,IAAI,EAAE,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CATJ,EAaI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAyB,UAAA,OAAO,EAAE,KAAKA,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,qBAAb;AACG,UAAA,IAAI,EAAE,UADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAbJ,CADJ,CAFJ,CADJ,EAwBK+D,GAxBL,CADJ;AA4BH,OA7RD,MA6RO,IAAI,YAAY,KAAKhH,KAAL,CAAWK,OAA3B,EAAoC;AACvC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADJ,CADJ;AAKH,OANM,MAMA;AACH,eAAO;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB,CAAP;AACH;AACJ,KAxSL,CAJJ,CADJ,CADJ;AAmTH;;AAjtBgD;;AAotBrD,eAAeT,KAAf","sourcesContent":["import React, {ChangeEvent, ReactNode} from 'react';\nimport Request from '../../API/Request';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport {ReactComponent as Loader} from '../../img/loader.svg';\nimport Input from '../General/Input';\nimport InputArea from '../General/InputArea';\nimport DropBox from '../General/DropBox';\nimport '../../css/Admin.css';\nimport CourseSheets from '../Lobby/CourseSheets';\nimport Users from './Users';\nimport HashtagInput from \"../General/HashtagInput\";\nimport SubmitButton from \"../General/SubmitButton\";\nimport Messages from \"../Lobby/Messages\";\n\ninterface AdminState {\n    id: number,\n    isAdmin: string,\n    currentTab: string,\n    currentLabel: string,\n    currentDescription: string,\n    currentLogo: File | null,\n    newLabel: string,\n    newDescription: string,\n    newLogo: File | null,\n    courseSheets: [],\n    messages: [],\n    newCourseSheetTitle: string,\n    newCourseSheetDescription: string,\n    newCourseSheetDocument: File | null,\n    users: [],\n    newUserEmail: string,\n    private: string,\n    hashtagInputIsNotEmpty: boolean,\n    hashtagsView: ReactNode,\n    hashtags: string[],\n    logoPath: string,\n}\n\nclass Admin extends React.Component<any, AdminState> {\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            id: this.props.location.pathname.split(/\\//)[2],\n            isAdmin: '',\n            currentTab: 'presentation',\n            currentLabel: '',\n            currentDescription: '',\n            currentLogo: null,\n            newLabel: '',\n            newDescription: '',\n            newLogo: null,\n            courseSheets: [],\n            messages: [],\n            newCourseSheetTitle: '',\n            newCourseSheetDescription: '',\n            newCourseSheetDocument: null,\n            users: [],\n            newUserEmail: '',\n            private: '',\n            hashtagInputIsNotEmpty: true,\n            hashtagsView: <div></div>,\n            hashtags: [],\n            logoPath: '',\n        }\n        this.init = this.init.bind(this);\n        this.init();\n    }\n\n    public init(): void {\n        this.addUser = this.addUser.bind(this);\n        this.checkIfAdmin = this.checkIfAdmin.bind(this);\n        this.emptyInput = this.emptyInput.bind(this);\n        this.fetchCourseSheets = this.fetchCourseSheets.bind(this);\n        this.fetchMessages = this.fetchMessages.bind(this);\n        this.fetchUsers = this.fetchUsers.bind(this);\n        this.fillPresentation = this.fillPresentation.bind(this);\n        this.fillUsers = this.fillUsers.bind(this);\n        this.fillCourseSheets = this.fillCourseSheets.bind(this);\n        this.fillMessages = this.fillMessages.bind(this);\n        this.fillLogo = this.fillLogo.bind(this);\n        this.handleCourseSheetDocumentDrop = this.handleCourseSheetDocumentDrop.bind(this);\n        this.getLogo = this.getLogo.bind(this);\n        this.handleCourseSheetDocumentChange = this.handleCourseSheetDocumentChange.bind(this);\n        this.handleCourseSheetTitleChange = this.handleCourseSheetTitleChange.bind(this);\n        this.handleCourseSheetDescriptionChange = this.handleCourseSheetDescriptionChange.bind(this);\n        this.handleUserEmailChange = this.handleUserEmailChange.bind(this);\n        this.handleLabelChange = this.handleLabelChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n        this.handleLogoDrop = this.handleLogoDrop.bind(this);\n        this.handleLogoChange = this.handleLogoChange.bind(this);\n        this.addCourseSheet = this.addCourseSheet.bind(this);\n        this.navigate = this.navigate.bind(this);\n        this.refreshPresentation = this.refreshPresentation.bind(this);\n        this.refreshCourseSheets = this.refreshCourseSheets.bind(this);\n        this.refreshMessages = this.refreshMessages.bind(this);\n        this.refreshVisibility = this.refreshVisibility.bind(this);\n        this.refreshUsers = this.refreshUsers.bind(this);\n        this.refreshAdmin = this.refreshAdmin.bind(this);\n        this.removeCourseSheetFromLobby = this.removeCourseSheetFromLobby.bind(this);\n        this.removeMessageFromLobby = this.removeMessageFromLobby.bind(this);\n        this.removeUserFromLobby = this.removeUserFromLobby.bind(this);\n        this.toggleWriteRights = this.toggleWriteRights.bind(this);\n        this.toggleVisibility = this.toggleVisibility.bind(this);\n        this.updateLobbby = this.updateLobbby.bind(this);\n        this.update = this.update.bind(this);\n        this.updateHashtagsView = this.updateHashtagsView.bind(this);\n        this.updateHashtags = this.updateHashtags.bind(this);\n        this.updateText = this.updateText.bind(this);\n        this.updateVisibility = this.updateVisibility.bind(this);\n    }\n\n    public componentDidMount(): void {\n        this.refreshAdmin();\n        this.refreshPresentation();\n        this.refreshCourseSheets();\n        this.refreshMessages();\n        this.refreshUsers();\n        this.refreshVisibility();\n    }\n\n    public checkIfAdmin(data: any): void {\n        if (true === data['isAdmin']) {\n            this.setState({isAdmin: 'true'});\n        } else {\n            this.setState({isAdmin: 'false'});\n        }\n    }\n\n    public fillPresentation(data: any): void {\n        if (undefined === data['message']) {\n            this.setState({currentLabel: data[0]['label_lobby']});\n            this.setState({currentDescription: data[0]['description']});\n            this.setState(\n                {logoPath: data[0]['logo']},\n                this.getLogo\n            );\n        }\n    }\n\n    public fillCourseSheets(data: any): void {\n        if (undefined === data['message']) {\n            this.setState(\n                {courseSheets: data},\n                () => this.forceUpdate(() => this.render())\n            );\n        } else {\n            this.setState({courseSheets: []},\n                () => this.forceUpdate(() => this.render())\n            );\n        }\n    }\n\n    public fillMessages(data: any): void {\n        if (undefined === data['message']) {\n            this.setState(\n                {messages: data},\n                () => this.forceUpdate(() => this.render())\n            );\n        } else {\n            this.setState({messages: []},\n                () => this.forceUpdate(() => this.render())\n            );\n        }\n    }\n\n    public fillUsers(data: any): void {\n        if (undefined === data['message']) {\n            this.setState({users: data});\n        } else {\n            this.setState({users: []});\n        }\n    }\n\n    public updateVisibility(data: any): void {\n        if (undefined === data['message']) {\n            '1' === data[0]['private'] ? this.setState({private: 'true'}) : this.setState({private: 'false'});\n        }\n    }\n\n    public refreshVisibility(): void {\n        new Request('/lobby/visibility/' + this.state.id, this.updateVisibility);\n    }\n\n    public handleLabelChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({newLabel: event.target.value});\n    }\n\n    public handleCourseSheetTitleChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({newCourseSheetTitle: event.target.value});\n    }\n\n    public handleDescriptionChange(event: ChangeEvent<HTMLTextAreaElement>): void {\n        this.setState({newDescription: event.target.value});\n    }\n\n    public handleCourseSheetDescriptionChange(event: ChangeEvent<HTMLTextAreaElement>): void {\n        this.setState({newCourseSheetDescription: event.target.value});\n    }\n\n    public handleLogoDrop(event: React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n        this.setState(\n            {newLogo: event.dataTransfer.files[0]},\n            this.getLogo\n        );\n    }\n\n    public handleLogoChange(event: ChangeEvent<HTMLInputElement>): void {\n        // @ts-ignore\n        this.setState(\n            // @ts-ignore\n            {newLogo: event.target.files[0]},\n            this.getLogo\n        );\n    }\n\n    public handleCourseSheetDocumentDrop(event: React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n        this.setState({newCourseSheetDocument: event.dataTransfer.files[0]});\n    }\n\n    public handleCourseSheetDocumentChange(event: ChangeEvent<HTMLInputElement>): void {\n        // @ts-ignore\n        this.setState({newCourseSheetDocument: event.target.files[0]});\n    }\n\n    public update(data: any): void {\n        if (undefined !== data['message_label']) {\n            this.setState({currentLabel: this.state.newLabel});\n        }\n        if (undefined !== data['message_description']) {\n            this.setState({currentDescription: this.state.newDescription});\n        }\n        if (undefined !== data['message_logo']) {\n            this.setState(\n                {logoPath: data['path']},\n                this.getLogo\n            );\n            this.setState(\n                {currentLogo: this.state.newLogo},\n                this.getLogo\n            );\n        }\n    }\n\n    public navigate(event: React.MouseEvent<HTMLLIElement, MouseEvent>): void {\n        event.preventDefault();\n        let target: any = event.target;\n        for (let li of target.parentElement.parentElement.children) {\n            li.firstElementChild.className = 'nav-link custom-tab';\n        }\n        target.className = target.className + ' custom-tab-active';\n        this.setState({currentTab: target.attributes.href.value});\n    }\n\n    public updateLobbby(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        let formData = new FormData();\n        // @ts-ignore\n        formData.append('token', localStorage.getItem('token'));\n        if ('' !== this.state.newLabel) {\n            formData.append('label', this.state.newLabel);\n        }\n        if ('' !== this.state.newDescription) {\n            formData.append('description', this.state.newDescription);\n        }\n        if (null !== this.state.newLogo) {\n            formData.append('file', this.state.newLogo);\n            new Request(\n                '/lobby/update/' + this.state.id,\n                this.update,\n                'POST',\n                formData,\n                this.state.newLogo.type,\n            );\n        } else {\n            new Request(\n                '/lobby/update/' + this.state.id,\n                this.update,\n                'POST',\n                formData,\n                '',\n            );\n        }\n    }\n\n    public addCourseSheet(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        let formData = new FormData();\n        // @ts-ignore\n        formData.append('token', localStorage.getItem('token'));\n        if (\n            '' !== this.state.newCourseSheetTitle &&\n            '' !== this.state.newCourseSheetDescription &&\n            null !== this.state.newCourseSheetDocument\n        ) {\n            formData.append('title', this.state.newCourseSheetTitle);\n            formData.append('description', this.state.newCourseSheetDescription);\n            formData.append('hashtags', JSON.stringify(this.state.hashtags));\n            formData.append('file', this.state.newCourseSheetDocument);\n            new Request(\n                '/lobby/newCourseSheet/' + this.state.id,\n                this.refreshCourseSheets,\n                'POST',\n                formData,\n                this.state.newCourseSheetDocument.type,\n            );\n        }\n    }\n\n    public refreshAdmin(): void {\n        new Request('/lobby/checkIfAdmin/' + this.state.id, this.checkIfAdmin);\n    }\n\n    public refreshPresentation(): void {\n        new Request('/lobby/consult/' + this.state.id, this.fillPresentation);\n    }\n\n    public refreshCourseSheets(): void {\n        new Request('/lobby/coursesheets/' + this.state.id, this.fillCourseSheets);\n    }\n\n    public refreshMessages(): void {\n        new Request('/lobby/messages/' + this.state.id, this.fillMessages);\n    }\n\n    public refreshUsers(): void {\n        new Request('/lobby/users/' + this.state.id, this.fillUsers);\n    }\n\n    public fetchCourseSheets(data: any): void {\n        if (data['message'].includes('successfully')) {\n            this.refreshCourseSheets();\n        }\n    }\n\n    public fetchMessages(data: any): void {\n        if ('success' === data['status']) {\n            this.refreshMessages();\n        }\n    }\n\n    public fetchUsers(data: any): void {\n        if (data['message'].includes('successfully')) {\n            this.refreshUsers();\n        }\n    }\n\n    public removeCourseSheetFromLobby(event: React.MouseEvent<HTMLImageElement, MouseEvent>): void {\n        let removeButton: any = event.target;\n        new Request('/lobby/deleteCourseSheet/' + this.state.id,\n            this.fetchCourseSheets,\n            'POST',\n            {\n                id: removeButton.id.split(/-/)[3],\n            });\n    }\n\n    public removeMessageFromLobby(event: React.MouseEvent<HTMLImageElement, MouseEvent>): void {\n        let removeButton: any = event.target;\n        new Request('/lobby/deleteMessage/' + this.state.id,\n            this.fetchMessages,\n            'POST',\n            {\n                id: removeButton.id.split(/-/)[2],\n            });\n    }\n\n    public removeUserFromLobby(event: React.MouseEvent<HTMLImageElement, MouseEvent>): void {\n        let removeButton: any = event.target;\n        new Request('/lobby/removeUser/' + this.state.id,\n            this.fetchUsers,\n            'POST',\n            {\n                id: removeButton.id.split(/-/)[2],\n            });\n    }\n\n    public toggleWriteRights(event: React.ChangeEvent<HTMLInputElement>): void {\n        let action: string = true === event.target.checked ?\n            'addWriteRight/' :\n            'removeWriteRight/';\n        new Request(\n            '/lobby/' + action + this.state.id,\n            this.fetchUsers,\n            'POST',\n            {\n                id: event.target.id.split(/-/)[3],\n            },\n        );\n    }\n\n    public addUser(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        new Request(\n            '/lobby/addUser/' + this.state.id,\n            this.refreshUsers,\n            'POST',\n            {\n                email: this.state.newUserEmail,\n            },\n        );\n    }\n\n    public handleUserEmailChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({newUserEmail: event.target.value});\n    }\n\n    public toggleVisibility(event: ChangeEvent<HTMLInputElement>): void {\n        let action: string;\n\n        action = 'true' === this.state.private ?\n            'makePublic/' : 'makePrivate/';\n        new Request('/lobby/' + action + this.state.id, this.refreshVisibility);\n    }\n\n    public emptyInput(isEmpty: boolean): void {\n        this.setState({hashtagInputIsNotEmpty: isEmpty});\n    }\n\n    public updateHashtagsView(hashtagsView: ReactNode): void {\n        this.setState({hashtagsView: hashtagsView});\n    }\n\n    public updateHashtags(hashtags: string[]): void {\n        console.log(hashtags);\n        this.setState({hashtags: hashtags});\n    }\n\n    public getLogo(): void {\n        new Request(\n            '/lobby/getLogo/0',\n            this.fillLogo,\n            'POST',\n            {\n                idLobby: this.state.id,\n                path: this.state.logoPath,\n            },\n            'json',\n            'blob',\n        );\n    }\n\n    public fillLogo(data: Blob): void {\n        const img: any = document.getElementById('lobby-logo-' + this.state.id);\n        const blob = new Blob([data], {type: 'image/jpg'});\n        img.src = URL.createObjectURL(blob);\n    }\n\n    public updateText(): void {\n\n    }\n\n    public render(): ReactNode {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path={this.props.path}>\n                        <h3>Veuillez choisir un lobby</h3>\n                    </Route>\n                    <Route path={this.props.location.pathname}>\n                        {() => {\n                            if ('true' === this.state.isAdmin) {\n                                let tab;\n                                switch (this.state.currentTab) {\n                                    case 'presentation':\n                                        this.refreshPresentation();\n                                        tab = (\n                                            <div className={'container-fluid col-12 col-lg-8 offset-lg-2 pl-4'}>\n                                                <h2>Informations visibles par les visiteurs</h2>\n                                                <Input id={'label-input'}\n                                                       inputType={'text'}\n                                                       placeholder={'Titre du lobby (n\\'en mets pas un trop long)'}\n                                                       checked={false}\n                                                       className={'mt-5'} onChange={this.handleLabelChange}/>\n                                                <div className={'row mt-5'}>\n                                                    <InputArea id={'new-description-input'}\n                                                               placeholder={'Nouvelle description du lobby\\nRacontes-y ce que tu veux, du moment que ça reste dans le thème de ton lobby'}\n                                                               className={'col-lg-6 col-md-6 col-sm-6 col-xs-6'}\n                                                               textAreaClassName={''}\n                                                               rows={5}\n                                                               onChange={this.handleDescriptionChange}\n                                                               disabled={false}\n                                                    />\n                                                    <InputArea id={'current-description-input'}\n                                                               placeholder={'Description actuelle du lobby\\n' + this.state.currentDescription}\n                                                               className={'col-lg-6 col-md-6 col-sm-6 col-xs-6'}\n                                                               textAreaClassName={''}\n                                                               rows={5}\n                                                               onChange={this.handleDescriptionChange}\n                                                               disabled={true}\n                                                    />\n                                                </div>\n                                                <div className={'row container-fluid p-0 ml-3'}>\n                                                    <div className={'col-6 pl-0 pr-5'}>\n                                                        <h3 className={'d-none d-lg-block d-md-block d-sm-block mr-4'}>Logo\n                                                            actuel</h3>\n                                                        <img\n                                                            id={'lobby-logo-' + this.state.id}\n                                                            className={'lobby-logo mt-3 mt-lg-0 mt-md-0 mt-sm-0 mr-4'}\n                                                            src={this.state.logoPath}\n                                                            alt={'Lobby logo'}\n                                                        />\n                                                    </div>\n                                                    <div className={'col-5 ml-2 mt-0 ml-lg-4 ml-md-4 ml-sm-4 p-0'}>\n                                                        <DropBox id={'input-logo'}\n                                                                 className={'mt-lg-4 mt-md-4 mt-sm-5'}\n                                                                 labelNotDragged={'Glisse un logo par ici !'}\n                                                                 labelDragged={'Logo déposé !'}\n                                                                 accept={'image/*'}\n                                                                 backgroundClassName={'mt-lg-4 mt-md-4 mt-sm-4 ml-4 ml-lg-5 ml-md-5 ml-sm-4'}\n                                                                 handleFileDrop={this.handleLogoDrop}\n                                                                 handleFileChange={this.handleLogoChange}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className={'row pr-4 pl-4'}>\n                                                    <SubmitButton\n                                                        text={'Mettre à jour le lobby'}\n                                                        onClick={this.updateLobbby}\n                                                        className={'mt-5 col-12'}\n                                                        disconnectButton={'plus'}\n                                                    />\n                                                </div>\n                                            </div>\n                                        );\n                                        break;\n\n                                    case 'course-sheets':\n                                        this.refreshCourseSheets();\n                                        tab = (\n                                            <div className={'container-fluid col-12 col-lg-8 pr-4 pr-sm-0'}>\n                                                <h2>Fiches de cours présentes dans le lobby</h2>\n                                                <div className={'row mt-5 pl-0'}>\n                                                    <div\n                                                        className={'col-lg-4 col-md-4 col-sm-4 col-xs-12 pl-0 pr-lg-5 pr-md-0 pr-sm-0 pr-xs-0 pl-4 pl-lg-0 pl-md-0 pl-sm-0'}>\n                                                        <Input id={'title-input'} inputType={'text'}\n                                                               placeholder={'Titre'}\n                                                               className={'no-mb'}\n                                                               checked={false}\n                                                               formGroupClassName={'mb-0 mb-lg-2 mb-md-1 mb-sm-4 pb-2 pb-lg-1 pb-md-0 pr-0 pl-0 pl-lg-4 pl-md-4 pl-sm-4 col-12'}\n                                                               onChange={this.handleCourseSheetTitleChange}/>\n                                                        <DropBox id={'course-sheet-input'}\n                                                                 className={'text-sm-left col-6 offset-3 offset-lg-0 offset-md-0 offset-sm-0 col-lg-12 col-md-12 col-sm-12 mt-3 mt-lg-0 mt-md-0 mt-sm-0 pr-0 pl-0 pl-lg-4 pl-md-4 pl-sm-4'}\n                                                                 backgroundClassName={'mt-1'}\n                                                                 labelNotDragged={'Glisse une fiche par ici !'}\n                                                                 labelDragged={'Fiche déposée !'}\n                                                                 accept={'.docx,.pdf,.html,.htm,.odp,txt,md'}\n                                                                 handleFileDrop={this.handleCourseSheetDocumentDrop}\n                                                                 handleFileChange={this.handleCourseSheetDocumentChange}/>\n                                                    </div>\n                                                    <div\n                                                        className={'col-12 col-lg-8 col-md-8 col-sm-8 mt-4 mt-lg-0 mt-md-0 mt-sm-0 pt-2 pt-lg-0 pt-md-0 pt-sm-0 pr-0 pr-lg-4 pr-md-4 pr-sm-4 pl-4 pl-lg-0 pl-md-5 pl-sm-5'}>\n                                                        <div\n                                                            className={'row container-fluid course-sheet-textarea-container pr-0 pl-4 pl-lg-0 pl-md-0 pl-sm-0'}>\n                                                            <InputArea id={'description-input'}\n                                                                       placeholder={'Description de la fiche\\nFais-en un bref résumé permettant de savoir à quoi s\\'attendre en la lisant'}\n                                                                       className={'col-12 pl-0 course-sheet-textarea'}\n                                                                       textAreaClassName={'course-sheet-textarea'}\n                                                                       rows={6}\n                                                                       onChange={this.handleCourseSheetDescriptionChange}\n                                                                       disabled={false}\n                                                            />\n                                                        </div>\n                                                        <div\n                                                            className={'row container-fluid mb-4 pr-0 pl-4 pl-lg-0 pl-md-0 pl-sm-0'}>\n                                                            <div\n                                                                className={'col-12 ml-0 pt-1 pr-0 pl-0'}>\n                                                                <div className={'form-inline'}>\n                                                                    <label id=\"hashtag-label\" htmlFor=\"add-hashtags\">\n                                                                        <span\n                                                                            id=\"hashtag-placeholder\">{this.state.hashtagInputIsNotEmpty ? 'Entre des hashtags pour cette fiche' : ''}</span>\n                                                                    </label>\n                                                                    {this.state.hashtagsView}\n                                                                    <div\n                                                                        className={'col-12 pl-0 pr-0'}>\n                                                                        <HashtagInput\n                                                                            id={'add-hashtags'}\n                                                                            className={'form-control w-100 mt-0 rounded hashtag-input col-12'}\n                                                                            type={'text'}\n                                                                            baseIndent={-3}\n                                                                            onUpdate={this.emptyInput}\n                                                                            updateHashtagsView={this.updateHashtagsView}\n                                                                            updateHashtags={this.updateHashtags}\n                                                                            updateText={this.updateText}\n                                                                            hashtagClassName={'hashtag-input-box hashtag'}\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div\n                                                            className={'row container-fluid pr-0 pl-4 pl-lg-0 pl-md-0 pl-sm-0'}>\n                                                            <SubmitButton\n                                                                text={'Une nouvelle fiche ? Ajoute-la !'}\n                                                                onClick={this.addCourseSheet}\n                                                                className={'col-sm-12 container-fluid add-course-sheet-button mt-5 mr-0 ml-0 pl-0'}\n                                                                disconnectButton={'plus'}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className={'row mt-5 pl-0'}>\n                                                    {\n                                                        0 !== this.state.courseSheets.length ?\n                                                            <CourseSheets\n                                                                id={this.state.id.toString()}\n                                                                courseSheets={this.state.courseSheets}\n                                                                className={'col-lg-12 col-sm-12 mt-lg-3 pl-4'}\n                                                                activeRemoveButton={true}\n                                                                removableHashtags={true}\n                                                                delete={this.removeCourseSheetFromLobby}\n                                                            />\n                                                            :\n                                                            <div className={'row container-fluid mt-5'}>\n                                                                <div className={'col-12 text-left'}>\n                                                                    <p>Il n'y a pas de fiches de cours pour\n                                                                        l'instant</p>\n                                                                </div>\n                                                            </div>\n                                                    }\n\n                                                </div>\n                                            </div>\n                                        );\n                                        break;\n\n                                    case 'rights':\n                                        this.refreshUsers();\n                                        this.refreshVisibility();\n                                        tab = (\n                                            <div className={'container-fluid  col-lg-8 col-md-12 col-sm-12 col-xs-12'}>\n                                                <h2>Utilisateurs autorisés à consulter le lobby</h2>\n                                                <div className={'row'}>\n                                                    <Users\n                                                        id={this.state.id.toString()}\n                                                        users={this.state.users}\n                                                        className={'col-lg-12 col-sm-12 mt-lg-3 mt-md-0 mt-sm-0 mt-xs-0'}\n                                                        toggleWriteRights={this.toggleWriteRights}\n                                                        delete={this.removeUserFromLobby}\n                                                    />\n                                                </div>\n                                                <div\n                                                    className={'col-12 col-lg-10 col-md-10 offset-lg-1 offset-md-1 mt-5'}>\n                                                    <div className={'row'}>\n                                                        <div className={'col-12 pl-0 add-usr-button'}>\n                                                            <Input\n                                                                id={'friend-input'}\n                                                                inputType={'email'}\n                                                                placeholder={'Un ami veut voir ton lobby ? Alors saisis son adresse email ici'}\n                                                                checked={false}\n                                                                className={'add-usr-input'}\n                                                                onChange={this.handleUserEmailChange}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className={'row'}>\n                                                        <div className={'col-12 pl-0 '}>\n                                                            <SubmitButton\n                                                                text={'Ca y est ? Alors c\\'est parti, ajoute-le !'}\n                                                                onClick={this.addUser}\n                                                                className={'mt-0 col-12 add-usr-button'}\n                                                                disconnectButton={'plus'}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className={'row col-12 pt-5 pr-0'}>\n                                                    <div className={'col-1 pt-2 pl-0 pr-0 checkbox-container'}>\n                                                        <Input\n                                                            id={'visibility-input'}\n                                                            inputType={'checkbox'}\n                                                            checked={'true' === this.state.private ? true : false}\n                                                            placeholder={''}\n                                                            className={'user-rights-checkbox'}\n                                                            onChange={this.toggleVisibility}\n                                                        />\n                                                    </div>\n                                                    <h4\n                                                        className={'col-11 pt-0 pt-lg-0 pt-md-0 pt-sm-0 pr-0 pl-2 pl-lg-0 pl-md-0 pl-sm-0 text-left lobby-write-right-label'}\n                                                    >\n                                                        Lobby privé (seules les personnes autorisées pourront le\n                                                        consulter\n                                                    </h4>\n                                                </div>\n                                            </div>\n                                        );\n                                        break;\n\n                                    case 'messages':\n                                        this.refreshMessages();\n                                        tab = (\n                                            <div className={'container-fluid col-12 col-lg-8 pr-0'}>\n                                                <h2>Messages postés dans le lobby</h2>\n                                                <div className={'row mt-5 pl-2'}>\n                                                    {\n                                                        0 !== this.state.messages.length\n                                                            ? <Messages\n                                                                id={this.state.id.toString()}\n                                                                messages={this.state.messages}\n                                                                className={'col-lg-12 col-sm-12 mt-lg-3 pl-4'}\n                                                                activeRemoveButton={true}\n                                                                delete={this.removeMessageFromLobby}\n                                                            />\n                                                            : <div className={'row container-fluid mt-5'}>\n                                                                <div className={'col-12 text-left'}>\n                                                                    <p>Il n'y a pas de fiches de cours pour l'instant</p>\n                                                                </div>\n                                                            </div>\n                                                    }\n                                                </div>\n                                            </div>\n                                        );\n                                        break;\n\n                                    default:\n                                        tab = <h2>Informations visibles par les visiteurs</h2>\n                                        break;\n                                }\n                                return (\n                                    <section className={'content row container-fluid pl-0 pr-0'}>\n                                        <div className={'admin-header'}>\n                                            <h1 className={'lobby-title'}>{this.state.currentLabel}</h1>\n                                            <nav>\n                                                <ul className=\"nav nav-tabs custom-tab-nav\">\n                                                    <li className=\"nav-item\" onClick={this.navigate}>\n                                                        <a className=\"nav-link custom-tab-active custom-tab\"\n                                                           href={'presentation'}>Description</a>\n                                                    </li>\n                                                    <li className=\"nav-item\" onClick={this.navigate}>\n                                                        <a className=\"nav-link custom-tab\"\n                                                           href={'course-sheets'}>Fiches</a>\n                                                    </li>\n                                                    <li className=\"nav-item\" onClick={this.navigate}>\n                                                        <a className=\"nav-link custom-tab\"\n                                                           href={'rights'}>Droits</a>\n                                                    </li>\n                                                    <li className=\"nav-item\" onClick={this.navigate}>\n                                                        <a className=\"nav-link custom-tab\"\n                                                           href={'messages'}>Messages</a>\n                                                    </li>\n                                                </ul>\n                                            </nav>\n                                        </div>\n                                        {tab}\n                                    </section>\n                                );\n                            } else if ('false' === this.state.isAdmin) {\n                                return (\n                                    <div>\n                                        <h1>Vous n'êtes pas administrateur de ce lobby</h1>\n                                    </div>\n                                );\n                            } else {\n                                return <div className={'mt-5'}><Loader/></div>\n                            }\n                        }}\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}