{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Message/Messages.tsx\";\nimport React from 'react';\nimport Message from \"./Message\";\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: []\n    };\n    this.renderMessage = this.renderMessage.bind(this);\n    this.renderMessages = this.renderMessages.bind(this);\n    this.setState = this.setState.bind(this);\n  }\n\n  renderMessage(id, idUser, content, send_date, pseudo, icon) {\n    return React.createElement(Message, {\n      id: id,\n      key: id,\n      idUser: idUser,\n      content: content,\n      send_date: send_date,\n      pseudo: pseudo,\n      icon: icon,\n      activeRemoveButton: this.props.activeRemoveButton,\n      delete: this.props.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  renderMessages() {\n    // @ts-ignore\n    if (this.props.messages['success']) {\n      return this.props.messages['data'].map(message => this.renderMessage(message['id_message'], message['id_user'], message['content'], message['send_date'], message['pseudo'], message['icon'])).sort((message1, message2) => {\n        if (message1.props.send_date < message2.props.send_date) {\n          return 1;\n        } else if (message1.props.send_date > message2.props.send_date) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'col-12 pr-lg-5 pl-lg-0 pl-sm-0 ' + this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: 'messages-list list-unstyled',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderMessages()));\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Message/Messages.tsx"],"names":["React","Message","Messages","Component","constructor","props","state","messages","renderMessage","bind","renderMessages","setState","id","idUser","content","send_date","pseudo","icon","activeRemoveButton","delete","map","message","sort","message1","message2","render","className"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAUA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAA2D;AAChDC,EAAAA,WAAP,CAAmBC,KAAnB,EAAyC;AACrC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEMD,EAAAA,aAAP,CAAqBI,EAArB,EAAiCC,MAAjC,EAAiDC,OAAjD,EAAkEC,SAAlE,EAAqFC,MAArF,EAAqGC,IAArG,EAA8H;AAC1H,WAAO,oBAAC,OAAD;AACH,MAAA,EAAE,EAAEL,EADD;AAEH,MAAA,GAAG,EAAEA,EAFF;AAGH,MAAA,MAAM,EAAEC,MAHL;AAIH,MAAA,OAAO,EAAEC,OAJN;AAKH,MAAA,SAAS,EAAEC,SALR;AAMH,MAAA,MAAM,EAAEC,MANL;AAOH,MAAA,IAAI,EAAEC,IAPH;AAQH,MAAA,kBAAkB,EAAE,KAAKZ,KAAL,CAAWa,kBAR5B;AASH,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,MAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAWH;;AAEMT,EAAAA,cAAP,GAAmD;AAC/C;AACA,QAAI,KAAKL,KAAL,CAAWE,QAAX,CAAoB,SAApB,CAAJ,EAAoC;AAChC,aAAO,KAAKF,KAAL,CAAWE,QAAX,CAAoB,MAApB,EAA4Ba,GAA5B,CACFC,OAAD,IAAkB,KAAKb,aAAL,CAAmBa,OAAO,CAAC,YAAD,CAA1B,EAA0CA,OAAO,CAAC,SAAD,CAAjD,EAA8DA,OAAO,CAAC,SAAD,CAArE,EAAkFA,OAAO,CAAC,WAAD,CAAzF,EAAwGA,OAAO,CAAC,QAAD,CAA/G,EAA2HA,OAAO,CAAC,MAAD,CAAlI,CADf,EAGFC,IAHE,CAGG,CAACC,QAAD,EAAgBC,QAAhB,KAA0C;AACxC,YAAID,QAAQ,CAAClB,KAAT,CAAeU,SAAf,GAA2BS,QAAQ,CAACnB,KAAT,CAAeU,SAA9C,EAAyD;AACrD,iBAAO,CAAP;AACH,SAFD,MAEO,IAAIQ,QAAQ,CAAClB,KAAT,CAAeU,SAAf,GAA2BS,QAAQ,CAACnB,KAAT,CAAeU,SAA9C,EAAyD;AAC5D,iBAAO,CAAC,CAAR;AACH,SAFM,MAEA;AACH,iBAAO,CAAP;AACH;AACJ,OAXF,CAAP;AAaH,KAdD,MAcO;AACH,aAAO,EAAP;AACH;AACJ;;AAEMU,EAAAA,MAAP,GAA2B;AACvB,WACI;AAAK,MAAA,SAAS,EAAE,oCAAoC,KAAKpB,KAAL,CAAWqB,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAE,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,cAAL,EADL,CADJ,CADJ;AAOH;;AAtDsD;;AAyD3D,eAAeR,QAAf","sourcesContent":["import React, {ReactNode} from 'react';\nimport Message from \"./Message\";\n\ninterface MessagesProps {\n    id: string,\n    messages: [],\n    className?: string,\n    activeRemoveButton?: boolean,\n    delete?: ((event: React.MouseEvent<HTMLImageElement, MouseEvent>) => void) | undefined,\n}\n\nclass Messages extends React.Component<MessagesProps, any> {\n    public constructor(props: MessagesProps) {\n        super(props);\n        this.state = {\n            messages: [],\n        }\n        this.renderMessage = this.renderMessage.bind(this);\n        this.renderMessages = this.renderMessages.bind(this);\n        this.setState = this.setState.bind(this);\n    }\n\n    public renderMessage(id: string, idUser: string, content: string, send_date: string, pseudo: string, icon: string): ReactNode {\n        return <Message\n            id={id}\n            key={id}\n            idUser={idUser}\n            content={content}\n            send_date={send_date}\n            pseudo={pseudo}\n            icon={icon}\n            activeRemoveButton={this.props.activeRemoveButton}\n            delete={this.props.delete}\n        />;\n    }\n\n    public renderMessages(): ({} | null | undefined)[] {\n        // @ts-ignore\n        if (this.props.messages['success']) {\n            return this.props.messages['data'].map(\n                (message: any) => this.renderMessage(message['id_message'], message['id_user'], message['content'], message['send_date'], message['pseudo'], message['icon'])\n            )\n                .sort((message1: any, message2: any): number => {\n                        if (message1.props.send_date < message2.props.send_date) {\n                            return 1;\n                        } else if (message1.props.send_date > message2.props.send_date) {\n                            return -1;\n                        } else {\n                            return 0;\n                        }\n                    }\n                );\n        } else {\n            return [];\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <div className={'col-12 pr-lg-5 pl-lg-0 pl-sm-0 ' + this.props.className}>\n                <ul className={'messages-list list-unstyled'}>\n                    {this.renderMessages()}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}