{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/General/Nav.tsx\";\nimport React from 'react';\nimport { Breadcrumbs, Breadcrumb } from 'react-breadcrumbs';\nimport SearchBar from '../Search/SearchBar';\nimport '../../css/Nav.css';\nimport Svg from '../Assets/Svg';\nimport Request from '../../API/Request';\nimport ConnectedStatus from '../Connection/ConnectedStatus';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tokenExists: false,\n      breadcumbs: []\n    };\n    this.disconnect = this.disconnect.bind(this);\n    this.checkIfAlreadyConnected = this.checkIfAlreadyConnected.bind(this);\n    this.updateBreadCumbs = this.updateBreadCumbs.bind(this);\n    this.renderBreadCumbs = this.renderBreadCumbs.bind(this);\n  } // Check if token is still valid\n\n\n  componentDidMount() {\n    if (undefined !== localStorage.getItem('token') && '' !== localStorage.getItem('token')) {\n      new Request('/connection/verification', this.checkIfAlreadyConnected);\n    } // Breadcumbs logic\n    // let firstBre =\n\n\n    let firstBreadCumbIndex = 0;\n    let deleteOthers = false;\n\n    for (let item in localStorage) {\n      if ('breadCumb-' + firstBreadCumbIndex === item) {\n        if (deleteOthers) {\n          localStorage.removeItem('breadCumb-' + firstBreadCumbIndex);\n        } else if (localStorage.getItem('breadCumb-' + (firstBreadCumbIndex - 1)) === document.location.href + localStorage.getItem('Title')) {\n          deleteOthers = true;\n        }\n\n        this.setState((state, props) => {\n          return {\n            tokenExists: state.tokenExists,\n            breadcumbs: state.breadcumbs.push( // @ts-ignore\n            React.createElement(Breadcrumb, {\n              data: {\n                title: 'Home',\n                // @ts-ignore\n                pathname: localStorage.getItem('breadCumb-' + (firstBreadCumbIndex - 1)).split(/ /)[0]\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }))\n          };\n        });\n        firstBreadCumbIndex++;\n      }\n    }\n\n    if (localStorage.getItem('breadCumb-' + (firstBreadCumbIndex - 1)) !== document.location.href + localStorage.getItem('Title')) {\n      localStorage.setItem('breadCumb-' + firstBreadCumbIndex, document.location.href + ' ' + localStorage.getItem('Title'));\n    }\n  }\n\n  checkIfAlreadyConnected(payload) {\n    this.setState({\n      tokenExists: payload['success']\n    }, () => {\n      if (false === this.state.tokenExists) {\n        localStorage.setItem('token', '');\n      }\n    });\n  }\n\n  disconnect() {\n    localStorage.setItem('token', ''); // @ts-ignore\n\n    document.location = '/';\n  }\n\n  updateBreadCumbs() {}\n\n  renderBreadCumbs() {\n    return this.state.breadcumbs.map(breadcumb => React.createElement(Breadcrumb, {\n      data: breadcumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: 'row mt-3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'col-lg-2 col-md-3 col-sm-4 col-xs-12 mt-0 mt-lg-0 mt-md-1 mt-sm-1 mr-0 mr-lg-0 mr-sm-0 ml-3 ml-lg-0 ml-md-0 ml-sm-0 pr-0 pl-4 pl-lg-4 pl-md-4 pl-sm-4 text-left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: '/',\n      className: 'row container-fluid col-xs-11 ml-lg-1 ml-md-1 ml-sm-1 ml-xs-0 pr-0 pl-lg-2 pl-md-2 pl-sm-2 pl-0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Svg, {\n      className: 'col-lg-3 col-md-3 col-sm-3 col-xs-1 mr-3 mr-lg-0 mr-md-0 mr-sm-0 pl-0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'col-lg-9 col-md-9 col-sm-9 col-xs-9 mt-3 pl-0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'mt-1',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"caCompilePas\")))), React.createElement(ConnectedStatus, {\n      connectedDivClassName: 'col-xs-1 mb-2',\n      connectedButtonClassName: 'row mt-0 mt-1 pl-5 disconnect-button',\n      notConnectedClassName: 'row mt-3 ml-5 pl-4',\n      displayMessageClassName: 'hidden',\n      display: 'd-lg-none d-md-none d-sm-none',\n      disconnect: this.disconnect,\n      status: this.state.tokenExists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: 'ml-lg-0 pl-lg-0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(ConnectedStatus, {\n      connectedDivClassName: '',\n      connectedButtonClassName: 'mt-0 ml-3 pt-0 pl-1 disconnect-button',\n      notConnectedClassName: 'mt-lg-3 mt-md-3 mt-sm-1 mr-5 pt-lg-2 pr-lg-5 pr-sm-1 pl-0',\n      displayMessageClassName: 'visible',\n      display: 'd-none d-lg-block d-md-block d-sm-block col-lg-1 col-md-1 col-sm-1',\n      disconnect: this.disconnect,\n      status: this.state.tokenExists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Breadcrumbs, {\n      className: 'mt-3 mt-lg-0 mt-md-0 mt-sm-0 ml-0 ml-lg-4 ml-md-4 ml-sm-4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.renderBreadCumbs(), React.createElement(Breadcrumb, {\n      data: {\n        title: 'Home',\n        pathname: '/'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Breadcrumb, {\n      data: {\n        title: 'Lobby',\n        pathname: '/lobby/1'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Nav;","map":{"version":3,"sources":["/usr/src/app/client/src/View/General/Nav.tsx"],"names":["React","Breadcrumbs","Breadcrumb","SearchBar","Svg","Request","ConnectedStatus","BrowserRouter","Router","Nav","Component","constructor","props","state","tokenExists","breadcumbs","disconnect","bind","checkIfAlreadyConnected","updateBreadCumbs","renderBreadCumbs","componentDidMount","undefined","localStorage","getItem","firstBreadCumbIndex","deleteOthers","item","removeItem","document","location","href","setState","push","title","pathname","split","setItem","payload","map","breadcumb","render"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport {Breadcrumbs, Breadcrumb} from 'react-breadcrumbs';\nimport SearchBar from '../Search/SearchBar';\nimport '../../css/Nav.css';\nimport Svg from '../Assets/Svg';\nimport Request from '../../API/Request';\nimport ConnectedStatus from '../Connection/ConnectedStatus';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\ninterface NavState {\n    tokenExists: boolean,\n    breadcumbs: Breadcrumb[],\n}\n\nclass Nav extends React.Component<any, NavState> {\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            tokenExists: false,\n            breadcumbs: [],\n        }\n        this.disconnect = this.disconnect.bind(this);\n        this.checkIfAlreadyConnected = this.checkIfAlreadyConnected.bind(this);\n        this.updateBreadCumbs = this.updateBreadCumbs.bind(this);\n        this.renderBreadCumbs = this.renderBreadCumbs.bind(this);\n    }\n\n    // Check if token is still valid\n    public componentDidMount(): void {\n        if (undefined !== localStorage.getItem('token') && '' !== localStorage.getItem('token')) {\n            new Request(\n                '/connection/verification',\n                this.checkIfAlreadyConnected,\n            );\n        }\n\n        // Breadcumbs logic\n        // let firstBre =\n        let firstBreadCumbIndex = 0;\n        let deleteOthers = false;\n        for (let item in localStorage) {\n            if ('breadCumb-' + firstBreadCumbIndex === item) {\n                if (deleteOthers) {\n                    localStorage.removeItem('breadCumb-' + firstBreadCumbIndex);\n                } else if (localStorage.getItem('breadCumb-' + (firstBreadCumbIndex - 1)) === document.location.href + localStorage.getItem('Title')) {\n                    deleteOthers = true;\n                }\n                this.setState((state, props) => {\n                    return {\n                        tokenExists: state.tokenExists,\n                        breadcumbs: state.breadcumbs.push(\n                            // @ts-ignore\n                            <Breadcrumb\n                                data={{\n                                    title: 'Home',\n                                    // @ts-ignore\n                                    pathname: localStorage.getItem('breadCumb-' + (firstBreadCumbIndex - 1)).split(/ /)[0],\n                                }}\n                            />\n                        )\n                    }\n                });\n                firstBreadCumbIndex++;\n            }\n        }\n        if (localStorage.getItem('breadCumb-' + (firstBreadCumbIndex - 1)) !== document.location.href + localStorage.getItem('Title')) {\n            localStorage.setItem('breadCumb-' + firstBreadCumbIndex, document.location.href + ' ' + localStorage.getItem('Title'));\n        }\n    }\n\n    public checkIfAlreadyConnected(payload: any): void {\n        this.setState(\n            {tokenExists: payload['success']},\n            () => {\n                if (false === this.state.tokenExists) {\n                    localStorage.setItem('token', '');\n                }\n            }\n        );\n    }\n\n    public disconnect(): void {\n        localStorage.setItem('token', '');\n        // @ts-ignore\n        document.location = '/';\n    }\n\n    public updateBreadCumbs(): void {\n\n    }\n\n    public renderBreadCumbs(): ReactNode {\n        return this.state.breadcumbs.map((breadcumb: any) =>\n            <Breadcrumb\n                data={breadcumb}\n            />\n        );\n    }\n\n    public render(): ReactNode {\n        return (\n            <Router>\n                <nav className={'row mt-3'}>\n                    <div\n                        className={'col-lg-2 col-md-3 col-sm-4 col-xs-12 mt-0 mt-lg-0 mt-md-1 mt-sm-1 mr-0 mr-lg-0 mr-sm-0 ml-3 ml-lg-0 ml-md-0 ml-sm-0 pr-0 pl-4 pl-lg-4 pl-md-4 pl-sm-4 text-left'}>\n                        <a href={'/'}\n                           className={'row container-fluid col-xs-11 ml-lg-1 ml-md-1 ml-sm-1 ml-xs-0 pr-0 pl-lg-2 pl-md-2 pl-sm-2 pl-0'}>\n                            <Svg\n                                className={'col-lg-3 col-md-3 col-sm-3 col-xs-1 mr-3 mr-lg-0 mr-md-0 mr-sm-0 pl-0'}\n                            />\n                            <div\n                                className={'col-lg-9 col-md-9 col-sm-9 col-xs-9 mt-3 pl-0'}\n                            >\n                                <div\n                                    className={'mt-1'}\n                                >\n                                    <p>\n                                        caCompilePas\n                                    </p>\n                                </div>\n                            </div>\n                        </a>\n                        <ConnectedStatus\n                            connectedDivClassName={'col-xs-1 mb-2'}\n                            connectedButtonClassName={'row mt-0 mt-1 pl-5 disconnect-button'}\n                            notConnectedClassName={'row mt-3 ml-5 pl-4'}\n                            displayMessageClassName={'hidden'}\n                            display={'d-lg-none d-md-none d-sm-none'}\n                            disconnect={this.disconnect}\n                            status={this.state.tokenExists}\n                        />\n                    </div>\n                    <div className={'ml-lg-0 pl-lg-0'}></div>\n                    <SearchBar/>\n                    <ConnectedStatus\n                        connectedDivClassName={''}\n                        connectedButtonClassName={'mt-0 ml-3 pt-0 pl-1 disconnect-button'}\n                        notConnectedClassName={'mt-lg-3 mt-md-3 mt-sm-1 mr-5 pt-lg-2 pr-lg-5 pr-sm-1 pl-0'}\n                        displayMessageClassName={'visible'}\n                        display={'d-none d-lg-block d-md-block d-sm-block col-lg-1 col-md-1 col-sm-1'}\n                        disconnect={this.disconnect}\n                        status={this.state.tokenExists}\n                    />\n                </nav>\n                <Breadcrumbs\n                    className={'mt-3 mt-lg-0 mt-md-0 mt-sm-0 ml-0 ml-lg-4 ml-md-4 ml-sm-4'}\n                >\n                    {this.renderBreadCumbs()}\n                    <Breadcrumb\n                        data={{\n                            title: 'Home',\n                            pathname: '/',\n                        }}\n                    />\n                    <Breadcrumb\n                        data={{\n                            title: 'Lobby',\n                            pathname: '/lobby/1',\n                        }}\n                    />\n                </Breadcrumbs>\n            </Router>\n        )\n    }\n}\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}