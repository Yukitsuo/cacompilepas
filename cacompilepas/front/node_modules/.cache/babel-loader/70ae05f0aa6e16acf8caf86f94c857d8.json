{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Lobby/LobbyPage.tsx\";\nimport React from 'react';\nimport Request from '../../API/Request';\nimport '../../css/Lobby.css';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport { ReactComponent as Loader } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/loader.svg\";\nimport LobbyTop from './LobbyTop';\nimport LobbyBody from './LobbyBody';\nimport swal from 'sweetalert';\n\nclass LobbyPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.intervalRefresh = void 0;\n    this.state = {\n      right: '',\n      isAdmin: false,\n      courseSheets: [],\n      messages: [],\n      lobbyInformation: [],\n      messageContent: ''\n    };\n    this.setState = this.setState.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.fillCourseSheets = this.fillCourseSheets.bind(this);\n    this.fillDescription = this.fillDescription.bind(this);\n    this.fillMessages = this.fillMessages.bind(this);\n    this.refreshCourseSheets = this.refreshCourseSheets.bind(this);\n    this.refreshData = this.refreshData.bind(this);\n    this.refreshDescription = this.refreshDescription.bind(this);\n    this.refreshMessages = this.refreshMessages.bind(this);\n    this.updateMessage = this.updateMessage.bind(this);\n    this.intervalRefresh = setInterval(() => this.refreshData(), 1000);\n  }\n\n  componentDidMount() {\n    this.refreshCourseSheets();\n    this.refreshDescription();\n    this.refreshMessages();\n  }\n\n  refreshData() {\n    this.refreshCourseSheets();\n    this.refreshDescription();\n    this.refreshMessages();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalRefresh);\n  }\n\n  sendMessage(event) {\n    new Request('/message/add_message', this.refreshMessages, 'POST', {\n      lobby_id: this.props.location.pathname.split(/\\//)[2],\n      content: this.state.messageContent\n    });\n  }\n\n  fillDescription(payload) {\n    if (payload['success']) {\n      this.setState({\n        lobbyInformation: payload['data'][0]\n      });\n      this.setState({\n        right: 'true'\n      });\n    } else {\n      this.setState({\n        right: 'false'\n      });\n    }\n  }\n\n  fillMessages(payload) {\n    this.setState({\n      messages: payload['success'] ? payload : []\n    });\n  }\n\n  refreshCourseSheets() {\n    new Request('/course_sheet/course_sheets', this.fillCourseSheets, 'POST', {\n      'lobby_id': this.props.location.pathname.split(/\\//)[2]\n    });\n  }\n\n  refreshMessages(payload = {\n    'success': true\n  }) {\n    if (payload['success']) {\n      new Request('/message/messages', this.fillMessages, 'POST', {\n        lobby_id: this.props.location.pathname.split(/\\//)[2]\n      });\n    } else if (false === payload['success']) {\n      swal({\n        title: 'Tu ne peux pas écrire de message ici',\n        text: 'L\\'admin de ce lobby ne t\\'a pas donné l\\'autorisation d\\'envoyer de message ici, tu peux lui en faire la demande si tu le souhaites.',\n        icon: 'error'\n      }).then(r => null);\n    }\n  }\n\n  refreshDescription() {\n    new Request('/lobby/consult/' + this.props.location.pathname.split(/\\//)[2], this.fillDescription);\n  }\n\n  fillCourseSheets(payload) {\n    this.setState({\n      courseSheets: payload['success'] ? payload : []\n    });\n  }\n\n  updateMessage(content) {\n    if ('\\n' === content.charAt(content.length - 1)) {\n      this.setState({\n        messageContent: content + '<br/>'\n      });\n    } else {\n      this.setState({\n        messageContent: content\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: this.props.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Veuillez choisir un lobby\")), React.createElement(Route, {\n      path: this.props.location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, () => {\n      if ('true' === this.state.right) {\n        return React.createElement(\"section\", {\n          className: \"content row container-fluid pr-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(LobbyTop, {\n          id: this.props.location.pathname.split(/\\//)[2],\n          lobbyInformation: this.state.lobbyInformation,\n          courseSheets: this.state.courseSheets,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(LobbyBody, {\n          id: this.props.location.pathname.split(/\\//)[2],\n          labelLobby: this.state.lobbyInformation['label_lobby'],\n          courseSheets: this.state.courseSheets,\n          messages: this.state.messages,\n          sendMessage: this.sendMessage,\n          updateMessage: this.updateMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }));\n      } else if ('false' === this.state.right) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"Tu n'as pas les droits n\\xE9cessaires pour acc\\xE9der \\xE0 ce lobby\");\n      } else {\n        return React.createElement(\"div\", {\n          className: 'mt-5',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }));\n      }\n    })));\n  }\n\n}\n\nexport default LobbyPage;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Lobby/LobbyPage.tsx"],"names":["React","Request","Switch","Route","BrowserRouter","Router","LobbyTop","LobbyBody","swal","LobbyPage","Component","constructor","props","intervalRefresh","state","right","isAdmin","courseSheets","messages","lobbyInformation","messageContent","setState","bind","sendMessage","fillCourseSheets","fillDescription","fillMessages","refreshCourseSheets","refreshData","refreshDescription","refreshMessages","updateMessage","setInterval","componentDidMount","componentWillUnmount","clearInterval","event","lobby_id","location","pathname","split","content","payload","title","text","icon","then","r","charAt","length","render","path"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport Request from '../../API/Request';\nimport '../../css/Lobby.css';\nimport {\n    Switch,\n    Route,\n    BrowserRouter as Router,\n} from 'react-router-dom';\nimport {ReactComponent as Loader} from '../../img/loader.svg';\nimport LobbyTop from './LobbyTop';\nimport LobbyBody from './LobbyBody';\nimport swal from 'sweetalert';\n\ninterface LobbyState {\n    right: string,\n    isAdmin: boolean,\n    courseSheets: [],\n    messages: [],\n    lobbyInformation: any,\n    messageContent: string,\n}\n\nclass LobbyPage extends React.Component<any, LobbyState> {\n\n    private intervalRefresh: any;\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            right: '',\n            isAdmin: false,\n            courseSheets: [],\n            messages: [],\n            lobbyInformation: [],\n            messageContent: '',\n        }\n        this.setState = this.setState.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.fillCourseSheets = this.fillCourseSheets.bind(this);\n        this.fillDescription = this.fillDescription.bind(this);\n        this.fillMessages = this.fillMessages.bind(this);\n        this.refreshCourseSheets = this.refreshCourseSheets.bind(this);\n        this.refreshData = this.refreshData.bind(this);\n        this.refreshDescription = this.refreshDescription.bind(this);\n        this.refreshMessages = this.refreshMessages.bind(this);\n        this.updateMessage = this.updateMessage.bind(this);\n        this.intervalRefresh = setInterval(\n            () => this.refreshData(),\n            1000,\n        );\n    }\n\n    public componentDidMount(): void {\n        this.refreshCourseSheets();\n        this.refreshDescription();\n        this.refreshMessages();\n    }\n\n    public refreshData(): void {\n        this.refreshCourseSheets();\n        this.refreshDescription();\n        this.refreshMessages();\n    }\n\n    public componentWillUnmount(): void {\n        clearInterval(this.intervalRefresh);\n    }\n\n    public sendMessage(event: React.MouseEvent<HTMLButtonElement>): void {\n        new Request(\n            '/message/add_message',\n            this.refreshMessages,\n            'POST',\n            {\n                lobby_id: this.props.location.pathname.split(/\\//)[2],\n                content: this.state.messageContent,\n            },\n        );\n    }\n\n    public fillDescription(payload: any): void {\n        if (payload['success']) {\n            this.setState({lobbyInformation: payload['data'][0]});\n            this.setState({right: 'true'});\n        } else {\n            this.setState({right: 'false'});\n        }\n    }\n\n    public fillMessages(payload: any): void {\n        this.setState({messages: payload['success'] ? payload : []});\n    }\n\n    public refreshCourseSheets(): void {\n        new Request(\n            '/course_sheet/course_sheets',\n            this.fillCourseSheets,\n            'POST',\n            {\n                'lobby_id': this.props.location.pathname.split(/\\//)[2],\n            }\n        );\n    }\n\n    public refreshMessages(payload: any = {'success': true}): void {\n        if (payload['success']) {\n            new Request(\n                '/message/messages',\n                this.fillMessages,\n                'POST',\n                {\n                    lobby_id: this.props.location.pathname.split(/\\//)[2],\n                }\n            );\n        } else if (false === payload['success']) {\n            swal({\n                title: 'Tu ne peux pas écrire de message ici',\n                text: 'L\\'admin de ce lobby ne t\\'a pas donné l\\'autorisation d\\'envoyer de message ici, tu peux lui en faire la demande si tu le souhaites.',\n                icon: 'error'\n            }).then((r: any) => null);\n        }\n    }\n\n    public refreshDescription(): void {\n        new Request('/lobby/consult/' + this.props.location.pathname.split(/\\//)[2], this.fillDescription);\n    }\n\n    public fillCourseSheets(payload: any): void {\n        this.setState({courseSheets: payload['success'] ? payload : []});\n    }\n\n    public updateMessage(content: string): void {\n        if ('\\n' === content.charAt(content.length -1)) {\n            this.setState({messageContent: content + '<br/>'});\n        } else {\n            this.setState({messageContent: content});\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path={this.props.path}>\n                        <h3>Veuillez choisir un lobby</h3>\n                    </Route>\n                    <Route path={this.props.location.pathname}>\n                        {() => {\n                            if ('true' === this.state.right) {\n                                return (\n                                    <section className={\"content row container-fluid pr-0\"}>\n                                        <LobbyTop\n                                            id={this.props.location.pathname.split(/\\//)[2]}\n                                            lobbyInformation={this.state.lobbyInformation}\n                                            courseSheets={this.state.courseSheets}\n                                        />\n                                        <LobbyBody id={this.props.location.pathname.split(/\\//)[2]}\n                                                   labelLobby={this.state.lobbyInformation['label_lobby']}\n                                                   courseSheets={this.state.courseSheets}\n                                                   messages={this.state.messages}\n                                                   sendMessage={this.sendMessage}\n                                                   updateMessage={this.updateMessage}\n                                        />\n                                    </section>\n                                );\n                            } else if ('false' === this.state.right) {\n                                return <h2>Tu n'as pas les droits nécessaires pour accéder à ce lobby</h2>\n                            } else {\n                                return <div className={'mt-5'}><Loader/></div>\n                            }\n                        }}\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default LobbyPage;\n"]},"metadata":{},"sourceType":"module"}