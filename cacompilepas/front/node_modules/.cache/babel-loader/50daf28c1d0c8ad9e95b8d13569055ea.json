{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Admin/Users.tsx\";\nimport React from 'react';\nimport User from \"./User\";\nimport Request from \"../../API/Request\";\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fillIcon = this.fillIcon.bind(this);\n    this.getIcon = this.getIcon.bind(this);\n    this.renderUsers = this.renderUsers.bind(this);\n  }\n\n  renderUsers() {\n    if (undefined === this.props.users['message']) {\n      let res = this.props.users.map(user => React.createElement(User, {\n        id: user['id_user'],\n        key: user['id_user'],\n        pseudo: user['pseudo'],\n        writeRight: user['write_right'] === '1' ? true : false,\n        icon: user['icon'],\n        delete: this.props.delete,\n        toggleWriteRights: this.props.toggleWriteRights,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n      return res;\n    } else {\n      return [];\n    }\n  }\n\n  getIcon() {\n    new Request('/lobby/getIcon/0', this.fillIcon, 'POST', {\n      idUser: this.props.id,\n      path: this.state.logoPath\n    }, 'json', 'blob');\n  }\n\n  fillIcon(data) {\n    const img = document.getElementById('lobby-logo-' + this.state.id);\n    const blob = new Blob([data], {\n      type: 'image/jpg'\n    });\n    img.src = URL.createObjectURL(blob);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'users-section ' + this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.renderUsers());\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Admin/Users.tsx"],"names":["React","User","Request","Users","Component","constructor","props","fillIcon","bind","getIcon","renderUsers","undefined","users","res","map","user","delete","toggleWriteRights","idUser","id","path","state","logoPath","data","img","document","getElementById","blob","Blob","type","src","URL","createObjectURL","render","className"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAUA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAqD;AAC1CC,EAAAA,WAAP,CAAmBC,KAAnB,EAAsC;AAClC,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEME,EAAAA,WAAP,GAAgC;AAC5B,QAAIC,SAAS,KAAK,KAAKL,KAAL,CAAWM,KAAX,CAAiB,SAAjB,CAAlB,EAA+C;AAC3C,UAAIC,GAAG,GAAG,KAAKP,KAAL,CAAWM,KAAX,CAAiBE,GAAjB,CAAsBC,IAAD,IAC3B,oBAAC,IAAD;AACI,QAAA,EAAE,EAAEA,IAAI,CAAC,SAAD,CADZ;AAEI,QAAA,GAAG,EAAEA,IAAI,CAAC,SAAD,CAFb;AAGI,QAAA,MAAM,EAAEA,IAAI,CAAC,QAAD,CAHhB;AAII,QAAA,UAAU,EAAEA,IAAI,CAAC,aAAD,CAAJ,KAAwB,GAAxB,GAA8B,IAA9B,GAAqC,KAJrD;AAKI,QAAA,IAAI,EAAEA,IAAI,CAAC,MAAD,CALd;AAMI,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MANvB;AAOI,QAAA,iBAAiB,EAAE,KAAKV,KAAL,CAAWW,iBAPlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAV;AAWA,aAAOJ,GAAP;AACH,KAbD,MAaO;AACH,aAAO,EAAP;AACH;AACJ;;AAEMJ,EAAAA,OAAP,GAAuB;AACnB,QAAIP,OAAJ,CACI,kBADJ,EAEI,KAAKK,QAFT,EAGI,MAHJ,EAII;AACIW,MAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,EADvB;AAEIC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC;AAFrB,KAJJ,EAQI,MARJ,EASI,MATJ;AAWH;;AAEMf,EAAAA,QAAP,CAAgBgB,IAAhB,EAAkC;AAC9B,UAAMC,GAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAgB,KAAKL,KAAL,CAAWF,EAAnD,CAAjB;AACA,UAAMQ,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACL,IAAD,CAAT,EAAiB;AAACM,MAAAA,IAAI,EAAE;AAAP,KAAjB,CAAb;AACAL,IAAAA,GAAG,CAACM,GAAJ,GAAUC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAV;AACH;;AAGMM,EAAAA,MAAP,GAA2B;AACvB,WACI;AAAK,MAAA,SAAS,EAAE,mBAAmB,KAAK3B,KAAL,CAAW4B,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKxB,WAAL,EADL,CADJ;AAKH;;AAtDgD;;AAyDrD,eAAeP,KAAf","sourcesContent":["import React, {ReactNode} from 'react';\nimport User from \"./User\";\nimport Request from \"../../API/Request\";\n\ninterface UsersProps {\n    id: string,\n    users: any,\n    className: string,\n    toggleWriteRights: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    delete: (event: React.MouseEvent<HTMLImageElement, MouseEvent>) => void,\n}\n\nclass Users extends React.Component<UsersProps, any> {\n    public constructor(props: UsersProps) {\n        super(props);\n        this.fillIcon = this.fillIcon.bind(this);\n        this.getIcon = this.getIcon.bind(this);\n        this.renderUsers = this.renderUsers.bind(this);\n    }\n\n    public renderUsers(): ReactNode {\n        if (undefined === this.props.users['message']) {\n            let res = this.props.users.map((user: any) =>\n                <User\n                    id={user['id_user']}\n                    key={user['id_user']}\n                    pseudo={user['pseudo']}\n                    writeRight={user['write_right'] === '1' ? true : false}\n                    icon={user['icon']}\n                    delete={this.props.delete}\n                    toggleWriteRights={this.props.toggleWriteRights}\n                />\n            );\n            return res;\n        } else {\n            return [];\n        }\n    }\n\n    public getIcon(): void {\n        new Request(\n            '/lobby/getIcon/0',\n            this.fillIcon,\n            'POST',\n            {\n                idUser: this.props.id,\n                path: this.state.logoPath,\n            },\n            'json',\n            'blob',\n        );\n    }\n\n    public fillIcon(data: Blob): void {\n        const img: any = document.getElementById('lobby-logo-' + this.state.id);\n        const blob = new Blob([data], {type: 'image/jpg'});\n        img.src = URL.createObjectURL(blob);\n    }\n\n\n    public render(): ReactNode {\n        return (\n            <div className={'users-section ' + this.props.className}>\n                {this.renderUsers()}\n            </div>\n        );\n    }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}