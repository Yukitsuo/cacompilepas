{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Lobby/LobbyPage.tsx\";\nimport React from 'react';\nimport Request from \"../../API/Request\";\nimport '../../css/Lobby.css';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { ReactComponent as Loader } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/loader.svg\";\nimport LobbyTop from \"./LobbyTop\";\nimport LobbyBody from \"./LobbyBody\";\n\nclass LobbyPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      right: '',\n      courseSheets: [],\n      messages: [],\n      lobbyInformation: []\n    };\n    this.setState = this.setState.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.fillCourseSheets = this.fillCourseSheets.bind(this);\n    this.fillDescription = this.fillDescription.bind(this);\n    this.fillMessages = this.fillMessages.bind(this);\n    this.refreshCourseSheets = this.refreshCourseSheets.bind(this);\n    this.refreshDescription = this.refreshDescription.bind(this);\n    this.refreshMessages = this.refreshMessages.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshCourseSheets();\n    this.refreshDescription();\n    this.refreshMessages();\n  }\n\n  sendMessage(event) {\n    if (13 === event.keyCode) {\n      let content = event.target;\n      new Request('/message/add_message', this.refreshMessages, 'POST', {\n        lobby_id: this.props.location.pathname.split(/\\//)[2],\n        content: content.value\n      });\n      content.value = '';\n    }\n  }\n\n  fillDescription(payload) {\n    this.setState({\n      lobbyInformation: payload['data'][0]\n    });\n  }\n\n  fillMessages(payload) {\n    this.setState({\n      messages: payload\n    });\n  }\n\n  refreshCourseSheets() {\n    new Request('/course_sheet/course_sheets', this.fillCourseSheets, 'POST', {\n      'lobby_id': this.props.location.pathname.split(/\\//)[2]\n    });\n  }\n\n  refreshMessages() {\n    new Request('/message/messages/' + this.props.location.pathname.split(/\\//)[2], this.fillMessages);\n  }\n\n  refreshDescription() {\n    new Request('/lobby/consult/' + this.props.location.pathname.split(/\\//)[2], this.fillDescription);\n  }\n\n  fillCourseSheets(payload) {\n    if (payload['success']) {\n      this.setState({\n        courseSheets: payload\n      });\n      this.setState({\n        right: 'true'\n      });\n    } else if (payload['data']['message'].includes('right')) {\n      this.setState({\n        right: 'false'\n      });\n    } else {\n      this.setState({\n        right: 'true'\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: this.props.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Veuillez choisir un lobby\")), React.createElement(Route, {\n      path: this.props.location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, () => {\n      if ('true' === this.state.right) {\n        return React.createElement(\"section\", {\n          className: \"content row container-fluid pr-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(LobbyTop, {\n          id: this.props.location.pathname.split(/\\//)[2],\n          lobbyInformation: this.state.lobbyInformation,\n          courseSheets: this.state.courseSheets,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(LobbyBody, {\n          id: this.props.location.pathname.split(/\\//)[2],\n          labelLobby: this.state.lobbyInformation['label_lobby'],\n          courseSheets: this.state.courseSheets,\n          onEnter: this.sendMessage,\n          messages: this.state.messages,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }));\n      } else if ('false' === this.state.right) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Tu n'as pas les droits n\\xE9cessaires pour acc\\xE9der \\xE0 ce lobby\");\n      } else {\n        return React.createElement(\"div\", {\n          className: 'mt-5',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }));\n      }\n    })));\n  }\n\n}\n\nexport default LobbyPage;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Lobby/LobbyPage.tsx"],"names":["React","Request","Switch","Route","BrowserRouter","Router","LobbyTop","LobbyBody","LobbyPage","Component","constructor","props","state","right","courseSheets","messages","lobbyInformation","setState","bind","sendMessage","fillCourseSheets","fillDescription","fillMessages","refreshCourseSheets","refreshDescription","refreshMessages","componentDidMount","event","keyCode","content","target","lobby_id","location","pathname","split","value","payload","includes","render","path"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport Request from \"../../API/Request\";\nimport '../../css/Lobby.css';\nimport {\n    Switch,\n    Route,\n    BrowserRouter as Router,\n} from \"react-router-dom\";\nimport {ReactComponent as Loader} from \"../../img/loader.svg\";\nimport LobbyTop from \"./LobbyTop\";\nimport LobbyBody from \"./LobbyBody\";\n\ninterface LobbyState {\n    right: string,\n    courseSheets: [],\n    messages: [],\n    lobbyInformation: any,\n}\n\nclass LobbyPage extends React.Component<any, LobbyState> {\n\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            right: '',\n            courseSheets: [],\n            messages: [],\n            lobbyInformation: [],\n        }\n        this.setState = this.setState.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.fillCourseSheets = this.fillCourseSheets.bind(this);\n        this.fillDescription = this.fillDescription.bind(this);\n        this.fillMessages = this.fillMessages.bind(this);\n        this.refreshCourseSheets = this.refreshCourseSheets.bind(this);\n        this.refreshDescription = this.refreshDescription.bind(this);\n        this.refreshMessages = this.refreshMessages.bind(this);\n    }\n\n    public componentDidMount(): void {\n        this.refreshCourseSheets();\n        this.refreshDescription();\n        this.refreshMessages();\n    }\n\n    public sendMessage(event: React.KeyboardEvent<HTMLDivElement>): void {\n        if (13 === event.keyCode) {\n            let content: any = event.target;\n            new Request(\n                '/message/add_message',\n                this.refreshMessages,\n                'POST',\n                {\n                    lobby_id: this.props.location.pathname.split(/\\//)[2],\n                    content: content.value\n                },\n            );\n            content.value = '';\n        }\n    }\n\n    public fillDescription(payload: any): void {\n        this.setState({lobbyInformation: payload['data'][0]});\n    }\n\n    public fillMessages(payload: any): void {\n        this.setState({messages: payload});\n    }\n\n    public refreshCourseSheets(): void {\n        new Request(\n            '/course_sheet/course_sheets',\n            this.fillCourseSheets,\n            'POST',\n            {\n                'lobby_id': this.props.location.pathname.split(/\\//)[2],\n            }\n        );\n    }\n\n    public refreshMessages(): void {\n        new Request('/message/messages/' + this.props.location.pathname.split(/\\//)[2], this.fillMessages);\n    }\n\n    public refreshDescription(): void {\n        new Request('/lobby/consult/' + this.props.location.pathname.split(/\\//)[2], this.fillDescription);\n    }\n\n    public fillCourseSheets(payload: any): void {\n        if (payload['success']) {\n            this.setState({courseSheets: payload});\n            this.setState({right: 'true'});\n        } else if (payload['data']['message'].includes('right')) {\n            this.setState({right: 'false'});\n        } else {\n            this.setState({right: 'true'});\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path={this.props.path}>\n                        <h3>Veuillez choisir un lobby</h3>\n                    </Route>\n                    <Route path={this.props.location.pathname}>\n                        {() => {\n                            if ('true' === this.state.right) {\n                                return (\n                                    <section className={\"content row container-fluid pr-0\"}>\n                                        <LobbyTop\n                                            id={this.props.location.pathname.split(/\\//)[2]}\n                                            lobbyInformation={this.state.lobbyInformation}\n                                            courseSheets={this.state.courseSheets}\n                                        />\n                                        <LobbyBody id={this.props.location.pathname.split(/\\//)[2]}\n                                                   labelLobby={this.state.lobbyInformation['label_lobby']}\n                                                   courseSheets={this.state.courseSheets}\n                                                   onEnter={this.sendMessage}\n                                                   messages={this.state.messages}\n                                        />\n                                    </section>\n                                );\n                            } else if ('false' === this.state.right) {\n                                return <h2>Tu n'as pas les droits nécessaires pour accéder à ce lobby</h2>\n                            } else {\n                                return <div className={'mt-5'}><Loader/></div>\n                            }\n                        }}\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default LobbyPage;\n"]},"metadata":{},"sourceType":"module"}